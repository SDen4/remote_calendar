{"version":3,"sources":["components/Calendar/assets/columns.tsx","utils/dateFormatter.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/data.ts","components/Calendar/Calendar.tsx","views/Root/Root.tsx","App/App.tsx","index.tsx","components/Calendar/assets/columns.module.css","components/Calendar/Calendar.module.css","views/Root/Root.module.css"],"names":["dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","dateGenerator","currentDate","Date","datesRange","i","push","date","getTime","getDay","monthsNames","Number","monthDays","columns","length","currDayMonth","nextDayMonth","Header","className","clsx","styles","weekend","cell","accessor","data","col1","col2","Calendar","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","table","map","headerGroup","getHeaderGroupProps","key","Math","random","headers","column","getHeaderProps","tableHeader","render","row","getRowProps","cells","getCellProps","tableCell","Root","root_wrapper","section_wrapper","calendar_wrapper","App","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ef25bf06.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './columns.module.css';\n\nconst datesRange = dateGenerator();\n\nlet monthDays: any = [];\nconst columns: any = [];\n\nfor (let i = 0; i < datesRange.length; i++) {\n  let currDayMonth = datesRange[i].date.slice(3, 5);\n  let nextDayMonth =\n    datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n  let year = datesRange[i].date.slice(6, 8);\n\n  if (currDayMonth === nextDayMonth) {\n    monthDays.push({\n      Header: (\n        <div\n          className={clsx(\n            datesRange[i].day === 0 || datesRange[i].day === 6\n              ? styles.weekend\n              : '',\n            styles.cell,\n          )}\n        >\n          {datesRange[i].date.slice(0, 2)}\n        </div>\n      ),\n      accessor: datesRange[i].date,\n    });\n  } else {\n    monthDays.push({\n      Header: (\n        <div\n          className={clsx(\n            datesRange[i].day === 0 || datesRange[i].day === 6\n              ? styles.weekend\n              : '',\n            styles.cell,\n          )}\n        >\n          {datesRange[i].date.slice(0, 2)}\n        </div>\n      ),\n      accessor: datesRange[i].date,\n    });\n\n    columns.push({\n      Header: (\n        <div className={styles.cell}>{`${monthsNames(\n          currDayMonth,\n        )} '${year}`}</div>\n      ),\n      accessor: currDayMonth,\n      columns: [...monthDays],\n    });\n    monthDays.length = 0;\n  }\n}\n\nexport default columns;\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = () => {\n  const currentDate = new Date();\n  const datesRange: any[] = [];\n  const datesLength = 365; // days in initial range\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'январь',\n    'февраль',\n    'март',\n    'апрель',\n    'май',\n    'июнь',\n    'июль',\n    'август',\n    'сентябрь',\n    'октябрь',\n    'ноябрь',\n    'декабрь',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","const data: any = [\n  {\n    col1: 'Hello',\n    col2: 'World',\n  },\n  {\n    col1: 'react-table',\n    col2: 'rocks',\n  },\n  {\n    col1: 'whatever',\n    col2: 'you want',\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport { useTable } from 'react-table';\n\nimport columns from './assets/columns';\nimport data from './assets/data';\n\nimport styles from './Calendar.module.css';\n\nconst Calendar: React.FC = () => {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <table {...getTableProps()} className={styles.table}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr\n            {...headerGroup.getHeaderGroupProps()}\n            key={`${headerGroup} ${Math.random()}`}\n          >\n            {headerGroup.headers.map((column) => (\n              <th\n                {...column.getHeaderProps()}\n                className={styles.tableHeader}\n                key={`${column} ${Math.random()}`}\n              >\n                {column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} key={`${row} ${Math.random()}`}>\n              {row.cells.map((cell) => {\n                return (\n                  <td\n                    {...cell.getCellProps()}\n                    className={styles.tableCell}\n                    key={`${cell} ${Math.random()}`}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Calendar;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Calendar from '../../components/Calendar';\n\nimport styles from './Root.module.css';\n\nconst Root: React.FC = () => {\n  return (\n    <div className={styles.root_wrapper}>\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      <section\n        className={clsx(styles.section_wrapper, styles.calendar_wrapper)}\n      >\n        <Calendar />\n      </section>\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\n\nimport Root from '../views/Root';\n\nimport './App.module.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"columns_cell__32YGY\",\"weekend\":\"columns_weekend__3-10h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Calendar_table__2gz7h\",\"tableHeader\":\"Calendar_tableHeader__1Tj0Q\",\"tableCell\":\"Calendar_tableCell__3k-KB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrapper\":\"Root_root_wrapper__eL6rt\",\"section_wrapper\":\"Root_section_wrapper__dgqip\",\"calendar_wrapper\":\"Root_calendar_wrapper__1t7Ie\"};"],"sourceRoot":""}