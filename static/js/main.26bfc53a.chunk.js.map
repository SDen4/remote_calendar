{"version":3,"sources":["components/Calendar/assets/columns.module.css","components/Calendar/Calendar.module.css","views/Root/Root.module.css","store/constants.ts","store/Reducer/Reducer.ts","store/RootReducer.ts","utils/dateFormatter.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/columns.tsx","store/actions.ts","store/Reducer/sagas/FetchSaga.ts","store/RootSaga.ts","components/Calendar/Calendar.tsx","views/Root/Root.tsx","App/App.tsx","index.tsx"],"names":["module","exports","FETCH_SAGA","SAVE_ALL_DATA","SAVE_ALL_COLUMNS","SAVE_FIRST_RANGE_DATE","initialState","data","name","columns","firstRangeDate","RootReducer","combineReducers","reducer","state","action","type","dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","dateGenerator","date","currentDate","datesRange","i","push","Date","getTime","getDay","monthsNames","Number","columnGenerator","monthDays","Header","className","styles","headerFirstCol","accessor","length","currDayMonth","nextDayMonth","clsx","weekend","cell","Cell","row","index","rows","sortArr","filter","el","Object","keys","join","includes","column","id","value","headerTopCell","saveAllColumns","sagaWorker","FetchSagaWatcher","localStorage","getItem","firstRangeDateFromLocalStorage","JSON","parse","calendarDataFromLocalStorage","initialColumns","put","newDay","setItem","stringify","console","log","takeEvery","rootSaga","all","fork","Calendar","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","table","map","headerGroup","getHeaderGroupProps","key","Math","random","headers","getHeaderProps","firstCell","tableHeader","render","getRowProps","cells","getCellProps","tableCell","Root","dispatch","useDispatch","useSelector","store","useEffect","fetchSaga","root_wrapper","section_wrapper","calendar_wrapper","App","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.26bfc53a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"columns_cell__32YGY\",\"weekend\":\"columns_weekend__3-10h\",\"headerFirstCol\":\"columns_headerFirstCol__2_EEi\",\"headerTopCell\":\"columns_headerTopCell__1xdye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Calendar_table__2gz7h\",\"tableHeader\":\"Calendar_tableHeader__1Tj0Q\",\"tableCell\":\"Calendar_tableCell__3k-KB\",\"cell\":\"Calendar_cell__14FkO\",\"firstCell\":\"Calendar_firstCell__3YC6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrapper\":\"Root_root_wrapper__eL6rt\",\"section_wrapper\":\"Root_section_wrapper__dgqip\",\"calendar_wrapper\":\"Root_calendar_wrapper__1t7Ie\"};","export const FETCH_SAGA = 'FETCH_SAGA';\n\nexport const SAVE_ALL_DATA = 'SAVE_ALL_DATA';\nexport const SAVE_ALL_COLUMNS = 'SAVE_ALL_COLUMNS';\nexport const SAVE_FIRST_RANGE_DATE = 'SAVE_FIRST_RANGE_DATE';\n","import {\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n} from '../constants';\nimport { ActionsType } from '../actions';\nimport { InitialStateType } from '../types';\n\nconst initialState: InitialStateType = {\n  data: [\n    {\n      name: 'Total office',\n    },\n    {\n      name: 'Total remote',\n    },\n  ],\n  columns: [],\n  firstRangeDate: null,\n};\n\nexport const Reducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case SAVE_ALL_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n\n    case SAVE_ALL_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n\n    case SAVE_FIRST_RANGE_DATE:\n      return {\n        ...state,\n        firstRangeDate: action.firstRangeDate,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { Reducer } from './Reducer/Reducer';\n\nexport const RootReducer = combineReducers({\n  reducer: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = (date: any) => {\n  const currentDate = date;\n  const datesRange: any[] = [];\n  const datesLength = 365; // days in initial range\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './columns.module.css';\n\nconst columnGenerator = (date: Date) => {\n  if (!date) {\n    return [];\n  }\n\n  const datesRange = dateGenerator(new Date(date));\n\n  let monthDays: any = [];\n  const columns: any = [\n    {\n      Header: <div className={styles.headerFirstCol}>Employee</div>,\n      accessor: 'name',\n    },\n  ];\n\n  for (let i = 0; i < datesRange.length; i++) {\n    let currDayMonth = datesRange[i].date.slice(3, 5);\n    let nextDayMonth =\n      datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n    let year = datesRange[i].date.slice(6, 8);\n\n    if (currDayMonth === nextDayMonth) {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `accessor_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return <div>{sortArr.length}</div>;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return <div>{cell.rows.length - sortArr.length - 2}</div>;\n          }\n\n          return <div>{cell.value}</div>;\n        },\n      });\n    } else {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `accessor_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return <div>{sortArr.length}</div>;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return <div>{cell.rows.length - sortArr.length - 2}</div>;\n          }\n          return <div>{cell.value}</div>;\n        },\n      });\n\n      columns.push({\n        Header: (\n          <div\n            className={clsx(styles.cell, styles.headerTopCell)}\n          >{`${monthsNames(currDayMonth)} '${year}`}</div>\n        ),\n        accessor: currDayMonth,\n        columns: [...monthDays],\n      });\n      monthDays.length = 0;\n    }\n  }\n\n  return columns;\n};\n\nexport default columnGenerator;\n","import {\n  FETCH_SAGA,\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n} from './constants';\nimport { IData } from './types';\n\nexport const fetchSaga = (data: IData[]) => {\n  return {\n    type: FETCH_SAGA,\n    data,\n  } as const;\n};\n\nexport const saveAllData = (data: IData[]) => {\n  return {\n    type: SAVE_ALL_DATA,\n    data,\n  } as const;\n};\n\nexport const saveAllColumns = (columns: any[]) => {\n  return {\n    type: SAVE_ALL_COLUMNS,\n    columns,\n  } as const;\n};\n\nexport const saveFirstRangeDate = (firstRangeDate: Date) => {\n  return {\n    type: SAVE_FIRST_RANGE_DATE,\n    firstRangeDate,\n  } as const;\n};\n\ntype FetchSagaType = ReturnType<typeof fetchSaga>;\ntype saveAllDataType = ReturnType<typeof saveAllData>;\ntype saveAllColumnsType = ReturnType<typeof saveAllColumns>;\ntype saveFirstRangeDateType = ReturnType<typeof saveFirstRangeDate>;\n\nexport type ActionsType =\n  | FetchSagaType\n  | saveAllDataType\n  | saveAllColumnsType\n  | saveFirstRangeDateType;\n","import { put, takeEvery } from 'redux-saga/effects';\n\nimport columnGenerator from '../../../components/Calendar/assets/columns';\n\nimport { saveAllColumns, saveAllData, saveFirstRangeDate } from '../../actions';\n\nimport { FETCH_SAGA } from '../../constants';\n\nimport { FetchSagaActionType, IData } from '../../types';\n\nfunction* sagaWorker(action: FetchSagaActionType) {\n  try {\n    const firstRangeDateFromLocalStorage: Date = yield localStorage.getItem(\n      'firstRangeDate',\n    );\n    const calendarDataFromLocalStorage: IData[] = yield JSON.parse(\n      localStorage.getItem('calendar') || '[]',\n    );\n\n    if (firstRangeDateFromLocalStorage !== null) {\n      const initialColumns: any[] = yield columnGenerator(\n        firstRangeDateFromLocalStorage,\n      );\n\n      yield put(saveAllColumns(initialColumns));\n      yield put(saveFirstRangeDate(firstRangeDateFromLocalStorage));\n    } else {\n      const newDay = new Date();\n      const initialColumns: any[] = yield columnGenerator(newDay);\n\n      yield put(saveAllColumns(initialColumns));\n      yield localStorage.setItem('firstRangeDate', String(newDay));\n    }\n\n    if (calendarDataFromLocalStorage.length) {\n      yield put(saveAllData(calendarDataFromLocalStorage));\n    } else {\n      yield localStorage.setItem('calendar', JSON.stringify(action.data));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* FetchSagaWatcher() {\n  yield takeEvery(FETCH_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { FetchSagaWatcher } from './Reducer/sagas/FetchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(FetchSagaWatcher)]);\n}\n","import React from 'react';\nimport { useTable } from 'react-table';\n\nimport { ICalendar } from './types';\n\nimport styles from './Calendar.module.css';\nimport clsx from 'clsx';\n\nconst Calendar: React.FC<ICalendar> = ({ data, columns }) => {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <table {...getTableProps()} className={styles.table}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr\n            {...headerGroup.getHeaderGroupProps()}\n            key={`${headerGroup} ${Math.random()}`}\n          >\n            {headerGroup.headers.map((column, i) => (\n              <th\n                {...column.getHeaderProps()}\n                className={clsx(\n                  i === 0 && styles.firstCell,\n                  styles.tableHeader,\n                )}\n                key={`${column} ${Math.random()}`}\n              >\n                {column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} key={`${row} ${Math.random()}`}>\n              {row.cells.map((cell, i) => {\n                return (\n                  <td\n                    {...cell.getCellProps()}\n                    className={clsx(\n                      i === 0 && styles.firstCell,\n                      styles.tableCell,\n                    )}\n                    key={`${cell} ${Math.random()}`}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Calendar;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport Calendar from '../../components/Calendar';\n\nimport { IData } from '../../store/types';\nimport { fetchSaga } from '../../store/actions';\nimport { AppStateType } from '../../store/RootReducer';\n\nimport styles from './Root.module.css';\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const columns = useSelector<AppStateType, any[]>(\n    (store) => store.reducer.columns,\n  );\n  const data = useSelector<AppStateType, IData[]>(\n    (store) => store.reducer.data,\n  );\n\n  useEffect(() => {\n    dispatch(fetchSaga(data));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  return (\n    <div className={styles.root_wrapper}>\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      <section\n        className={clsx(styles.section_wrapper, styles.calendar_wrapper)}\n      >\n        <Calendar data={data} columns={columns} />\n      </section>\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\n\nimport Root from '../views/Root';\n\nimport './App.module.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\nimport App from './App/App';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}