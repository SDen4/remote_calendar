{"version":3,"sources":["store/constants.ts","store/actions/actions.ts","views/Root/styles.module.css","store/selectors/selectors.ts","components/Calendar/assets/styles.module.css","components/Notice/styles.module.css","utils/dateFormatter.ts","ui/Button/Button.tsx","components/Loader/styles.module.css","constants/table.ts","ui/Button/styles.module.css","store/reducers/Reducer.ts","store/RootReducer.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/columns.tsx","store/sagas/FetchSaga.ts","store/RootSaga.ts","components/Loader/Loader.tsx","components/Notice/Notice.tsx","components/MaxEmployee/MaxEmployee.tsx","views/Root/Root.tsx","index.tsx"],"names":["FETCH_SAGA","SAVE_ALL_DATA","SAVE_ALL_COLUMNS","SAVE_FIRST_RANGE_DATE","SAVE_MAX_VALUE","SET_MODAL_FLAG","SET_LOADER_FLAG","ADD_NEW_EMPLOYEE","ADD_COLUMNS_QUANTITY","fetchSaga","data","maxValue","columnsQuantity","type","CONST","saveAllData","saveAllColumns","columns","saveFirstRangeDate","firstRangeDate","setModalFlag","modalFlag","addNewEmployee","newEmployee","saveMaxValue","setColumnsQuantity","setLoaderFlag","loaderFlag","module","exports","dataSelect","store","reducer","columnsSelect","firstRangeDateSelect","modalFlagSelect","maxValueSelect","columnsQuantitySelect","loaderFlagSelect","dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","Button","buttonText","buttonType","onButtonClick","stylesButton","disabled","onClick","className","clsx","styles","button","memo","initialData","name","defaultCell","row","cell","initialState","RootReducer","combineReducers","state","action","dateGenerator","date","datesLength","currentDate","datesRange","i","push","Date","getTime","getDay","monthsNames","Number","columnGenerator","maxValueIn","monthDays","Header","headerFirstCol","accessor","length","currDayMonth","nextDayMonth","weekend","Cell","index","rows","filter","el","Object","keys","join","includes","column","id","sortArr","value","red","headerTopCell","sagaWorker","FetchSagaWatcher","localStorage","getItem","firstRangeDateFromLocalStorage","JSON","parse","calendarDataFromLocalStorage","columnsQuantityFromLocalStorage","put","setItem","initialColumns","stringify","console","log","takeEvery","rootSaga","all","fork","Loader","loaderWrapper","ldsDefault","Notice","example_wrapper","example_item","examle_empty","examle_full","MaxEmployee","dispatch","useDispatch","useSelector","onChangeMaxEmployees","useCallback","htmlFor","min","onChange","event","target","LazyCalendar","React","lazy","LazyModalContent","LazyModalDelContent","LazyModal","Root","useEffect","useState","delModal","setDelModal","onOpenModal","onCloseModal","onToggleDelModal","addPeriodHandler","newColumnsQuantity","appHeight","setAppHeight","window","innerHeight","addEventListener","outerHeight","root","style","innerWidth","minHeight","fallback","onCloseButtonClick","modalContent","section","buttons","deleteButton","disabledButton","calendar","addPeriodButtonWrapper","addPeriodButton","sectionTotal","sectionMaxEmployees","sectionNotice","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.160b0a99.chunk.js","sourcesContent":["export const FETCH_SAGA = 'FETCH_SAGA';\n\nexport const SAVE_ALL_DATA = 'SAVE_ALL_DATA';\nexport const SAVE_ALL_COLUMNS = 'SAVE_ALL_COLUMNS';\nexport const SAVE_FIRST_RANGE_DATE = 'SAVE_FIRST_RANGE_DATE';\nexport const SAVE_MAX_VALUE = 'SAVE_MAX_VALUE';\n\nexport const SET_MODAL_FLAG = 'SET_MODAL_FLAG';\nexport const SET_LOADER_FLAG = 'SET_LOADER_FLAG';\n\nexport const ADD_NEW_EMPLOYEE = 'ADD_NEW_EMPLOYEE';\nexport const ADD_COLUMNS_QUANTITY = 'ADD_COLUMNS_QUANTITY';\n","import * as CONST from '../constants';\n\nimport { IData } from '../types';\n\nexport const fetchSaga = (\n  data: IData[],\n  maxValue: number,\n  columnsQuantity: number,\n) => {\n  return {\n    type: CONST.FETCH_SAGA,\n    data,\n    maxValue,\n    columnsQuantity,\n  } as const;\n};\n\nexport const saveAllData = (data: IData[]) => {\n  return {\n    type: CONST.SAVE_ALL_DATA,\n    data,\n  } as const;\n};\n\nexport const saveAllColumns = (columns: any[]) => {\n  return {\n    type: CONST.SAVE_ALL_COLUMNS,\n    columns,\n  } as const;\n};\n\nexport const saveFirstRangeDate = (firstRangeDate: Date) => {\n  return {\n    type: CONST.SAVE_FIRST_RANGE_DATE,\n    firstRangeDate,\n  } as const;\n};\n\nexport const setModalFlag = (modalFlag: boolean) => {\n  return {\n    type: CONST.SET_MODAL_FLAG,\n    modalFlag,\n  } as const;\n};\n\nexport const addNewEmployee = (newEmployee: IData) => {\n  return {\n    type: CONST.ADD_NEW_EMPLOYEE,\n    newEmployee,\n  } as const;\n};\n\nexport const saveMaxValue = (maxValue: number) => {\n  return {\n    type: CONST.SAVE_MAX_VALUE,\n    maxValue,\n  } as const;\n};\n\nexport const setColumnsQuantity = (columnsQuantity: number) => {\n  return {\n    type: CONST.ADD_COLUMNS_QUANTITY,\n    columnsQuantity,\n  } as const;\n};\n\nexport const setLoaderFlag = (loaderFlag: boolean) => {\n  return {\n    type: CONST.SET_LOADER_FLAG,\n    loaderFlag,\n  } as const;\n};\n\ntype FetchSagaType = ReturnType<typeof fetchSaga>;\ntype saveAllDataType = ReturnType<typeof saveAllData>;\ntype saveAllColumnsType = ReturnType<typeof saveAllColumns>;\ntype saveFirstRangeDateType = ReturnType<typeof saveFirstRangeDate>;\ntype setModalFlagType = ReturnType<typeof setModalFlag>;\ntype addNewEmployeeType = ReturnType<typeof addNewEmployee>;\ntype saveMaxValueType = ReturnType<typeof saveMaxValue>;\ntype setColumnsQuantityType = ReturnType<typeof setColumnsQuantity>;\ntype setLoaderFlagType = ReturnType<typeof setLoaderFlag>;\n\nexport type ActionsType =\n  | FetchSagaType\n  | saveAllDataType\n  | saveAllColumnsType\n  | saveFirstRangeDateType\n  | setModalFlagType\n  | addNewEmployeeType\n  | saveMaxValueType\n  | setColumnsQuantityType\n  | setLoaderFlagType;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__14MWh\",\"section\":\"styles_section__2J9Py\",\"calendar\":\"styles_calendar__VuDIJ\",\"buttons\":\"styles_buttons__2dg25\",\"deleteButton\":\"styles_deleteButton__2beEt\",\"sectionTotal\":\"styles_sectionTotal__1VwcI\",\"disabledButton\":\"styles_disabledButton__1QAs0\",\"sectionMaxEmployees\":\"styles_sectionMaxEmployees__1uq_e\",\"addPeriodButtonWrapper\":\"styles_addPeriodButtonWrapper__3cviO\",\"addPeriodButton\":\"styles_addPeriodButton__3dEou\",\"sectionNotice\":\"styles_sectionNotice__2oMqt\",\"loading\":\"styles_loading__1ote4\"};","import { AppStateType } from '../RootReducer';\n\nexport const dataSelect = (store: AppStateType) => store.reducer.data;\n\nexport const columnsSelect = (store: AppStateType) => store.reducer.columns;\n\nexport const firstRangeDateSelect = (store: AppStateType) =>\n  store.reducer.firstRangeDate;\n\nexport const modalFlagSelect = (store: AppStateType) => store.reducer.modalFlag;\n\nexport const maxValueSelect = (store: AppStateType) => store.reducer.maxValue;\n\nexport const columnsQuantitySelect = (store: AppStateType) =>\n  store.reducer.columnsQuantity;\n\nexport const loaderFlagSelect = (store: AppStateType) =>\n  store.reducer.loaderFlag;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"styles_cell__jR611\",\"weekend\":\"styles_weekend__1Qcrv\",\"headerFirstCol\":\"styles_headerFirstCol__1l5g2\",\"headerTopCell\":\"styles_headerTopCell__1OupR\",\"currentDate\":\"styles_currentDate__3b3uE\",\"red\":\"styles_red__UYbq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example_wrapper\":\"styles_example_wrapper__27iou\",\"example_item\":\"styles_example_item__13YvF\",\"examle_empty\":\"styles_examle_empty__2RCxh\",\"examle_full\":\"styles_examle_full__1AxDR\"};","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","/* eslint-disable react/button-has-type */\nimport React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.module.css';\n\ninterface IProps {\n  buttonText: string;\n  buttonType: 'button' | 'submit' | 'reset';\n  onButtonClick?: (event: React.SyntheticEvent) => void;\n  stylesButton?: string;\n  disabled?: boolean;\n}\n\nconst Button: React.FC<IProps> = ({\n  buttonText,\n  buttonType,\n  onButtonClick,\n  stylesButton,\n  disabled,\n}) => {\n  return (\n    <button\n      type={buttonType}\n      aria-label={buttonText}\n      onClick={onButtonClick}\n      className={clsx(styles.button, stylesButton)}\n      disabled={disabled}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default memo(Button);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"styles_loaderWrapper__2OFeU\",\"ldsDefault\":\"styles_ldsDefault__3V2fP\"};","import { IData } from '../store/types';\n\nexport const initialData: IData[] = [\n  {\n    name: 'Total office',\n  },\n  {\n    name: 'Total remote',\n  },\n];\n\nexport const defaultCell = {\n  row: '',\n  cell: '',\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2MhAC\"};","import * as CONST from '../constants';\n\nimport { initialData } from '../../constants/table';\n\nimport { ActionsType } from '../actions/actions';\nimport { InitialStateType } from '../types';\n\nconst initialState: InitialStateType = {\n  data: initialData,\n  columns: [],\n  firstRangeDate: null,\n  modalFlag: false,\n  maxValue: 1,\n  columnsQuantity: 90,\n  loaderFlag: true,\n};\n\nexport const Reducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case CONST.SAVE_ALL_DATA:\n      return { ...state, data: action.data };\n\n    case CONST.SAVE_ALL_COLUMNS:\n      return { ...state, columns: action.columns };\n\n    case CONST.SAVE_FIRST_RANGE_DATE:\n      return { ...state, firstRangeDate: action.firstRangeDate };\n\n    case CONST.SET_MODAL_FLAG:\n      return { ...state, modalFlag: action.modalFlag };\n\n    case CONST.ADD_NEW_EMPLOYEE:\n      return { ...state, data: [action.newEmployee, ...state.data] };\n\n    case CONST.SAVE_MAX_VALUE:\n      return { ...state, maxValue: action.maxValue };\n\n    case CONST.ADD_COLUMNS_QUANTITY:\n      return { ...state, columnsQuantity: action.columnsQuantity };\n\n    case CONST.SET_LOADER_FLAG:\n      return { ...state, loaderFlag: action.loaderFlag };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { Reducer } from './reducers/Reducer';\n\nexport const RootReducer = combineReducers({\n  reducer: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = (date: Date, datesLength: number) => {\n  const currentDate = date;\n  const datesRange: any[] = [];\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './styles.module.css';\nimport { dateFormatter } from '../../../utils/dateFormatter';\n\nconst columnGenerator = (date: Date, maxValue: number, datesLength: number) => {\n  if (!date) {\n    return [];\n  }\n\n  const datesRange = dateGenerator(new Date(date), datesLength);\n  const currentDate = dateFormatter(new Date());\n  const maxValueIn = maxValue || 1;\n\n  let monthDays: any = [];\n  const columns: any = [\n    {\n      Header: <div className={styles.headerFirstCol}>Employee</div>,\n      accessor: 'name',\n    },\n  ];\n\n  for (let i = 0; i < datesRange.length; i++) {\n    let currDayMonth = datesRange[i].date.slice(3, 5);\n    let nextDayMonth =\n      datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n    let year = datesRange[i].date.slice(6, 8);\n\n    if (currDayMonth === nextDayMonth) {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n              datesRange[i].date === currentDate && styles.currentDate,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n\n          return <div>{cell.value}</div>;\n        },\n      });\n    } else {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n          return <div>{cell.value}</div>;\n        },\n      });\n\n      columns.push({\n        Header: (\n          <div\n            className={clsx(styles.cell, styles.headerTopCell)}\n          >{`${monthsNames(currDayMonth)} '${year}`}</div>\n        ),\n        accessor: currDayMonth,\n        columns: [...monthDays],\n      });\n      monthDays.length = 0;\n    }\n  }\n  return columns;\n};\n\nexport default columnGenerator;\n","import { put, takeEvery } from 'redux-saga/effects';\n\nimport columnGenerator from '../../components/Calendar/assets/columns';\n\nimport {\n  saveAllColumns,\n  saveAllData,\n  saveFirstRangeDate,\n  saveMaxValue,\n  setColumnsQuantity,\n  setLoaderFlag,\n} from '../actions/actions';\n\nimport { FETCH_SAGA } from '../constants';\n\nimport { FetchSagaActionType, IData } from '../types';\n\nfunction* sagaWorker(action: FetchSagaActionType) {\n  try {\n    const firstRangeDateFromLocalStorage: Date = yield localStorage.getItem(\n      'firstRangeDate',\n    );\n    const calendarDataFromLocalStorage: IData[] = yield JSON.parse(\n      localStorage.getItem('calendar') || '[]',\n    );\n    const maxValue: number = yield localStorage.getItem('maxValue');\n    const columnsQuantityFromLocalStorage: number = yield localStorage.getItem(\n      'columnsQuantity',\n    );\n\n    if (maxValue) {\n      yield put(saveMaxValue(Number(maxValue)));\n    } else {\n      yield localStorage.setItem('maxValue', String(action.maxValue));\n    }\n\n    let initialColumns: any[] = yield [];\n\n    if (columnsQuantityFromLocalStorage) {\n      yield put(setColumnsQuantity(Number(columnsQuantityFromLocalStorage)));\n    } else {\n      yield localStorage.setItem(\n        'columnsQuantity',\n        String(action.columnsQuantity),\n      );\n    }\n\n    if (firstRangeDateFromLocalStorage) {\n      initialColumns = yield columnGenerator(\n        firstRangeDateFromLocalStorage,\n        maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield put(saveFirstRangeDate(firstRangeDateFromLocalStorage));\n    } else {\n      initialColumns = yield columnGenerator(\n        new Date(),\n        action.maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield localStorage.setItem('firstRangeDate', String(new Date()));\n    }\n\n    yield put(saveAllColumns(initialColumns));\n\n    if (calendarDataFromLocalStorage.length) {\n      yield put(saveAllData(calendarDataFromLocalStorage));\n    } else {\n      yield localStorage.setItem('calendar', JSON.stringify(action.data));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  } finally {\n    yield put(setLoaderFlag(false));\n  }\n}\n\nexport function* FetchSagaWatcher() {\n  yield takeEvery(FETCH_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { FetchSagaWatcher } from './sagas/FetchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(FetchSagaWatcher)]);\n}\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className={styles.loaderWrapper}>\n      <div className={styles.ldsDefault}>\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nconst Notice: React.FC = () => {\n  return (\n    <>\n      <h3>Notice</h3>\n\n      <div className={styles.example_wrapper}>\n        <div className={styles.example_item}>\n          <div className={styles.examle_empty} />\n          <span>office</span>\n        </div>\n\n        <div className={styles.example_item}>\n          <div className={styles.examle_empty}>\n            <div className={styles.examle_full} />\n          </div>\n          <span>remote</span>\n        </div>\n      </div>\n\n      <p>\n        You can change statuses of one employee in a few days at once by click\n        holding &apos;Ctrl&apos; button for Windows and Linux or\n        &apos;Command&apos; for MacOs\n      </p>\n    </>\n  );\n};\n\nexport default Notice;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchSaga, saveMaxValue } from '../../store/actions/actions';\nimport {\n  columnsQuantitySelect,\n  dataSelect,\n  maxValueSelect,\n} from '../../store/selectors';\n\nconst MaxEmployee: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector(dataSelect);\n  const columnsQuantity = useSelector(columnsQuantitySelect);\n  const maxValue = useSelector(maxValueSelect);\n\n  const onChangeMaxEmployees = useCallback(\n    (value: number) => {\n      if (value < 0) {\n        return;\n      }\n\n      localStorage.setItem('maxValue', String(value));\n      dispatch(saveMaxValue(value));\n      dispatch(fetchSaga(data, value, columnsQuantity));\n    },\n    [dispatch, columnsQuantity, data],\n  );\n\n  return (\n    <>\n      <label htmlFor=\"label\">Set max employees in office</label>\n      <input\n        id=\"label\"\n        type=\"number\"\n        min={1}\n        value={maxValue}\n        onChange={(event) => onChangeMaxEmployees(Number(event?.target.value))}\n      />\n    </>\n  );\n};\n\nexport default MaxEmployee;\n","import React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  fetchSaga,\n  setColumnsQuantity,\n  setModalFlag,\n} from '../../store/actions/actions';\n\nimport Button from '../../ui/Button';\nimport Loader from '../../components/Loader';\nimport Notice from '../../components/Notice';\nimport MaxEmployee from '../../components/MaxEmployee';\nimport columnGenerator from '../../components/Calendar/assets/columns';\n\nimport styles from './styles.module.css';\nimport {\n  columnsQuantitySelect,\n  dataSelect,\n  firstRangeDateSelect,\n  loaderFlagSelect,\n  maxValueSelect,\n  modalFlagSelect,\n} from '../../store/selectors';\n\nconst LazyCalendar = React.lazy(() => import('../../components/Calendar'));\nconst LazyModalContent = React.lazy(\n  () => import('../../components/ModalContent'),\n);\nconst LazyModalDelContent = React.lazy(\n  () => import('../../components/ModalDelContent'),\n);\nconst LazyModal = React.lazy(() => import('../../ui/Modal'));\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const columnsQuantity = useSelector(columnsQuantitySelect);\n  const data = useSelector(dataSelect);\n  const firstRangeDate = useSelector(firstRangeDateSelect);\n  const loaderFlag = useSelector(loaderFlagSelect);\n  const maxValue = useSelector(maxValueSelect);\n  const modalFlag = useSelector(modalFlagSelect);\n\n  useEffect(() => {\n    dispatch(fetchSaga(data, maxValue, columnsQuantity));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const [delModal, setDelModal] = useState<boolean>(false);\n\n  const onOpenModal = useCallback(() => {\n    dispatch(setModalFlag(true));\n  }, [dispatch]);\n\n  const onCloseModal = useCallback(() => {\n    dispatch(setModalFlag(false));\n  }, [dispatch]);\n\n  const onToggleDelModal = useCallback(() => {\n    setDelModal(!delModal);\n  }, [delModal]);\n\n  useEffect(() => {\n    // @ts-ignore\n    return columnGenerator(firstRangeDate, maxValue, 90);\n  }, [firstRangeDate, maxValue]);\n\n  const addPeriodHandler = useCallback(() => {\n    const newColumnsQuantity = columnsQuantity + 90;\n    localStorage.setItem('columnsQuantity', String(newColumnsQuantity));\n    dispatch(setColumnsQuantity(newColumnsQuantity));\n    dispatch(fetchSaga(data, maxValue, newColumnsQuantity));\n  }, [dispatch, columnsQuantity, data, maxValue]);\n\n  // app height\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [appHeight, setAppHeight] = useState<number>(0);\n  useEffect(() => setAppHeight(window.innerHeight), []);\n\n  // resize\n  window.addEventListener(\n    'resize',\n    () => setAppHeight(window.outerHeight),\n    true,\n  );\n  // app height\n\n  return (\n    <div\n      className={styles.root}\n      style={window.innerWidth < 480 ? { minHeight: appHeight } : {}}\n    >\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      {loaderFlag ? (\n        <Loader />\n      ) : (\n        <>\n          {modalFlag && (\n            <Suspense fallback={<Loader />}>\n              <LazyModal\n                onCloseButtonClick={onCloseModal}\n                modalContent={LazyModalContent}\n              />\n            </Suspense>\n          )}\n\n          {delModal && (\n            <Suspense fallback={<Loader />}>\n              <LazyModal\n                onCloseButtonClick={onToggleDelModal}\n                modalContent={LazyModalDelContent}\n              />\n            </Suspense>\n          )}\n\n          <section className={clsx(styles.section, styles.buttons)}>\n            <Button\n              buttonText=\"Add employee\"\n              buttonType=\"button\"\n              onButtonClick={onOpenModal}\n            />\n\n            {data.length > 2 && (\n              <Button\n                buttonText={\n                  data.length === 3 ? 'Delete employee' : 'Delete all employees'\n                }\n                buttonType=\"button\"\n                onButtonClick={onToggleDelModal}\n                stylesButton={clsx(\n                  styles.deleteButton,\n                  data.length <= 2 && styles.disabledButton,\n                )}\n                disabled={data.length <= 2}\n              />\n            )}\n          </section>\n\n          {data.length > 2 && (\n            <>\n              <section className={clsx(styles.section, styles.calendar)}>\n                <Suspense fallback={<Loader />}>\n                  <LazyCalendar />\n                </Suspense>\n\n                <div className={styles.addPeriodButtonWrapper}>\n                  <Button\n                    buttonText=\"Add period\"\n                    buttonType=\"button\"\n                    stylesButton={styles.addPeriodButton}\n                    onButtonClick={addPeriodHandler}\n                  />\n                </div>\n              </section>\n\n              <section className={clsx(styles.section, styles.sectionTotal)}>\n                <span>Total employees:</span>\n                <span>{data.length - 2}</span>\n              </section>\n\n              <section\n                className={clsx(styles.section, styles.sectionMaxEmployees)}\n              >\n                <MaxEmployee />\n              </section>\n\n              <section className={clsx(styles.section, styles.sectionNotice)}>\n                <Notice />\n              </section>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport Root from './views/Root';\n\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Root />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}