{"version":3,"sources":["views/Root/Root.module.css","components/Calendar/assets/columns.module.css","components/ModalContent/ModalContent.module.css","ui/Modal/Modal.module.css","components/ModalDelContent/ModalDelContent.module.css","ui/Button/Button.module.css","store/constants.ts","constants/table.ts","store/Reducer/Reducer.ts","store/RootReducer.ts","utils/dateFormatter.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/columns.tsx","store/actions.ts","store/Reducer/sagas/FetchSaga.ts","store/RootSaga.ts","ui/Modal/Modal.tsx","ui/Button/Button.tsx","components/Calendar/Calendar.tsx","utils/accessorDatesGenerator.ts","components/ModalContent/ModalContent.tsx","components/ModalDelContent/ModalDelContent.tsx","views/Root/Root.tsx","App/App.tsx","index.tsx","components/Calendar/Calendar.module.css"],"names":["module","exports","FETCH_SAGA","SAVE_ALL_DATA","SAVE_ALL_COLUMNS","SAVE_FIRST_RANGE_DATE","SAVE_MAX_VALUE","SET_MODAL_FLAG","ADD_NEW_EMPLOYEE","initialData","name","initialState","data","columns","firstRangeDate","modalFlag","maxValue","RootReducer","combineReducers","reducer","state","action","type","newEmployee","dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","dateGenerator","date","currentDate","datesRange","i","push","Date","getTime","getDay","monthsNames","Number","columnGenerator","monthDays","Header","className","styles","headerFirstCol","accessor","length","currDayMonth","nextDayMonth","clsx","weekend","cell","Cell","row","index","rows","filter","el","Object","keys","join","includes","column","id","sortArr","value","red","headerTopCell","fetchSaga","saveAllData","setModalFlag","addNewEmployee","saveMaxValue","sagaWorker","FetchSagaWatcher","localStorage","getItem","firstRangeDateFromLocalStorage","JSON","parse","calendarDataFromLocalStorage","put","initialColumns","setItem","stringify","console","log","takeEvery","rootSaga","all","fork","Modal","onCloseButtonClick","InnerComponent","modalContent","onCloseClick","modalWrapper","modal","onClick","button","Button","buttonText","buttonType","onButtonClick","stylesButton","disabled","Calendar","dispatch","useDispatch","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","table","map","headerGroup","j","getHeaderGroupProps","key","Math","random","headers","getHeaderProps","firstCell","hiddenCell","hiddenCell2","tableHeader","render","getRowProps","cells","getCellProps","tableCell","left","tdInner","cellButton","cellButtonFull","cellId","rowId","newData","concat","onCellClick","buttonDelRow","delRow","deleteRowHandler","accessorDatesGenerator","newObj","ModalContent","ref","useRef","useEffect","current","focus","useSelector","store","useState","setName","typeOfWork","setTypeOfWork","onRadioClick","onSubmitHahdler","onSubmit","form","labelWrapper","onChange","event","target","trim","radioWrapper","defaultChecked","buttons_wrapper","deleteButton","ModalDelContent","onCloseModalFunc","Root","delModal","setDelModal","onToggleDelModal","root_wrapper","section_wrapper","disabledButton","calendar_wrapper","sectionTotal","sectionMaxEmployees","min","App","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bcc96294.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrapper\":\"Root_root_wrapper__eL6rt\",\"section_wrapper\":\"Root_section_wrapper__dgqip\",\"calendar_wrapper\":\"Root_calendar_wrapper__1t7Ie\",\"buttons_wrapper\":\"Root_buttons_wrapper__2--Nx\",\"deleteButton\":\"Root_deleteButton__IXlIF\",\"sectionTotal\":\"Root_sectionTotal__2sBkM\",\"disabledButton\":\"Root_disabledButton__3-F7j\",\"sectionMaxEmployees\":\"Root_sectionMaxEmployees__15T99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"columns_cell__32YGY\",\"weekend\":\"columns_weekend__3-10h\",\"headerFirstCol\":\"columns_headerFirstCol__2_EEi\",\"headerTopCell\":\"columns_headerTopCell__1xdye\",\"currentDate\":\"columns_currentDate__10MN6\",\"currentDateEmpty\":\"columns_currentDateEmpty__1v4mI\",\"red\":\"columns_red__3001Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContent\":\"ModalContent_modalContent__2Ret1\",\"form\":\"ModalContent_form__169qh\",\"labelWrapper\":\"ModalContent_labelWrapper__2EgFl\",\"radioWrapper\":\"ModalContent_radioWrapper__2iTLh\",\"buttons_wrapper\":\"ModalContent_buttons_wrapper__1FQ_W\",\"deleteButton\":\"ModalContent_deleteButton__1z69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__2YViX\",\"modal\":\"Modal_modal__26uN6\",\"button\":\"Modal_button__36BgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContent\":\"ModalDelContent_modalContent__MC1xq\",\"buttons_wrapper\":\"ModalDelContent_buttons_wrapper__3jGJi\",\"deleteButton\":\"ModalDelContent_deleteButton__2gpJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","export const FETCH_SAGA = 'FETCH_SAGA';\n\nexport const SAVE_ALL_DATA = 'SAVE_ALL_DATA';\nexport const SAVE_ALL_COLUMNS = 'SAVE_ALL_COLUMNS';\nexport const SAVE_FIRST_RANGE_DATE = 'SAVE_FIRST_RANGE_DATE';\nexport const SAVE_MAX_VALUE = 'SAVE_MAX_VALUE';\n\nexport const SET_MODAL_FLAG = 'SET_MODAL_FLAG';\n\nexport const ADD_NEW_EMPLOYEE = 'ADD_NEW_EMPLOYEE';\n","import { IData } from '../store/types';\n\nexport const initialData: IData[] = [\n  {\n    name: 'Total office',\n  },\n  {\n    name: 'Total remote',\n  },\n];\n","import {\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n  SAVE_MAX_VALUE,\n} from '../constants';\n\nimport { initialData } from '../../constants/table';\n\nimport { ActionsType } from '../actions';\nimport { InitialStateType } from '../types';\n\nconst initialState: InitialStateType = {\n  data: initialData,\n  columns: [],\n  firstRangeDate: null,\n  modalFlag: false,\n  maxValue: 1,\n};\n\nexport const Reducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case SAVE_ALL_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n\n    case SAVE_ALL_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n\n    case SAVE_FIRST_RANGE_DATE:\n      return {\n        ...state,\n        firstRangeDate: action.firstRangeDate,\n      };\n\n    case SET_MODAL_FLAG:\n      return {\n        ...state,\n        modalFlag: action.modalFlag,\n      };\n\n    case ADD_NEW_EMPLOYEE:\n      return {\n        ...state,\n        data: [action.newEmployee, ...state.data],\n      };\n\n    case SAVE_MAX_VALUE:\n      return {\n        ...state,\n        maxValue: action.maxValue,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { Reducer } from './Reducer/Reducer';\n\nexport const RootReducer = combineReducers({\n  reducer: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = (date: Date) => {\n  const currentDate = date;\n  const datesRange: any[] = [];\n  const datesLength = 90; // days in initial range\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './columns.module.css';\nimport { dateFormatter } from '../../../utils/dateFormatter';\n\nconst columnGenerator = (date: Date, maxValue: number) => {\n  if (!date) {\n    return [];\n  }\n\n  const datesRange = dateGenerator(new Date(date));\n  const currentDate = dateFormatter(new Date());\n\n  let monthDays: any = [];\n  const columns: any = [\n    {\n      Header: <div className={styles.headerFirstCol}>Employee</div>,\n      accessor: 'name',\n    },\n  ];\n\n  for (let i = 0; i < datesRange.length; i++) {\n    let currDayMonth = datesRange[i].date.slice(3, 5);\n    let nextDayMonth =\n      datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n    let year = datesRange[i].date.slice(6, 8);\n\n    if (currDayMonth === nextDayMonth) {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n              datesRange[i].date === currentDate && styles.currentDate,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `accessor_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValue && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n\n          return <div>{cell.value}</div>;\n        },\n      });\n    } else {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `accessor_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValue && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n          return <div>{cell.value}</div>;\n        },\n      });\n\n      columns.push({\n        Header: (\n          <div\n            className={clsx(styles.cell, styles.headerTopCell)}\n          >{`${monthsNames(currDayMonth)} '${year}`}</div>\n        ),\n        accessor: currDayMonth,\n        columns: [...monthDays],\n      });\n      monthDays.length = 0;\n    }\n  }\n\n  return columns;\n};\n\nexport default columnGenerator;\n","import {\n  FETCH_SAGA,\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n  SAVE_MAX_VALUE,\n} from './constants';\nimport { IData } from './types';\n\nexport const fetchSaga = (data: IData[], maxValue: number) => {\n  return {\n    type: FETCH_SAGA,\n    data,\n    maxValue,\n  } as const;\n};\n\nexport const saveAllData = (data: IData[]) => {\n  return {\n    type: SAVE_ALL_DATA,\n    data,\n  } as const;\n};\n\nexport const saveAllColumns = (columns: any[]) => {\n  return {\n    type: SAVE_ALL_COLUMNS,\n    columns,\n  } as const;\n};\n\nexport const saveFirstRangeDate = (firstRangeDate: Date) => {\n  return {\n    type: SAVE_FIRST_RANGE_DATE,\n    firstRangeDate,\n  } as const;\n};\n\nexport const setModalFlag = (modalFlag: boolean) => {\n  return {\n    type: SET_MODAL_FLAG,\n    modalFlag,\n  } as const;\n};\n\nexport const addNewEmployee = (newEmployee: IData) => {\n  return {\n    type: ADD_NEW_EMPLOYEE,\n    newEmployee,\n  } as const;\n};\n\nexport const saveMaxValue = (maxValue: number) => {\n  return {\n    type: SAVE_MAX_VALUE,\n    maxValue,\n  } as const;\n};\n\ntype FetchSagaType = ReturnType<typeof fetchSaga>;\ntype saveAllDataType = ReturnType<typeof saveAllData>;\ntype saveAllColumnsType = ReturnType<typeof saveAllColumns>;\ntype saveFirstRangeDateType = ReturnType<typeof saveFirstRangeDate>;\ntype setModalFlagType = ReturnType<typeof setModalFlag>;\ntype addNewEmployeeType = ReturnType<typeof addNewEmployee>;\ntype saveMaxValueType = ReturnType<typeof saveMaxValue>;\n\nexport type ActionsType =\n  | FetchSagaType\n  | saveAllDataType\n  | saveAllColumnsType\n  | saveFirstRangeDateType\n  | setModalFlagType\n  | addNewEmployeeType\n  | saveMaxValueType;\n","import { put, takeEvery } from 'redux-saga/effects';\n\nimport columnGenerator from '../../../components/Calendar/assets/columns';\n\nimport {\n  saveAllColumns,\n  saveAllData,\n  saveFirstRangeDate,\n  saveMaxValue,\n} from '../../actions';\n\nimport { FETCH_SAGA } from '../../constants';\n\nimport { FetchSagaActionType, IData } from '../../types';\n\nfunction* sagaWorker(action: FetchSagaActionType) {\n  try {\n    const firstRangeDateFromLocalStorage: Date = yield localStorage.getItem(\n      'firstRangeDate',\n    );\n    const calendarDataFromLocalStorage: IData[] = yield JSON.parse(\n      localStorage.getItem('calendar') || '[]',\n    );\n    const maxValue: number = yield localStorage.getItem('maxValue');\n\n    if (maxValue) {\n      yield put(saveMaxValue(maxValue));\n    }\n\n    let initialColumns: any[] = yield [];\n\n    if (firstRangeDateFromLocalStorage) {\n      initialColumns = yield columnGenerator(\n        firstRangeDateFromLocalStorage,\n        maxValue,\n      );\n      yield put(saveFirstRangeDate(firstRangeDateFromLocalStorage));\n    } else {\n      initialColumns = yield columnGenerator(new Date(), action.maxValue);\n      yield localStorage.setItem('firstRangeDate', String(new Date()));\n    }\n\n    yield put(saveAllColumns(initialColumns));\n\n    if (calendarDataFromLocalStorage.length) {\n      yield put(saveAllData(calendarDataFromLocalStorage));\n    } else {\n      yield localStorage.setItem('calendar', JSON.stringify(action.data));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* FetchSagaWatcher() {\n  yield takeEvery(FETCH_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { FetchSagaWatcher } from './Reducer/sagas/FetchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(FetchSagaWatcher)]);\n}\n","import React from 'react';\n\nimport { IModal } from './types';\n\nimport styles from './Modal.module.css';\n\nconst Modal: React.FC<IModal> = ({ onCloseButtonClick, modalContent }) => {\n  const InnerComponent = modalContent;\n\n  const onCloseClick = () => {\n    onCloseButtonClick();\n  };\n\n  return (\n    <div className={styles.modalWrapper}>\n      <div className={styles.modal}>\n        <button type=\"button\" onClick={onCloseClick} className={styles.button}>\n          <span />\n        </button>\n\n        <InnerComponent onCloseClick={onCloseClick} />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({\n  buttonText,\n  buttonType,\n  onButtonClick,\n  stylesButton,\n  disabled,\n}) => {\n  return (\n    <button\n      type={buttonType}\n      onClick={onButtonClick}\n      className={clsx(styles.button, stylesButton)}\n      disabled={disabled}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default Button;\n","/* eslint-disable indent */\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTable } from 'react-table';\nimport clsx from 'clsx';\n\nimport { saveAllData } from '../../store/actions';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nimport { IData } from '../../store/types';\nimport { ICalendar } from './types';\n\nimport styles from './Calendar.module.css';\n\nconst Calendar: React.FC<ICalendar> = ({ data, columns }) => {\n  const dispatch = useDispatch();\n\n  const currentDate = dateFormatter(new Date());\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  const deleteRowHandler = (delRow: string) => {\n    const newData = data.filter((el: IData) => el.name !== delRow);\n\n    dispatch(saveAllData(newData));\n    localStorage.setItem('calendar', JSON.stringify(newData));\n  };\n\n  const onCellClick = (cellId: string, rowId: string) => {\n    let newData: IData[] = data.concat();\n\n    if (Object.keys(newData[Number(rowId)]).includes(cellId)) {\n      delete newData[Number(rowId)][cellId];\n    } else {\n      newData[Number(rowId)][cellId] = 1;\n    }\n\n    dispatch(saveAllData(newData));\n    localStorage.setItem('calendar', JSON.stringify(newData));\n  };\n\n  return (\n    <table {...getTableProps()} className={styles.table}>\n      <thead>\n        {headerGroups.map((headerGroup, j) => (\n          <tr\n            {...headerGroup.getHeaderGroupProps()}\n            key={`${headerGroup} ${Math.random()}`}\n          >\n            {headerGroup.headers.map((column, i) => (\n              <th\n                {...column.getHeaderProps()}\n                className={clsx(\n                  i === 0 && styles.firstCell,\n                  i === 0 && j === 0 && styles.hiddenCell,\n                  i === 0 && j === 1 && styles.hiddenCell2,\n                  styles.tableHeader,\n                )}\n                key={`${column} ${Math.random()}`}\n              >\n                {column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} key={`${row} ${Math.random()}`}>\n              {row.cells.map((cell, i) => {\n                return (\n                  <td\n                    {...cell.getCellProps()}\n                    className={clsx(\n                      i === 0 && styles.firstCell,\n                      styles.tableCell,\n                      String(cell.column.id.slice(9)) ===\n                        String(\n                          `${currentDate.slice(0, 2)}${currentDate.slice(\n                            3,\n                            5,\n                          )}${currentDate.slice(6, 8)}`,\n                        ) && styles.currentDate,\n                    )}\n                    key={`${cell} ${Math.random()}`}\n                  >\n                    <div\n                      className={clsx(i === 0 && styles.left, styles.tdInner)}\n                    >\n                      {i !== 0 &&\n                      row.index !== data.length - 1 &&\n                      row.index !== data.length - 2 ? (\n                        <button\n                          type=\"button\"\n                          className={clsx(\n                            styles.cellButton,\n                            cell.value === 1 && styles.cellButtonFull,\n                          )}\n                          onClick={() =>\n                            onCellClick(cell.column.id, cell.row.id)\n                          }\n                        >\n                          {cell.render('Cell')}\n                        </button>\n                      ) : (\n                        cell.render('Cell')\n                      )}\n                      {i === 0 &&\n                        cell.value !== 'Total office' &&\n                        cell.value !== 'Total remote' && (\n                          <button\n                            type=\"button\"\n                            className={styles.buttonDelRow}\n                            onClick={() => deleteRowHandler(cell.value)}\n                          >\n                            <span />\n                          </button>\n                        )}\n                    </div>\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Calendar;\n","import { dateFormatter } from './dateFormatter';\n\nconst accessorDatesGenerator: any = (date: Date, name: string) => {\n  const currentDate = date;\n  const datesLength = 90; // days in initial range\n\n  let newObj: any = {};\n\n  newObj.name = name;\n\n  for (let i = 0; i < datesLength; i++) {\n    const date = dateFormatter(new Date(currentDate.getTime() + 86400000 * i));\n    const newDate = `accessor_${date.slice(0, 2)}${date.slice(\n      3,\n      5,\n    )}${date.slice(6, 8)}`;\n\n    newObj[newDate] = 1;\n  }\n  return newObj;\n};\n\nexport default accessorDatesGenerator;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addNewEmployee, setModalFlag } from '../../store/actions';\nimport { AppStateType } from '../../store/RootReducer';\nimport { IData } from '../../store/types';\n\nimport Button from '../../ui/Button';\n\nimport accessorDatesGenerator from '../../utils/accessorDatesGenerator';\n\nimport styles from './ModalContent.module.css';\n\nconst ModalContent: React.FC = () => {\n  const dispatch = useDispatch();\n  const ref: any = useRef(null);\n\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const data = useSelector<AppStateType, IData[]>(\n    (store) => store.reducer.data,\n  );\n\n  const [name, setName] = useState<string>('');\n  const [typeOfWork, setTypeOfWork] = useState<string>('office');\n\n  const onRadioClick = (type: string) => {\n    setTypeOfWork(type);\n  };\n\n  const onChangeNameHandler = (event: any) => {\n    setName(event.target.value.trim());\n  };\n\n  const onSubmitHahdler = () => {\n    if (!name) {\n      return;\n    }\n\n    if (typeOfWork === 'office') {\n      const newEmployee = { name };\n      dispatch(addNewEmployee(newEmployee));\n      localStorage.setItem('calendar', JSON.stringify([newEmployee, ...data]));\n    }\n\n    if (typeOfWork === 'remote') {\n      const newEmployee = accessorDatesGenerator(new Date(), name);\n      dispatch(addNewEmployee(newEmployee));\n      localStorage.setItem('calendar', JSON.stringify([newEmployee, ...data]));\n    }\n\n    dispatch(setModalFlag(false));\n  };\n\n  const onCloseModal = () => {\n    setName('');\n    setTypeOfWork('office');\n    dispatch(setModalFlag(false));\n  };\n\n  return (\n    <div className={styles.modalContent}>\n      <h2>Add a new employee</h2>\n\n      <form onSubmit={onSubmitHahdler} className={styles.form}>\n        <div className={styles.labelWrapper}>\n          <label>Name: </label>\n          <input type=\"text\" onChange={onChangeNameHandler} ref={ref} />\n        </div>\n\n        <div className={styles.labelWrapper}>\n          <label>Place of work:</label>\n\n          <div className={styles.radioWrapper}>\n            <div>\n              <label>office</label>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value={typeOfWork}\n                defaultChecked\n                onClick={() => onRadioClick('office')}\n              />\n            </div>\n\n            <div>\n              <label>remote</label>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value={typeOfWork}\n                onClick={() => onRadioClick('remote')}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <div className={styles.buttons_wrapper}>\n        <Button\n          buttonText=\"Add\"\n          buttonType=\"submit\"\n          onButtonClick={onSubmitHahdler}\n        />\n\n        <Button\n          buttonText=\"Cancel\"\n          buttonType=\"button\"\n          onButtonClick={onCloseModal}\n          stylesButton={styles.deleteButton}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ModalContent;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { saveAllData } from '../../store/actions';\n\nimport Button from '../../ui/Button';\n\nimport { initialData } from '../../constants/table';\n\nimport { IModalDelContent } from './types';\n\nimport styles from './ModalDelContent.module.css';\n\nconst ModalDelContent: React.FC<IModalDelContent> = ({ onCloseClick }) => {\n  const dispatch = useDispatch();\n  const onCloseModalFunc = onCloseClick;\n\n  const deleteHandler = () => {\n    dispatch(saveAllData(initialData));\n    localStorage.setItem('calendar', JSON.stringify(initialData));\n    onCloseModalFunc();\n  };\n\n  const onCloseModal = () => {\n    onCloseModalFunc();\n  };\n\n  return (\n    <div className={styles.modalContent}>\n      <h2>Are sure to delete all employees?</h2>\n\n      <div className={styles.buttons_wrapper}>\n        <Button\n          buttonText=\"Delete\"\n          buttonType=\"button\"\n          onButtonClick={deleteHandler}\n        />\n\n        <Button\n          buttonText=\"Cancel\"\n          buttonType=\"button\"\n          onButtonClick={onCloseModal}\n          stylesButton={styles.deleteButton}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ModalDelContent;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport Calendar from '../../components/Calendar';\nimport ModalContent from '../../components/ModalContent';\nimport ModalDelContent from '../../components/ModalDelContent';\nimport columnGenerator from '../../components/Calendar/assets/columns';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { InitialStateType } from '../../store/types';\nimport { fetchSaga, saveMaxValue, setModalFlag } from '../../store/actions';\n\nimport styles from './Root.module.css';\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const store = useSelector<AppStateType, InitialStateType>(\n    (store) => store.reducer,\n  );\n\n  const [delModal, setDelModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    dispatch(fetchSaga(store.data, store.maxValue));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const onOpenModal = () => {\n    dispatch(setModalFlag(true));\n  };\n\n  const onCloseModal = () => {\n    dispatch(setModalFlag(false));\n  };\n\n  const onToggleDelModal = () => {\n    setDelModal(!delModal);\n  };\n\n  const onChangeMaxEmployees = (value: any) => {\n    if (value < 0) {\n      return;\n    }\n\n    localStorage.setItem('maxValue', value);\n    dispatch(saveMaxValue(value));\n    dispatch(fetchSaga(store.data, value));\n  };\n\n  useEffect(() => {\n    // @ts-ignore\n    return columnGenerator(store.firstRangeDate, store.maxValue);\n  }, [store.firstRangeDate, store.maxValue]);\n\n  return (\n    <div className={styles.root_wrapper}>\n      {store.modalFlag && (\n        <Modal onCloseButtonClick={onCloseModal} modalContent={ModalContent} />\n      )}\n\n      {delModal && (\n        <Modal\n          onCloseButtonClick={onToggleDelModal}\n          modalContent={ModalDelContent}\n        />\n      )}\n\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      <section className={clsx(styles.section_wrapper, styles.buttons_wrapper)}>\n        <Button\n          buttonText=\"Add employee\"\n          buttonType=\"button\"\n          onButtonClick={onOpenModal}\n        />\n\n        <Button\n          buttonText={\n            store.data.length === 3 ? 'Delete employee' : 'Delete all employees'\n          }\n          buttonType=\"button\"\n          onButtonClick={onToggleDelModal}\n          stylesButton={clsx(\n            styles.deleteButton,\n            store.data.length <= 2 && styles.disabledButton,\n          )}\n          disabled={store.data.length <= 2}\n        />\n      </section>\n\n      <section\n        className={clsx(styles.section_wrapper, styles.calendar_wrapper)}\n      >\n        <Calendar data={store.data} columns={store.columns} />\n      </section>\n\n      <section className={clsx(styles.section_wrapper, styles.sectionTotal)}>\n        <span>Total employees:</span>\n        <span>{store.data.length - 2}</span>\n      </section>\n\n      <section\n        className={clsx(styles.section_wrapper, styles.sectionMaxEmployees)}\n      >\n        <span>Set max employees in office</span>\n        <input\n          type=\"number\"\n          min=\"0\"\n          value={store.maxValue}\n          onChange={(event) => onChangeMaxEmployees(event?.target.value)}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\n\nimport Root from '../views/Root';\n\nimport './App.module.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\nimport App from './App/App';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Calendar_table__2gz7h\",\"tableHeader\":\"Calendar_tableHeader__1Tj0Q\",\"tableCell\":\"Calendar_tableCell__3k-KB\",\"cell\":\"Calendar_cell__14FkO\",\"firstCell\":\"Calendar_firstCell__3YC6V\",\"buttonDelRow\":\"Calendar_buttonDelRow__3yO2B\",\"tdInner\":\"Calendar_tdInner__1Qqal\",\"left\":\"Calendar_left__2ULUU\",\"hiddenCell\":\"Calendar_hiddenCell__3FmDQ\",\"hiddenCell2\":\"Calendar_hiddenCell2__1IDBb\",\"cellButton\":\"Calendar_cellButton__3tjSx\",\"cellButtonFull\":\"Calendar_cellButtonFull__3JaX3\",\"currentDate\":\"Calendar_currentDate__1-LhY\"};"],"sourceRoot":""}