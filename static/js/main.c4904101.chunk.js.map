{"version":3,"sources":["store/actions.ts","components/Calendar/assets/columns.module.css","utils/dateFormatter.ts","ui/Button/Button.tsx","constants/table.ts","ui/Button/Button.module.css","store/Reducer/Reducer.ts","store/RootReducer.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/columns.tsx","store/Reducer/sagas/FetchSaga.ts","store/RootSaga.ts","views/Root/Root.tsx","App/App.tsx","index.tsx","views/Root/Root.module.css","store/constants.ts"],"names":["fetchSaga","data","maxValue","columnsQuantity","type","FETCH_SAGA","saveAllData","SAVE_ALL_DATA","saveAllColumns","columns","SAVE_ALL_COLUMNS","saveFirstRangeDate","firstRangeDate","SAVE_FIRST_RANGE_DATE","setModalFlag","modalFlag","SET_MODAL_FLAG","addNewEmployee","newEmployee","ADD_NEW_EMPLOYEE","saveMaxValue","SAVE_MAX_VALUE","setColumnsQuantity","ADD_COLUMNS_QUANTITY","module","exports","dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","Button","buttonText","buttonType","onButtonClick","stylesButton","disabled","onClick","className","clsx","styles","button","memo","initialData","name","defaultCell","row","cell","initialState","RootReducer","combineReducers","reducer","state","action","dateGenerator","date","datesLength","currentDate","datesRange","i","push","Date","getTime","getDay","monthsNames","Number","columnGenerator","maxValueIn","monthDays","Header","headerFirstCol","accessor","length","currDayMonth","nextDayMonth","weekend","Cell","index","rows","filter","el","Object","keys","join","includes","column","id","sortArr","value","red","headerTopCell","sagaWorker","FetchSagaWatcher","localStorage","getItem","firstRangeDateFromLocalStorage","JSON","parse","calendarDataFromLocalStorage","columnsQuantityFromLocalStorage","put","setItem","initialColumns","stringify","console","log","takeEvery","rootSaga","all","fork","LazyCalendar","React","lazy","LazyModalContent","LazyModalDelContent","LazyModal","Root","dispatch","useDispatch","store","useSelector","useState","delModal","setDelModal","useEffect","onOpenModal","useCallback","onCloseModal","onToggleDelModal","onChangeMaxEmployees","addPeriodHandler","newColumnsQuantity","appHeight","setAppHeight","window","innerHeight","addEventListener","outerHeight","root_wrapper","style","minHeight","fallback","loading","onCloseButtonClick","modalContent","section_wrapper","buttons_wrapper","deleteButton","disabledButton","calendar_wrapper","addPeriodButtonWrapper","addPeriodButton","sectionTotal","sectionMaxEmployees","min","onChange","event","target","section_wrapper_notice","example_wrapper","example_item","examle_empty","examle_full","App","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4904101.chunk.js","sourcesContent":["import {\n  FETCH_SAGA,\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n  SAVE_MAX_VALUE,\n  ADD_COLUMNS_QUANTITY,\n} from './constants';\nimport { IData } from './types';\n\nexport const fetchSaga = (\n  data: IData[],\n  maxValue: number,\n  columnsQuantity: number,\n) => {\n  return {\n    type: FETCH_SAGA,\n    data,\n    maxValue,\n    columnsQuantity,\n  } as const;\n};\n\nexport const saveAllData = (data: IData[]) => {\n  return {\n    type: SAVE_ALL_DATA,\n    data,\n  } as const;\n};\n\nexport const saveAllColumns = (columns: any[]) => {\n  return {\n    type: SAVE_ALL_COLUMNS,\n    columns,\n  } as const;\n};\n\nexport const saveFirstRangeDate = (firstRangeDate: Date) => {\n  return {\n    type: SAVE_FIRST_RANGE_DATE,\n    firstRangeDate,\n  } as const;\n};\n\nexport const setModalFlag = (modalFlag: boolean) => {\n  return {\n    type: SET_MODAL_FLAG,\n    modalFlag,\n  } as const;\n};\n\nexport const addNewEmployee = (newEmployee: IData) => {\n  return {\n    type: ADD_NEW_EMPLOYEE,\n    newEmployee,\n  } as const;\n};\n\nexport const saveMaxValue = (maxValue: number) => {\n  return {\n    type: SAVE_MAX_VALUE,\n    maxValue,\n  } as const;\n};\n\nexport const setColumnsQuantity = (columnsQuantity: number) => {\n  return {\n    type: ADD_COLUMNS_QUANTITY,\n    columnsQuantity,\n  } as const;\n};\n\ntype FetchSagaType = ReturnType<typeof fetchSaga>;\ntype saveAllDataType = ReturnType<typeof saveAllData>;\ntype saveAllColumnsType = ReturnType<typeof saveAllColumns>;\ntype saveFirstRangeDateType = ReturnType<typeof saveFirstRangeDate>;\ntype setModalFlagType = ReturnType<typeof setModalFlag>;\ntype addNewEmployeeType = ReturnType<typeof addNewEmployee>;\ntype saveMaxValueType = ReturnType<typeof saveMaxValue>;\ntype setColumnsQuantityType = ReturnType<typeof setColumnsQuantity>;\n\nexport type ActionsType =\n  | FetchSagaType\n  | saveAllDataType\n  | saveAllColumnsType\n  | saveFirstRangeDateType\n  | setModalFlagType\n  | addNewEmployeeType\n  | saveMaxValueType\n  | setColumnsQuantityType;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"columns_cell__32YGY\",\"weekend\":\"columns_weekend__3-10h\",\"headerFirstCol\":\"columns_headerFirstCol__2_EEi\",\"headerTopCell\":\"columns_headerTopCell__1xdye\",\"currentDate\":\"columns_currentDate__10MN6\",\"red\":\"columns_red__3001Q\"};","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","/* eslint-disable react/button-has-type */\nimport React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({\n  buttonText,\n  buttonType,\n  onButtonClick,\n  stylesButton,\n  disabled,\n}) => {\n  return (\n    <button\n      type={buttonType}\n      onClick={onButtonClick}\n      className={clsx(styles.button, stylesButton)}\n      disabled={disabled}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default memo(Button);\n","import { IData } from '../store/types';\n\nexport const initialData: IData[] = [\n  {\n    name: 'Total office',\n  },\n  {\n    name: 'Total remote',\n  },\n];\n\nexport const defaultCell = {\n  row: '',\n  cell: '',\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","import {\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n  SAVE_MAX_VALUE,\n  ADD_COLUMNS_QUANTITY,\n} from '../constants';\n\nimport { initialData } from '../../constants/table';\n\nimport { ActionsType } from '../actions';\nimport { InitialStateType } from '../types';\n\nconst initialState: InitialStateType = {\n  data: initialData,\n  columns: [],\n  firstRangeDate: null,\n  modalFlag: false,\n  maxValue: 1,\n  columnsQuantity: 90,\n};\n\nexport const Reducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case SAVE_ALL_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n\n    case SAVE_ALL_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n\n    case SAVE_FIRST_RANGE_DATE:\n      return {\n        ...state,\n        firstRangeDate: action.firstRangeDate,\n      };\n\n    case SET_MODAL_FLAG:\n      return {\n        ...state,\n        modalFlag: action.modalFlag,\n      };\n\n    case ADD_NEW_EMPLOYEE:\n      return {\n        ...state,\n        data: [action.newEmployee, ...state.data],\n      };\n\n    case SAVE_MAX_VALUE:\n      return {\n        ...state,\n        maxValue: action.maxValue,\n      };\n\n    case ADD_COLUMNS_QUANTITY:\n      return {\n        ...state,\n        columnsQuantity: action.columnsQuantity,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { Reducer } from './Reducer/Reducer';\n\nexport const RootReducer = combineReducers({\n  reducer: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = (date: Date, datesLength: number) => {\n  const currentDate = date;\n  const datesRange: any[] = [];\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './columns.module.css';\nimport { dateFormatter } from '../../../utils/dateFormatter';\n\nconst columnGenerator = (date: Date, maxValue: number, datesLength: number) => {\n  if (!date) {\n    return [];\n  }\n\n  const datesRange = dateGenerator(new Date(date), datesLength);\n  const currentDate = dateFormatter(new Date());\n  const maxValueIn = maxValue || 1;\n\n  let monthDays: any = [];\n  const columns: any = [\n    {\n      Header: <div className={styles.headerFirstCol}>Employee</div>,\n      accessor: 'name',\n    },\n  ];\n\n  for (let i = 0; i < datesRange.length; i++) {\n    let currDayMonth = datesRange[i].date.slice(3, 5);\n    let nextDayMonth =\n      datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n    let year = datesRange[i].date.slice(6, 8);\n\n    if (currDayMonth === nextDayMonth) {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n              datesRange[i].date === currentDate && styles.currentDate,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n\n          return <div>{cell.value}</div>;\n        },\n      });\n    } else {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n          return <div>{cell.value}</div>;\n        },\n      });\n\n      columns.push({\n        Header: (\n          <div\n            className={clsx(styles.cell, styles.headerTopCell)}\n          >{`${monthsNames(currDayMonth)} '${year}`}</div>\n        ),\n        accessor: currDayMonth,\n        columns: [...monthDays],\n      });\n      monthDays.length = 0;\n    }\n  }\n  return columns;\n};\n\nexport default columnGenerator;\n","import { put, takeEvery } from 'redux-saga/effects';\n\nimport columnGenerator from '../../../components/Calendar/assets/columns';\n\nimport {\n  saveAllColumns,\n  saveAllData,\n  saveFirstRangeDate,\n  saveMaxValue,\n  setColumnsQuantity,\n} from '../../actions';\n\nimport { FETCH_SAGA } from '../../constants';\n\nimport { FetchSagaActionType, IData } from '../../types';\n\nfunction* sagaWorker(action: FetchSagaActionType) {\n  try {\n    const firstRangeDateFromLocalStorage: Date = yield localStorage.getItem(\n      'firstRangeDate',\n    );\n    const calendarDataFromLocalStorage: IData[] = yield JSON.parse(\n      localStorage.getItem('calendar') || '[]',\n    );\n    const maxValue: number = yield localStorage.getItem('maxValue');\n    const columnsQuantityFromLocalStorage: number = yield localStorage.getItem(\n      'columnsQuantity',\n    );\n\n    if (maxValue) {\n      yield put(saveMaxValue(Number(maxValue)));\n    } else {\n      yield localStorage.setItem('maxValue', String(action.maxValue));\n    }\n\n    let initialColumns: any[] = yield [];\n\n    if (columnsQuantityFromLocalStorage) {\n      yield put(setColumnsQuantity(Number(columnsQuantityFromLocalStorage)));\n    } else {\n      yield localStorage.setItem(\n        'columnsQuantity',\n        String(action.columnsQuantity),\n      );\n    }\n\n    if (firstRangeDateFromLocalStorage) {\n      initialColumns = yield columnGenerator(\n        firstRangeDateFromLocalStorage,\n        maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield put(saveFirstRangeDate(firstRangeDateFromLocalStorage));\n    } else {\n      initialColumns = yield columnGenerator(\n        new Date(),\n        action.maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield localStorage.setItem('firstRangeDate', String(new Date()));\n    }\n\n    yield put(saveAllColumns(initialColumns));\n\n    if (calendarDataFromLocalStorage.length) {\n      yield put(saveAllData(calendarDataFromLocalStorage));\n    } else {\n      yield localStorage.setItem('calendar', JSON.stringify(action.data));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* FetchSagaWatcher() {\n  yield takeEvery(FETCH_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { FetchSagaWatcher } from './Reducer/sagas/FetchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(FetchSagaWatcher)]);\n}\n","import React, { memo, Suspense, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport Button from '../../ui/Button';\nimport columnGenerator from '../../components/Calendar/assets/columns';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { InitialStateType } from '../../store/types';\nimport {\n  fetchSaga,\n  saveMaxValue,\n  setColumnsQuantity,\n  setModalFlag,\n} from '../../store/actions';\n\nimport styles from './Root.module.css';\n\nconst LazyCalendar = React.lazy(() => import('../../components/Calendar'));\nconst LazyModalContent = React.lazy(\n  () => import('../../components/ModalContent'),\n);\nconst LazyModalDelContent = React.lazy(\n  () => import('../../components/ModalDelContent'),\n);\nconst LazyModal = React.lazy(() => import('../../ui/Modal'));\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const store = useSelector<AppStateType, InitialStateType>(\n    (store) => store.reducer,\n  );\n\n  const [delModal, setDelModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    dispatch(fetchSaga(store.data, store.maxValue, store.columnsQuantity));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const onOpenModal = useCallback(() => {\n    dispatch(setModalFlag(true));\n  }, [dispatch]);\n\n  const onCloseModal = useCallback(() => {\n    dispatch(setModalFlag(false));\n  }, [dispatch]);\n\n  const onToggleDelModal = useCallback(() => {\n    setDelModal(!delModal);\n  }, [delModal]);\n\n  const onChangeMaxEmployees = useCallback(\n    (value: number) => {\n      if (value < 0) {\n        return;\n      }\n\n      localStorage.setItem('maxValue', String(value));\n      dispatch(saveMaxValue(value));\n      dispatch(fetchSaga(store.data, value, store.columnsQuantity));\n    },\n    [dispatch, store.columnsQuantity, store.data],\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    return columnGenerator(store.firstRangeDate, store.maxValue, 90);\n  }, [store.firstRangeDate, store.maxValue]);\n\n  const addPeriodHandler = useCallback(() => {\n    const newColumnsQuantity = store.columnsQuantity + 90;\n    localStorage.setItem('columnsQuantity', String(newColumnsQuantity));\n    dispatch(setColumnsQuantity(newColumnsQuantity));\n    dispatch(fetchSaga(store.data, store.maxValue, newColumnsQuantity));\n  }, [dispatch, store.columnsQuantity, store.data, store.maxValue]);\n\n  // app height\n  const [appHeight, setAppHeight] = useState<number>(0);\n  useEffect(() => setAppHeight(window.innerHeight), []);\n\n  // resize\n  window.addEventListener(\n    'resize',\n    () => setAppHeight(window.outerHeight),\n    true,\n  );\n  // app height\n\n  return (\n    <div className={styles.root_wrapper} style={{ minHeight: appHeight }}>\n      {store.modalFlag && (\n        <Suspense fallback={<div className={styles.loading}>Loading...</div>}>\n          <LazyModal\n            onCloseButtonClick={onCloseModal}\n            modalContent={LazyModalContent}\n          />\n        </Suspense>\n      )}\n\n      {delModal && (\n        <Suspense fallback={<div className={styles.loading}>Loading...</div>}>\n          <LazyModal\n            onCloseButtonClick={onToggleDelModal}\n            modalContent={LazyModalDelContent}\n          />\n        </Suspense>\n      )}\n\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      <section className={clsx(styles.section_wrapper, styles.buttons_wrapper)}>\n        <Button\n          buttonText=\"Add employee\"\n          buttonType=\"button\"\n          onButtonClick={onOpenModal}\n        />\n\n        {store.data.length > 2 && (\n          <Button\n            buttonText={\n              store.data.length === 3\n                ? 'Delete employee'\n                : 'Delete all employees'\n            }\n            buttonType=\"button\"\n            onButtonClick={onToggleDelModal}\n            stylesButton={clsx(\n              styles.deleteButton,\n              store.data.length <= 2 && styles.disabledButton,\n            )}\n            disabled={store.data.length <= 2}\n          />\n        )}\n      </section>\n\n      {store.data.length > 2 && (\n        <>\n          <section\n            className={clsx(styles.section_wrapper, styles.calendar_wrapper)}\n          >\n            <Suspense\n              fallback={<div className={styles.loading}>Loading...</div>}\n            >\n              <LazyCalendar data={store.data} columns={store.columns} />\n            </Suspense>\n\n            <div className={styles.addPeriodButtonWrapper}>\n              <Button\n                buttonText=\"Add period\"\n                buttonType=\"button\"\n                stylesButton={styles.addPeriodButton}\n                onButtonClick={addPeriodHandler}\n              />\n            </div>\n          </section>\n\n          <section\n            className={clsx(styles.section_wrapper, styles.sectionTotal)}\n          >\n            <span>Total employees:</span>\n            <span>{store.data.length - 2}</span>\n          </section>\n\n          <section\n            className={clsx(styles.section_wrapper, styles.sectionMaxEmployees)}\n          >\n            <span>Set max employees in office</span>\n            <input\n              type=\"number\"\n              min={1}\n              value={store.maxValue}\n              onChange={(event) =>\n                onChangeMaxEmployees(Number(event?.target.value))\n              }\n            />\n          </section>\n\n          <section\n            className={clsx(\n              styles.section_wrapper,\n              styles.section_wrapper_notice,\n            )}\n          >\n            <h3>Notice</h3>\n\n            <div className={styles.example_wrapper}>\n              <div className={styles.example_item}>\n                <div className={styles.examle_empty} />\n                <span>office</span>\n              </div>\n\n              <div className={styles.example_item}>\n                <div className={styles.examle_empty}>\n                  <div className={styles.examle_full} />\n                </div>\n                <span>remote</span>\n              </div>\n            </div>\n\n            <p>\n              You can change statuses of one employee in a few days at once by\n              click holding &apos;Ctrl&apos; button for Windows and Linux or\n              &apos;Command&apos; for MacOs\n            </p>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Root);\n","import React from 'react';\n\nimport Root from '../views/Root';\n\nimport './App.module.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\nimport App from './App/App';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrapper\":\"Root_root_wrapper__eL6rt\",\"section_wrapper\":\"Root_section_wrapper__dgqip\",\"calendar_wrapper\":\"Root_calendar_wrapper__1t7Ie\",\"buttons_wrapper\":\"Root_buttons_wrapper__2--Nx\",\"deleteButton\":\"Root_deleteButton__IXlIF\",\"sectionTotal\":\"Root_sectionTotal__2sBkM\",\"disabledButton\":\"Root_disabledButton__3-F7j\",\"sectionMaxEmployees\":\"Root_sectionMaxEmployees__15T99\",\"addPeriodButtonWrapper\":\"Root_addPeriodButtonWrapper__1TEqF\",\"addPeriodButton\":\"Root_addPeriodButton__zSwil\",\"example_wrapper\":\"Root_example_wrapper__2CniL\",\"example_item\":\"Root_example_item__ssgKK\",\"examle_empty\":\"Root_examle_empty__1GOpV\",\"examle_full\":\"Root_examle_full__UAu05\",\"section_wrapper_notice\":\"Root_section_wrapper_notice___S4nm\",\"loading\":\"Root_loading__2K_se\"};","export const FETCH_SAGA = 'FETCH_SAGA';\n\nexport const SAVE_ALL_DATA = 'SAVE_ALL_DATA';\nexport const SAVE_ALL_COLUMNS = 'SAVE_ALL_COLUMNS';\nexport const SAVE_FIRST_RANGE_DATE = 'SAVE_FIRST_RANGE_DATE';\nexport const SAVE_MAX_VALUE = 'SAVE_MAX_VALUE';\n\nexport const SET_MODAL_FLAG = 'SET_MODAL_FLAG';\n\nexport const ADD_NEW_EMPLOYEE = 'ADD_NEW_EMPLOYEE';\nexport const ADD_COLUMNS_QUANTITY = 'ADD_COLUMNS_QUANTITY';\n"],"sourceRoot":""}