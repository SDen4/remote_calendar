{"version":3,"sources":["components/Calendar/Calendar.module.css","components/Calendar/Calendar.tsx"],"names":["module","exports","Calendar","data","columns","dispatch","useDispatch","currentDate","dateFormatter","Date","useState","isCtrlPressed","setIsCtrlPressed","defaultCell","startPoint","setStartPoint","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useEffect","window","addEventListener","event","keyCode","className","styles","table","map","headerGroup","j","getHeaderGroupProps","key","Math","random","headers","column","i","getHeaderProps","clsx","firstCell","hiddenCell","hiddenCell2","tableHeader","render","row","getRowProps","cells","cell","getCellProps","tableCell","String","id","slice","left","tdInner","index","length","type","cellButton","selected","value","cellButtonFull","onClick","cellId","rowId","newData","concat","start","Number","end","newCellId","Object","keys","includes","saveAllData","localStorage","setItem","JSON","stringify","onCellClick","buttonDelRow","delRow","filter","el","name","deleteRowHandler","memo"],"mappings":"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","file":"static/js/3.ce5d774b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Calendar_table__2gz7h\",\"tableHeader\":\"Calendar_tableHeader__1Tj0Q\",\"tableCell\":\"Calendar_tableCell__3k-KB\",\"cell\":\"Calendar_cell__14FkO\",\"firstCell\":\"Calendar_firstCell__3YC6V\",\"buttonDelRow\":\"Calendar_buttonDelRow__3yO2B\",\"tdInner\":\"Calendar_tdInner__1Qqal\",\"left\":\"Calendar_left__2ULUU\",\"hiddenCell\":\"Calendar_hiddenCell__3FmDQ\",\"hiddenCell2\":\"Calendar_hiddenCell2__1IDBb\",\"cellButton\":\"Calendar_cellButton__3tjSx\",\"selected\":\"Calendar_selected__2fs0o\",\"cellButtonFull\":\"Calendar_cellButtonFull__3JaX3\",\"currentDate\":\"Calendar_currentDate__1-LhY\"};","/* eslint-disable indent */\nimport React, { memo, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTable } from 'react-table';\nimport clsx from 'clsx';\n\nimport { saveAllData } from '../../store/actions';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nimport { defaultCell } from '../../constants/table';\n\nimport { IData } from '../../store/types';\nimport { ICalendar, IStartPoint } from './types';\n\nimport styles from './Calendar.module.css';\n\nconst Calendar: React.FC<ICalendar> = ({ data, columns }) => {\n  const dispatch = useDispatch();\n\n  const currentDate = dateFormatter(new Date());\n\n  const [isCtrlPressed, setIsCtrlPressed] = useState<boolean>(false);\n  const [startPoint, setStartPoint] = useState<IStartPoint>(defaultCell);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  const deleteRowHandler = (delRow: string) => {\n    const newData = data.filter((el: IData) => el.name !== delRow);\n\n    dispatch(saveAllData(newData));\n    localStorage.setItem('calendar', JSON.stringify(newData));\n  };\n\n  // catch and fix the pushing of Ctrl\n  useEffect(() => {\n    window.addEventListener('keydown', (event: any) => {\n      if (event.keyCode === 17 || event.keyCode === 91) {\n        setIsCtrlPressed(true);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    window.addEventListener('keyup', (event: any) => {\n      if (event.keyCode === 17 || event.keyCode === 91) {\n        setStartPoint(defaultCell);\n        setIsCtrlPressed(false);\n      }\n    });\n  }, []);\n\n  const onCellClick = (cellId: string, rowId: string) => {\n    let newData: IData[] = data.concat();\n\n    // save to local state the 1st multy change click\n    if (isCtrlPressed && startPoint.row === '') {\n      setStartPoint({ row: rowId, cell: cellId });\n    }\n\n    // the 2nd click\n    if (isCtrlPressed && startPoint.row === rowId) {\n      let start = Number(\n        `${startPoint.cell.slice(6)}${startPoint.cell.slice(\n          4,\n          6,\n        )}${startPoint.cell.slice(2, 4)}`,\n      );\n      let end = Number(\n        `${cellId.slice(6)}${cellId.slice(4, 6)}${cellId.slice(2, 4)}`,\n      );\n\n      if (end < start) {\n        [start, end] = [end - 1, start - 1];\n      }\n\n      for (let i = start + 1; i <= end; i++) {\n        const newCellId = `a_${String(i).slice(4)}${String(i).slice(\n          2,\n          4,\n        )}${String(i).slice(0, 2)}`;\n\n        if (Object.keys(newData[Number(rowId)]).includes(newCellId)) {\n          delete newData[Number(rowId)][newCellId];\n        } else {\n          newData[Number(rowId)][newCellId] = 1;\n        }\n      }\n      setStartPoint(defaultCell);\n      setIsCtrlPressed(false);\n    } else {\n      // the single click\n      // eslint-disable-next-line no-lonely-if\n      if (Object.keys(newData[Number(rowId)]).includes(cellId)) {\n        delete newData[Number(rowId)][cellId];\n      } else {\n        newData[Number(rowId)][cellId] = 1;\n      }\n    }\n    dispatch(saveAllData(newData));\n    localStorage.setItem('calendar', JSON.stringify(newData));\n  };\n\n  return (\n    <table {...getTableProps()} className={styles.table}>\n      <thead>\n        {headerGroups.map((headerGroup, j) => (\n          <tr\n            {...headerGroup.getHeaderGroupProps()}\n            key={`${headerGroup} ${Math.random()}`}\n          >\n            {headerGroup.headers.map((column, i) => (\n              <th\n                {...column.getHeaderProps()}\n                className={clsx(\n                  i === 0 && styles.firstCell,\n                  i === 0 && j === 0 && styles.hiddenCell,\n                  i === 0 && j === 1 && styles.hiddenCell2,\n                  styles.tableHeader,\n                )}\n                key={`${column} ${Math.random()}`}\n              >\n                {column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} key={`${row} ${Math.random()}`}>\n              {row.cells.map((cell, i) => {\n                return (\n                  <td\n                    {...cell.getCellProps()}\n                    className={clsx(\n                      i === 0 && styles.firstCell,\n                      styles.tableCell,\n                      String(cell.column.id.slice(2)) ===\n                        String(\n                          `${currentDate.slice(0, 2)}${currentDate.slice(\n                            3,\n                            5,\n                          )}${currentDate.slice(6, 8)}`,\n                        ) && styles.currentDate,\n                    )}\n                    key={`${cell} ${Math.random()}`}\n                  >\n                    <div\n                      className={clsx(i === 0 && styles.left, styles.tdInner)}\n                    >\n                      {i !== 0 &&\n                      row.index !== data.length - 1 &&\n                      row.index !== data.length - 2 ? (\n                        <button\n                          type=\"button\"\n                          aria-label=\"Cell Button\"\n                          className={clsx(\n                            styles.cellButton,\n                            isCtrlPressed && styles.selected,\n                            cell.value === 1 && styles.cellButtonFull,\n                          )}\n                          onClick={() =>\n                            onCellClick(cell.column.id, cell.row.id)\n                          }\n                        >\n                          {cell.render('Cell')}\n                        </button>\n                      ) : (\n                        cell.render('Cell')\n                      )}\n                      {i === 0 &&\n                        cell.value !== 'Total office' &&\n                        cell.value !== 'Total remote' && (\n                          <button\n                            type=\"button\"\n                            aria-label=\"Delete Row\"\n                            className={styles.buttonDelRow}\n                            onClick={() => deleteRowHandler(cell.value)}\n                          >\n                            <span />\n                          </button>\n                        )}\n                    </div>\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default memo(Calendar);\n"],"sourceRoot":""}