{"version":3,"sources":["components/Calendar/assets/columns.module.css","components/Notice/styles.module.css","utils/dateFormatter.ts","ui/Button/Button.tsx","components/Loader/styles.module.css","constants/table.ts","ui/Button/Button.module.css","store/Reducer/Reducer.ts","store/RootReducer.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/columns.tsx","store/Reducer/sagas/FetchSaga.ts","store/RootSaga.ts","components/Loader/Loader.tsx","components/Notice/Notice.tsx","components/MaxEmployee/MaxEmployee.tsx","views/Root/Root.tsx","index.tsx","store/constants.ts","store/actions.ts","views/Root/Root.module.css"],"names":["module","exports","dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","Button","buttonText","buttonType","onButtonClick","stylesButton","disabled","type","onClick","className","clsx","styles","button","memo","initialData","name","defaultCell","row","cell","initialState","data","columns","firstRangeDate","modalFlag","maxValue","columnsQuantity","loaderFlag","RootReducer","combineReducers","reducer","state","action","CONST","newEmployee","dateGenerator","date","datesLength","currentDate","datesRange","i","push","Date","getTime","getDay","monthsNames","Number","columnGenerator","maxValueIn","monthDays","Header","headerFirstCol","accessor","length","currDayMonth","nextDayMonth","weekend","Cell","index","rows","filter","el","Object","keys","join","includes","column","id","sortArr","value","red","headerTopCell","sagaWorker","FetchSagaWatcher","localStorage","getItem","firstRangeDateFromLocalStorage","JSON","parse","calendarDataFromLocalStorage","columnsQuantityFromLocalStorage","put","saveMaxValue","setItem","initialColumns","setColumnsQuantity","saveFirstRangeDate","saveAllColumns","saveAllData","stringify","console","log","setLoaderFlag","takeEvery","FETCH_SAGA","rootSaga","all","fork","Loader","loaderWrapper","ldsDefault","Notice","example_wrapper","example_item","examle_empty","examle_full","MaxEmployee","dispatch","useDispatch","useSelector","store","onChangeMaxEmployees","useCallback","fetchSaga","htmlFor","min","onChange","event","target","LazyCalendar","React","lazy","LazyModalContent","LazyModalDelContent","LazyModal","Root","useEffect","useState","delModal","setDelModal","onOpenModal","setModalFlag","onCloseModal","onToggleDelModal","addPeriodHandler","newColumnsQuantity","appHeight","setAppHeight","window","innerHeight","addEventListener","outerHeight","root","style","innerWidth","minHeight","fallback","onCloseButtonClick","modalContent","section","buttons","deleteButton","disabledButton","calendar","addPeriodButtonWrapper","addPeriodButton","sectionTotal","sectionMaxEmployees","sectionNotice","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById","SAVE_ALL_DATA","SAVE_ALL_COLUMNS","SAVE_FIRST_RANGE_DATE","SAVE_MAX_VALUE","SET_MODAL_FLAG","SET_LOADER_FLAG","ADD_NEW_EMPLOYEE","ADD_COLUMNS_QUANTITY","addNewEmployee"],"mappings":"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","file":"static/js/main.b4ff3557.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"columns_cell__32YGY\",\"weekend\":\"columns_weekend__3-10h\",\"headerFirstCol\":\"columns_headerFirstCol__2_EEi\",\"headerTopCell\":\"columns_headerTopCell__1xdye\",\"currentDate\":\"columns_currentDate__10MN6\",\"red\":\"columns_red__3001Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example_wrapper\":\"styles_example_wrapper__27iou\",\"example_item\":\"styles_example_item__13YvF\",\"examle_empty\":\"styles_examle_empty__2RCxh\",\"examle_full\":\"styles_examle_full__1AxDR\"};","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","/* eslint-disable react/button-has-type */\nimport React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({\n  buttonText,\n  buttonType,\n  onButtonClick,\n  stylesButton,\n  disabled,\n}) => {\n  return (\n    <button\n      type={buttonType}\n      aria-label={buttonText}\n      onClick={onButtonClick}\n      className={clsx(styles.button, stylesButton)}\n      disabled={disabled}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default memo(Button);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"styles_loaderWrapper__2OFeU\",\"ldsDefault\":\"styles_ldsDefault__3V2fP\"};","import { IData } from '../store/types';\n\nexport const initialData: IData[] = [\n  {\n    name: 'Total office',\n  },\n  {\n    name: 'Total remote',\n  },\n];\n\nexport const defaultCell = {\n  row: '',\n  cell: '',\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","import * as CONST from '../constants';\n\nimport { initialData } from '../../constants/table';\n\nimport { ActionsType } from '../actions';\nimport { InitialStateType } from '../types';\n\nconst initialState: InitialStateType = {\n  data: initialData,\n  columns: [],\n  firstRangeDate: null,\n  modalFlag: false,\n  maxValue: 1,\n  columnsQuantity: 90,\n  loaderFlag: true,\n};\n\nexport const Reducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case CONST.SAVE_ALL_DATA:\n      return { ...state, data: action.data };\n\n    case CONST.SAVE_ALL_COLUMNS:\n      return { ...state, columns: action.columns };\n\n    case CONST.SAVE_FIRST_RANGE_DATE:\n      return { ...state, firstRangeDate: action.firstRangeDate };\n\n    case CONST.SET_MODAL_FLAG:\n      return { ...state, modalFlag: action.modalFlag };\n\n    case CONST.ADD_NEW_EMPLOYEE:\n      return { ...state, data: [action.newEmployee, ...state.data] };\n\n    case CONST.SAVE_MAX_VALUE:\n      return { ...state, maxValue: action.maxValue };\n\n    case CONST.ADD_COLUMNS_QUANTITY:\n      return { ...state, columnsQuantity: action.columnsQuantity };\n\n    case CONST.SET_LOADER_FLAG:\n      return { ...state, loaderFlag: action.loaderFlag };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { Reducer } from './Reducer/Reducer';\n\nexport const RootReducer = combineReducers({\n  reducer: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = (date: Date, datesLength: number) => {\n  const currentDate = date;\n  const datesRange: any[] = [];\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './columns.module.css';\nimport { dateFormatter } from '../../../utils/dateFormatter';\n\nconst columnGenerator = (date: Date, maxValue: number, datesLength: number) => {\n  if (!date) {\n    return [];\n  }\n\n  const datesRange = dateGenerator(new Date(date), datesLength);\n  const currentDate = dateFormatter(new Date());\n  const maxValueIn = maxValue || 1;\n\n  let monthDays: any = [];\n  const columns: any = [\n    {\n      Header: <div className={styles.headerFirstCol}>Employee</div>,\n      accessor: 'name',\n    },\n  ];\n\n  for (let i = 0; i < datesRange.length; i++) {\n    let currDayMonth = datesRange[i].date.slice(3, 5);\n    let nextDayMonth =\n      datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n    let year = datesRange[i].date.slice(6, 8);\n\n    if (currDayMonth === nextDayMonth) {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n              datesRange[i].date === currentDate && styles.currentDate,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n\n          return <div>{cell.value}</div>;\n        },\n      });\n    } else {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n          return <div>{cell.value}</div>;\n        },\n      });\n\n      columns.push({\n        Header: (\n          <div\n            className={clsx(styles.cell, styles.headerTopCell)}\n          >{`${monthsNames(currDayMonth)} '${year}`}</div>\n        ),\n        accessor: currDayMonth,\n        columns: [...monthDays],\n      });\n      monthDays.length = 0;\n    }\n  }\n  return columns;\n};\n\nexport default columnGenerator;\n","import { put, takeEvery } from 'redux-saga/effects';\n\nimport columnGenerator from '../../../components/Calendar/assets/columns';\n\nimport {\n  saveAllColumns,\n  saveAllData,\n  saveFirstRangeDate,\n  saveMaxValue,\n  setColumnsQuantity,\n  setLoaderFlag,\n} from '../../actions';\n\nimport { FETCH_SAGA } from '../../constants';\n\nimport { FetchSagaActionType, IData } from '../../types';\n\nfunction* sagaWorker(action: FetchSagaActionType) {\n  try {\n    const firstRangeDateFromLocalStorage: Date = yield localStorage.getItem(\n      'firstRangeDate',\n    );\n    const calendarDataFromLocalStorage: IData[] = yield JSON.parse(\n      localStorage.getItem('calendar') || '[]',\n    );\n    const maxValue: number = yield localStorage.getItem('maxValue');\n    const columnsQuantityFromLocalStorage: number = yield localStorage.getItem(\n      'columnsQuantity',\n    );\n\n    if (maxValue) {\n      yield put(saveMaxValue(Number(maxValue)));\n    } else {\n      yield localStorage.setItem('maxValue', String(action.maxValue));\n    }\n\n    let initialColumns: any[] = yield [];\n\n    if (columnsQuantityFromLocalStorage) {\n      yield put(setColumnsQuantity(Number(columnsQuantityFromLocalStorage)));\n    } else {\n      yield localStorage.setItem(\n        'columnsQuantity',\n        String(action.columnsQuantity),\n      );\n    }\n\n    if (firstRangeDateFromLocalStorage) {\n      initialColumns = yield columnGenerator(\n        firstRangeDateFromLocalStorage,\n        maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield put(saveFirstRangeDate(firstRangeDateFromLocalStorage));\n    } else {\n      initialColumns = yield columnGenerator(\n        new Date(),\n        action.maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield localStorage.setItem('firstRangeDate', String(new Date()));\n    }\n\n    yield put(saveAllColumns(initialColumns));\n\n    if (calendarDataFromLocalStorage.length) {\n      yield put(saveAllData(calendarDataFromLocalStorage));\n    } else {\n      yield localStorage.setItem('calendar', JSON.stringify(action.data));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  } finally {\n    yield put(setLoaderFlag(false));\n  }\n}\n\nexport function* FetchSagaWatcher() {\n  yield takeEvery(FETCH_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { FetchSagaWatcher } from './Reducer/sagas/FetchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(FetchSagaWatcher)]);\n}\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className={styles.loaderWrapper}>\n      <div className={styles.ldsDefault}>\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nconst Notice: React.FC = () => {\n  return (\n    <>\n      <h3>Notice</h3>\n\n      <div className={styles.example_wrapper}>\n        <div className={styles.example_item}>\n          <div className={styles.examle_empty} />\n          <span>office</span>\n        </div>\n\n        <div className={styles.example_item}>\n          <div className={styles.examle_empty}>\n            <div className={styles.examle_full} />\n          </div>\n          <span>remote</span>\n        </div>\n      </div>\n\n      <p>\n        You can change statuses of one employee in a few days at once by click\n        holding &apos;Ctrl&apos; button for Windows and Linux or\n        &apos;Command&apos; for MacOs\n      </p>\n    </>\n  );\n};\n\nexport default Notice;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchSaga, saveMaxValue } from '../../store/actions';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { IData } from '../../store/types';\n\nconst MaxEmployee: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector<AppStateType, IData[]>(\n    (store) => store.reducer.data,\n  );\n  const columnsQuantity = useSelector<AppStateType, number>(\n    (store) => store.reducer.columnsQuantity,\n  );\n  const maxValue = useSelector<AppStateType, number>(\n    (store) => store.reducer.maxValue,\n  );\n\n  const onChangeMaxEmployees = useCallback(\n    (value: number) => {\n      if (value < 0) {\n        return;\n      }\n\n      localStorage.setItem('maxValue', String(value));\n      dispatch(saveMaxValue(value));\n      dispatch(fetchSaga(data, value, columnsQuantity));\n    },\n    [dispatch, columnsQuantity, data],\n  );\n\n  return (\n    <>\n      <label htmlFor=\"label\">Set max employees in office</label>\n      <input\n        id=\"label\"\n        type=\"number\"\n        min={1}\n        value={maxValue}\n        onChange={(event) => onChangeMaxEmployees(Number(event?.target.value))}\n      />\n    </>\n  );\n};\n\nexport default MaxEmployee;\n","import React, { memo, Suspense, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { InitialStateType } from '../../store/types';\n\nimport {\n  fetchSaga,\n  setColumnsQuantity,\n  setModalFlag,\n} from '../../store/actions';\n\nimport Button from '../../ui/Button';\nimport Loader from '../../components/Loader';\nimport Notice from '../../components/Notice';\nimport MaxEmployee from '../../components/MaxEmployee';\nimport columnGenerator from '../../components/Calendar/assets/columns';\n\nimport styles from './Root.module.css';\n\nconst LazyCalendar = React.lazy(() => import('../../components/Calendar'));\nconst LazyModalContent = React.lazy(\n  () => import('../../components/ModalContent'),\n);\nconst LazyModalDelContent = React.lazy(\n  () => import('../../components/ModalDelContent'),\n);\nconst LazyModal = React.lazy(() => import('../../ui/Modal'));\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const store = useSelector<AppStateType, InitialStateType>(\n    (store) => store.reducer,\n  );\n\n  useEffect(() => {\n    dispatch(fetchSaga(store.data, store.maxValue, store.columnsQuantity));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const [delModal, setDelModal] = useState<boolean>(false);\n\n  const onOpenModal = useCallback(() => {\n    dispatch(setModalFlag(true));\n  }, [dispatch]);\n\n  const onCloseModal = useCallback(() => {\n    dispatch(setModalFlag(false));\n  }, [dispatch]);\n\n  const onToggleDelModal = useCallback(() => {\n    setDelModal(!delModal);\n  }, [delModal]);\n\n  useEffect(() => {\n    // @ts-ignore\n    return columnGenerator(store.firstRangeDate, store.maxValue, 90);\n  }, [store.firstRangeDate, store.maxValue]);\n\n  const addPeriodHandler = useCallback(() => {\n    const newColumnsQuantity = store.columnsQuantity + 90;\n    localStorage.setItem('columnsQuantity', String(newColumnsQuantity));\n    dispatch(setColumnsQuantity(newColumnsQuantity));\n    dispatch(fetchSaga(store.data, store.maxValue, newColumnsQuantity));\n  }, [dispatch, store.columnsQuantity, store.data, store.maxValue]);\n\n  // app height\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [appHeight, setAppHeight] = useState<number>(0);\n  useEffect(() => setAppHeight(window.innerHeight), []);\n\n  // resize\n  window.addEventListener(\n    'resize',\n    () => setAppHeight(window.outerHeight),\n    true,\n  );\n  // app height\n\n  return (\n    <div\n      className={styles.root}\n      style={window.innerWidth < 480 ? { minHeight: appHeight } : {}}\n    >\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      {store.loaderFlag ? (\n        <Loader />\n      ) : (\n        <>\n          {store.modalFlag && (\n            <Suspense fallback={<Loader />}>\n              <LazyModal\n                onCloseButtonClick={onCloseModal}\n                modalContent={LazyModalContent}\n              />\n            </Suspense>\n          )}\n\n          {delModal && (\n            <Suspense fallback={<Loader />}>\n              <LazyModal\n                onCloseButtonClick={onToggleDelModal}\n                modalContent={LazyModalDelContent}\n              />\n            </Suspense>\n          )}\n\n          <section className={clsx(styles.section, styles.buttons)}>\n            <Button\n              buttonText=\"Add employee\"\n              buttonType=\"button\"\n              onButtonClick={onOpenModal}\n            />\n\n            {store.data.length > 2 && (\n              <Button\n                buttonText={\n                  store.data.length === 3\n                    ? 'Delete employee'\n                    : 'Delete all employees'\n                }\n                buttonType=\"button\"\n                onButtonClick={onToggleDelModal}\n                stylesButton={clsx(\n                  styles.deleteButton,\n                  store.data.length <= 2 && styles.disabledButton,\n                )}\n                disabled={store.data.length <= 2}\n              />\n            )}\n          </section>\n\n          {store.data.length > 2 && (\n            <>\n              <section className={clsx(styles.section, styles.calendar)}>\n                <Suspense fallback={<Loader />}>\n                  <LazyCalendar />\n                </Suspense>\n\n                <div className={styles.addPeriodButtonWrapper}>\n                  <Button\n                    buttonText=\"Add period\"\n                    buttonType=\"button\"\n                    stylesButton={styles.addPeriodButton}\n                    onButtonClick={addPeriodHandler}\n                  />\n                </div>\n              </section>\n\n              <section className={clsx(styles.section, styles.sectionTotal)}>\n                <span>Total employees:</span>\n                <span>{store.data.length - 2}</span>\n              </section>\n\n              <section\n                className={clsx(styles.section, styles.sectionMaxEmployees)}\n              >\n                <MaxEmployee />\n              </section>\n\n              <section className={clsx(styles.section, styles.sectionNotice)}>\n                <Notice />\n              </section>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Root);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport Root from './views/Root';\n\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Root />\n  </Provider>,\n  document.getElementById('root'),\n);\n","export const FETCH_SAGA = 'FETCH_SAGA';\n\nexport const SAVE_ALL_DATA = 'SAVE_ALL_DATA';\nexport const SAVE_ALL_COLUMNS = 'SAVE_ALL_COLUMNS';\nexport const SAVE_FIRST_RANGE_DATE = 'SAVE_FIRST_RANGE_DATE';\nexport const SAVE_MAX_VALUE = 'SAVE_MAX_VALUE';\n\nexport const SET_MODAL_FLAG = 'SET_MODAL_FLAG';\nexport const SET_LOADER_FLAG = 'SET_LOADER_FLAG';\n\nexport const ADD_NEW_EMPLOYEE = 'ADD_NEW_EMPLOYEE';\nexport const ADD_COLUMNS_QUANTITY = 'ADD_COLUMNS_QUANTITY';\n","import * as CONST from './constants';\n\nimport { IData } from './types';\n\nexport const fetchSaga = (\n  data: IData[],\n  maxValue: number,\n  columnsQuantity: number,\n) => {\n  return {\n    type: CONST.FETCH_SAGA,\n    data,\n    maxValue,\n    columnsQuantity,\n  } as const;\n};\n\nexport const saveAllData = (data: IData[]) => {\n  return {\n    type: CONST.SAVE_ALL_DATA,\n    data,\n  } as const;\n};\n\nexport const saveAllColumns = (columns: any[]) => {\n  return {\n    type: CONST.SAVE_ALL_COLUMNS,\n    columns,\n  } as const;\n};\n\nexport const saveFirstRangeDate = (firstRangeDate: Date) => {\n  return {\n    type: CONST.SAVE_FIRST_RANGE_DATE,\n    firstRangeDate,\n  } as const;\n};\n\nexport const setModalFlag = (modalFlag: boolean) => {\n  return {\n    type: CONST.SET_MODAL_FLAG,\n    modalFlag,\n  } as const;\n};\n\nexport const addNewEmployee = (newEmployee: IData) => {\n  return {\n    type: CONST.ADD_NEW_EMPLOYEE,\n    newEmployee,\n  } as const;\n};\n\nexport const saveMaxValue = (maxValue: number) => {\n  return {\n    type: CONST.SAVE_MAX_VALUE,\n    maxValue,\n  } as const;\n};\n\nexport const setColumnsQuantity = (columnsQuantity: number) => {\n  return {\n    type: CONST.ADD_COLUMNS_QUANTITY,\n    columnsQuantity,\n  } as const;\n};\n\nexport const setLoaderFlag = (loaderFlag: boolean) => {\n  return {\n    type: CONST.SET_LOADER_FLAG,\n    loaderFlag,\n  } as const;\n};\n\ntype FetchSagaType = ReturnType<typeof fetchSaga>;\ntype saveAllDataType = ReturnType<typeof saveAllData>;\ntype saveAllColumnsType = ReturnType<typeof saveAllColumns>;\ntype saveFirstRangeDateType = ReturnType<typeof saveFirstRangeDate>;\ntype setModalFlagType = ReturnType<typeof setModalFlag>;\ntype addNewEmployeeType = ReturnType<typeof addNewEmployee>;\ntype saveMaxValueType = ReturnType<typeof saveMaxValue>;\ntype setColumnsQuantityType = ReturnType<typeof setColumnsQuantity>;\ntype setLoaderFlagType = ReturnType<typeof setLoaderFlag>;\n\nexport type ActionsType =\n  | FetchSagaType\n  | saveAllDataType\n  | saveAllColumnsType\n  | saveFirstRangeDateType\n  | setModalFlagType\n  | addNewEmployeeType\n  | saveMaxValueType\n  | setColumnsQuantityType\n  | setLoaderFlagType;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Root_root__3pxTf\",\"section\":\"Root_section__2qrJ7\",\"calendar\":\"Root_calendar__3Mnvo\",\"buttons\":\"Root_buttons__34v3_\",\"deleteButton\":\"Root_deleteButton__IXlIF\",\"sectionTotal\":\"Root_sectionTotal__2sBkM\",\"disabledButton\":\"Root_disabledButton__3-F7j\",\"sectionMaxEmployees\":\"Root_sectionMaxEmployees__15T99\",\"addPeriodButtonWrapper\":\"Root_addPeriodButtonWrapper__1TEqF\",\"addPeriodButton\":\"Root_addPeriodButton__zSwil\",\"sectionNotice\":\"Root_sectionNotice__1ufrc\",\"loading\":\"Root_loading__2K_se\"};"],"sourceRoot":""}