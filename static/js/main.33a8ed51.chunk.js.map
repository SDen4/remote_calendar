{"version":3,"sources":["store/actions.ts","views/Root/Root.module.css","store/constants.ts","components/Calendar/assets/columns.module.css","components/ModalContent/ModalContent.module.css","utils/dateFormatter.ts","constants/table.ts","ui/Modal/Modal.module.css","components/ModalDelContent/ModalDelContent.module.css","ui/Button/Button.module.css","store/Reducer/Reducer.ts","store/RootReducer.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/columns.tsx","store/Reducer/sagas/FetchSaga.ts","store/RootSaga.ts","ui/Modal/Modal.tsx","ui/Button/Button.tsx","utils/accessorDatesGenerator.ts","components/ModalContent/ModalContent.tsx","components/ModalDelContent/ModalDelContent.tsx","views/Root/Root.tsx","App/App.tsx","index.tsx"],"names":["fetchSaga","data","maxValue","columnsQuantity","type","FETCH_SAGA","saveAllData","SAVE_ALL_DATA","saveAllColumns","columns","SAVE_ALL_COLUMNS","saveFirstRangeDate","firstRangeDate","SAVE_FIRST_RANGE_DATE","setModalFlag","modalFlag","SET_MODAL_FLAG","addNewEmployee","newEmployee","ADD_NEW_EMPLOYEE","saveMaxValue","SAVE_MAX_VALUE","setColumnsQuantity","ADD_COLUMNS_QUANTITY","module","exports","dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","initialData","name","defaultCell","row","cell","initialState","RootReducer","combineReducers","reducer","state","action","dateGenerator","date","datesLength","currentDate","datesRange","i","push","Date","getTime","getDay","monthsNames","Number","columnGenerator","maxValueIn","monthDays","Header","className","styles","headerFirstCol","accessor","length","currDayMonth","nextDayMonth","clsx","weekend","Cell","index","rows","filter","el","Object","keys","join","includes","column","id","sortArr","value","red","headerTopCell","sagaWorker","FetchSagaWatcher","localStorage","getItem","firstRangeDateFromLocalStorage","JSON","parse","calendarDataFromLocalStorage","columnsQuantityFromLocalStorage","put","setItem","initialColumns","stringify","console","log","takeEvery","rootSaga","all","fork","Modal","onCloseButtonClick","InnerComponent","modalContent","onCloseClick","modalWrapper","modal","onClick","button","memo","Button","buttonText","buttonType","onButtonClick","stylesButton","disabled","accessorDatesGenerator","newObj","ModalContent","dispatch","useDispatch","ref","useRef","useEffect","current","focus","useSelector","store","useState","setName","typeOfWork","setTypeOfWork","validFlag","setValidFlag","onRadioClick","useCallback","onChangeNameHandler","event","target","trim","onSubmitHahdler","preventDefault","namesArr","addArr","split","reverse","concat","onCloseModal","onSubmit","form","labelWrapper","inputWrapper","onChange","validationText","noteText","radioWrapper","defaultChecked","buttons_wrapper","deleteButton","ModalDelContent","onCloseModalFunc","LazyCalendar","React","lazy","Root","delModal","setDelModal","onOpenModal","onToggleDelModal","onChangeMaxEmployees","addPeriodHandler","newColumnsQuantity","appHeight","setAppHeight","window","outerHeight","addEventListener","root_wrapper","style","minHeight","section_wrapper","disabledButton","calendar_wrapper","fallback","addPeriodButtonWrapper","addPeriodButton","sectionTotal","sectionMaxEmployees","min","section_wrapper_notice","example_wrapper","example_item","examle_empty","examle_full","App","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33a8ed51.chunk.js","sourcesContent":["import {\n  FETCH_SAGA,\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n  SAVE_MAX_VALUE,\n  ADD_COLUMNS_QUANTITY,\n} from './constants';\nimport { IData } from './types';\n\nexport const fetchSaga = (\n  data: IData[],\n  maxValue: number,\n  columnsQuantity: number,\n) => {\n  return {\n    type: FETCH_SAGA,\n    data,\n    maxValue,\n    columnsQuantity,\n  } as const;\n};\n\nexport const saveAllData = (data: IData[]) => {\n  return {\n    type: SAVE_ALL_DATA,\n    data,\n  } as const;\n};\n\nexport const saveAllColumns = (columns: any[]) => {\n  return {\n    type: SAVE_ALL_COLUMNS,\n    columns,\n  } as const;\n};\n\nexport const saveFirstRangeDate = (firstRangeDate: Date) => {\n  return {\n    type: SAVE_FIRST_RANGE_DATE,\n    firstRangeDate,\n  } as const;\n};\n\nexport const setModalFlag = (modalFlag: boolean) => {\n  return {\n    type: SET_MODAL_FLAG,\n    modalFlag,\n  } as const;\n};\n\nexport const addNewEmployee = (newEmployee: IData) => {\n  return {\n    type: ADD_NEW_EMPLOYEE,\n    newEmployee,\n  } as const;\n};\n\nexport const saveMaxValue = (maxValue: number) => {\n  return {\n    type: SAVE_MAX_VALUE,\n    maxValue,\n  } as const;\n};\n\nexport const setColumnsQuantity = (columnsQuantity: number) => {\n  return {\n    type: ADD_COLUMNS_QUANTITY,\n    columnsQuantity,\n  } as const;\n};\n\ntype FetchSagaType = ReturnType<typeof fetchSaga>;\ntype saveAllDataType = ReturnType<typeof saveAllData>;\ntype saveAllColumnsType = ReturnType<typeof saveAllColumns>;\ntype saveFirstRangeDateType = ReturnType<typeof saveFirstRangeDate>;\ntype setModalFlagType = ReturnType<typeof setModalFlag>;\ntype addNewEmployeeType = ReturnType<typeof addNewEmployee>;\ntype saveMaxValueType = ReturnType<typeof saveMaxValue>;\ntype setColumnsQuantityType = ReturnType<typeof setColumnsQuantity>;\n\nexport type ActionsType =\n  | FetchSagaType\n  | saveAllDataType\n  | saveAllColumnsType\n  | saveFirstRangeDateType\n  | setModalFlagType\n  | addNewEmployeeType\n  | saveMaxValueType\n  | setColumnsQuantityType;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrapper\":\"Root_root_wrapper__eL6rt\",\"section_wrapper\":\"Root_section_wrapper__dgqip\",\"calendar_wrapper\":\"Root_calendar_wrapper__1t7Ie\",\"buttons_wrapper\":\"Root_buttons_wrapper__2--Nx\",\"deleteButton\":\"Root_deleteButton__IXlIF\",\"sectionTotal\":\"Root_sectionTotal__2sBkM\",\"disabledButton\":\"Root_disabledButton__3-F7j\",\"sectionMaxEmployees\":\"Root_sectionMaxEmployees__15T99\",\"addPeriodButtonWrapper\":\"Root_addPeriodButtonWrapper__1TEqF\",\"addPeriodButton\":\"Root_addPeriodButton__zSwil\",\"example_wrapper\":\"Root_example_wrapper__2CniL\",\"example_item\":\"Root_example_item__ssgKK\",\"examle_empty\":\"Root_examle_empty__1GOpV\",\"examle_full\":\"Root_examle_full__UAu05\",\"section_wrapper_notice\":\"Root_section_wrapper_notice___S4nm\"};","export const FETCH_SAGA = 'FETCH_SAGA';\n\nexport const SAVE_ALL_DATA = 'SAVE_ALL_DATA';\nexport const SAVE_ALL_COLUMNS = 'SAVE_ALL_COLUMNS';\nexport const SAVE_FIRST_RANGE_DATE = 'SAVE_FIRST_RANGE_DATE';\nexport const SAVE_MAX_VALUE = 'SAVE_MAX_VALUE';\n\nexport const SET_MODAL_FLAG = 'SET_MODAL_FLAG';\n\nexport const ADD_NEW_EMPLOYEE = 'ADD_NEW_EMPLOYEE';\nexport const ADD_COLUMNS_QUANTITY = 'ADD_COLUMNS_QUANTITY';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"columns_cell__32YGY\",\"weekend\":\"columns_weekend__3-10h\",\"headerFirstCol\":\"columns_headerFirstCol__2_EEi\",\"headerTopCell\":\"columns_headerTopCell__1xdye\",\"currentDate\":\"columns_currentDate__10MN6\",\"red\":\"columns_red__3001Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContent\":\"ModalContent_modalContent__2Ret1\",\"form\":\"ModalContent_form__169qh\",\"labelWrapper\":\"ModalContent_labelWrapper__2EgFl\",\"radioWrapper\":\"ModalContent_radioWrapper__2iTLh\",\"buttons_wrapper\":\"ModalContent_buttons_wrapper__1FQ_W\",\"deleteButton\":\"ModalContent_deleteButton__1z69p\",\"inputWrapper\":\"ModalContent_inputWrapper__1Wc4T\",\"validationText\":\"ModalContent_validationText__2UqVI\",\"noteText\":\"ModalContent_noteText__6A_m5\"};","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","import { IData } from '../store/types';\n\nexport const initialData: IData[] = [\n  {\n    name: 'Total office',\n  },\n  {\n    name: 'Total remote',\n  },\n];\n\nexport const defaultCell = {\n  row: '',\n  cell: '',\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__2YViX\",\"modal\":\"Modal_modal__26uN6\",\"button\":\"Modal_button__36BgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContent\":\"ModalDelContent_modalContent__MC1xq\",\"buttons_wrapper\":\"ModalDelContent_buttons_wrapper__3jGJi\",\"deleteButton\":\"ModalDelContent_deleteButton__2gpJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","import {\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n  SAVE_MAX_VALUE,\n  ADD_COLUMNS_QUANTITY,\n} from '../constants';\n\nimport { initialData } from '../../constants/table';\n\nimport { ActionsType } from '../actions';\nimport { InitialStateType } from '../types';\n\nconst initialState: InitialStateType = {\n  data: initialData,\n  columns: [],\n  firstRangeDate: null,\n  modalFlag: false,\n  maxValue: 1,\n  columnsQuantity: 90,\n};\n\nexport const Reducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case SAVE_ALL_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n\n    case SAVE_ALL_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n\n    case SAVE_FIRST_RANGE_DATE:\n      return {\n        ...state,\n        firstRangeDate: action.firstRangeDate,\n      };\n\n    case SET_MODAL_FLAG:\n      return {\n        ...state,\n        modalFlag: action.modalFlag,\n      };\n\n    case ADD_NEW_EMPLOYEE:\n      return {\n        ...state,\n        data: [action.newEmployee, ...state.data],\n      };\n\n    case SAVE_MAX_VALUE:\n      return {\n        ...state,\n        maxValue: action.maxValue,\n      };\n\n    case ADD_COLUMNS_QUANTITY:\n      return {\n        ...state,\n        columnsQuantity: action.columnsQuantity,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { Reducer } from './Reducer/Reducer';\n\nexport const RootReducer = combineReducers({\n  reducer: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = (date: Date, datesLength: number) => {\n  const currentDate = date;\n  const datesRange: any[] = [];\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './columns.module.css';\nimport { dateFormatter } from '../../../utils/dateFormatter';\n\nconst columnGenerator = (date: Date, maxValue: number, datesLength: number) => {\n  if (!date) {\n    return [];\n  }\n\n  const datesRange = dateGenerator(new Date(date), datesLength);\n  const currentDate = dateFormatter(new Date());\n  const maxValueIn = maxValue || 1;\n\n  let monthDays: any = [];\n  const columns: any = [\n    {\n      Header: <div className={styles.headerFirstCol}>Employee</div>,\n      accessor: 'name',\n    },\n  ];\n\n  for (let i = 0; i < datesRange.length; i++) {\n    let currDayMonth = datesRange[i].date.slice(3, 5);\n    let nextDayMonth =\n      datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n    let year = datesRange[i].date.slice(6, 8);\n\n    if (currDayMonth === nextDayMonth) {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n              datesRange[i].date === currentDate && styles.currentDate,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n\n          return <div>{cell.value}</div>;\n        },\n      });\n    } else {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n          return <div>{cell.value}</div>;\n        },\n      });\n\n      columns.push({\n        Header: (\n          <div\n            className={clsx(styles.cell, styles.headerTopCell)}\n          >{`${monthsNames(currDayMonth)} '${year}`}</div>\n        ),\n        accessor: currDayMonth,\n        columns: [...monthDays],\n      });\n      monthDays.length = 0;\n    }\n  }\n  return columns;\n};\n\nexport default columnGenerator;\n","import { put, takeEvery } from 'redux-saga/effects';\n\nimport columnGenerator from '../../../components/Calendar/assets/columns';\n\nimport {\n  saveAllColumns,\n  saveAllData,\n  saveFirstRangeDate,\n  saveMaxValue,\n  setColumnsQuantity,\n} from '../../actions';\n\nimport { FETCH_SAGA } from '../../constants';\n\nimport { FetchSagaActionType, IData } from '../../types';\n\nfunction* sagaWorker(action: FetchSagaActionType) {\n  try {\n    const firstRangeDateFromLocalStorage: Date = yield localStorage.getItem(\n      'firstRangeDate',\n    );\n    const calendarDataFromLocalStorage: IData[] = yield JSON.parse(\n      localStorage.getItem('calendar') || '[]',\n    );\n    const maxValue: number = yield localStorage.getItem('maxValue');\n    const columnsQuantityFromLocalStorage: number = yield localStorage.getItem(\n      'columnsQuantity',\n    );\n\n    if (maxValue) {\n      yield put(saveMaxValue(Number(maxValue)));\n    } else {\n      yield localStorage.setItem('maxValue', String(action.maxValue));\n    }\n\n    let initialColumns: any[] = yield [];\n\n    if (columnsQuantityFromLocalStorage) {\n      yield put(setColumnsQuantity(Number(columnsQuantityFromLocalStorage)));\n    } else {\n      yield localStorage.setItem(\n        'columnsQuantity',\n        String(action.columnsQuantity),\n      );\n    }\n\n    if (firstRangeDateFromLocalStorage) {\n      initialColumns = yield columnGenerator(\n        firstRangeDateFromLocalStorage,\n        maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield put(saveFirstRangeDate(firstRangeDateFromLocalStorage));\n    } else {\n      initialColumns = yield columnGenerator(\n        new Date(),\n        action.maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield localStorage.setItem('firstRangeDate', String(new Date()));\n    }\n\n    yield put(saveAllColumns(initialColumns));\n\n    if (calendarDataFromLocalStorage.length) {\n      yield put(saveAllData(calendarDataFromLocalStorage));\n    } else {\n      yield localStorage.setItem('calendar', JSON.stringify(action.data));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* FetchSagaWatcher() {\n  yield takeEvery(FETCH_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { FetchSagaWatcher } from './Reducer/sagas/FetchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(FetchSagaWatcher)]);\n}\n","import React, { memo } from 'react';\n\nimport { IModal } from './types';\n\nimport styles from './Modal.module.css';\n\nconst Modal: React.FC<IModal> = ({ onCloseButtonClick, modalContent }) => {\n  const InnerComponent = modalContent;\n\n  const onCloseClick = () => {\n    onCloseButtonClick();\n  };\n\n  return (\n    <div className={styles.modalWrapper}>\n      <div className={styles.modal}>\n        <button type=\"button\" onClick={onCloseClick} className={styles.button}>\n          <span />\n        </button>\n\n        <InnerComponent onCloseClick={onCloseClick} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Modal);\n","/* eslint-disable react/button-has-type */\nimport React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({\n  buttonText,\n  buttonType,\n  onButtonClick,\n  stylesButton,\n  disabled,\n}) => {\n  return (\n    <button\n      type={buttonType}\n      onClick={onButtonClick}\n      className={clsx(styles.button, stylesButton)}\n      disabled={disabled}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default memo(Button);\n","import { dateFormatter } from './dateFormatter';\n\nconst accessorDatesGenerator: any = (date: Date, name: string) => {\n  const currentDate = date;\n  const datesLength = 90; // days in initial range\n\n  let newObj: any = {};\n\n  newObj.name = name;\n\n  for (let i = 0; i < datesLength; i++) {\n    const date = dateFormatter(new Date(currentDate.getTime() + 86400000 * i));\n    const newDate = `a_${date.slice(0, 2)}${date.slice(3, 5)}${date.slice(\n      6,\n      8,\n    )}`;\n\n    newObj[newDate] = 1;\n  }\n  return newObj;\n};\n\nexport default accessorDatesGenerator;\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addNewEmployee, setModalFlag } from '../../store/actions';\nimport { AppStateType } from '../../store/RootReducer';\nimport { IData } from '../../store/types';\n\nimport Button from '../../ui/Button';\n\nimport accessorDatesGenerator from '../../utils/accessorDatesGenerator';\n\nimport styles from './ModalContent.module.css';\n\nconst ModalContent: React.FC = () => {\n  const dispatch = useDispatch();\n  const ref: any = useRef(null);\n\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const data = useSelector<AppStateType, IData[]>(\n    (store) => store.reducer.data,\n  );\n\n  const [name, setName] = useState<string>('');\n  const [typeOfWork, setTypeOfWork] = useState<string>('office');\n  const [validFlag, setValidFlag] = useState<boolean>(false);\n\n  const onRadioClick = useCallback((type: string) => {\n    setTypeOfWork(type);\n  }, []);\n\n  const onChangeNameHandler = useCallback((event: any) => {\n    setValidFlag(false);\n    setName(event.target.value.trim());\n  }, []);\n\n  const onSubmitHahdler = useCallback(\n    (event: React.SyntheticEvent) => {\n      event.preventDefault();\n\n      if (!name) {\n        setValidFlag(true);\n        return;\n      }\n\n      let namesArr: string[] = [];\n      const re = /\\s*,\\s*/;\n      const addArr = [];\n      namesArr = name.split(re);\n\n      for (let i = 0; i < namesArr.length; i++) {\n        if (typeOfWork === 'office') {\n          const newEmployee = { name: namesArr[i] };\n          dispatch(addNewEmployee(newEmployee));\n          addArr.push(newEmployee);\n        }\n\n        if (typeOfWork === 'remote') {\n          const newEmployee = accessorDatesGenerator(new Date(), namesArr[i]);\n          dispatch(addNewEmployee(newEmployee));\n          addArr.push(newEmployee);\n        }\n      }\n\n      localStorage.setItem(\n        'calendar',\n        JSON.stringify(addArr.reverse().concat(data)),\n      );\n      addArr.length = 0;\n\n      dispatch(setModalFlag(false));\n    },\n    [data, dispatch, name, typeOfWork],\n  );\n\n  const onCloseModal = useCallback(() => {\n    setName('');\n    setTypeOfWork('office');\n    dispatch(setModalFlag(false));\n  }, [dispatch]);\n\n  return (\n    <div className={styles.modalContent}>\n      <h2>Add a new employee</h2>\n\n      <form onSubmit={onSubmitHahdler} className={styles.form}>\n        <div className={styles.labelWrapper}>\n          <label>Name: </label>\n          <div className={styles.inputWrapper}>\n            <input type=\"text\" onChange={onChangeNameHandler} ref={ref} />\n            {validFlag && (\n              <span className={styles.validationText}>\n                The field can not be empty\n              </span>\n            )}\n            {!name.includes(',') && !validFlag && (\n              <span className={styles.noteText}>\n                You can enter more than 1 employee separated by commas\n              </span>\n            )}\n          </div>\n        </div>\n\n        <div className={styles.labelWrapper}>\n          <label>Place of work:</label>\n\n          <div className={styles.radioWrapper}>\n            <div>\n              <label>office</label>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value={typeOfWork}\n                defaultChecked\n                onClick={() => onRadioClick('office')}\n              />\n            </div>\n\n            <div>\n              <label>remote</label>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value={typeOfWork}\n                onClick={() => onRadioClick('remote')}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <div className={styles.buttons_wrapper}>\n        <Button\n          buttonText=\"Add\"\n          buttonType=\"submit\"\n          onButtonClick={onSubmitHahdler}\n        />\n\n        <Button\n          buttonText=\"Cancel\"\n          buttonType=\"button\"\n          onButtonClick={onCloseModal}\n          stylesButton={styles.deleteButton}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ModalContent);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  fetchSaga,\n  saveAllData,\n  saveFirstRangeDate,\n  setColumnsQuantity,\n} from '../../store/actions';\n\nimport Button from '../../ui/Button';\n\nimport { initialData } from '../../constants/table';\n\nimport { IModalDelContent } from './types';\n\nimport styles from './ModalDelContent.module.css';\n\nconst ModalDelContent: React.FC<IModalDelContent> = ({ onCloseClick }) => {\n  const dispatch = useDispatch();\n  const onCloseModalFunc = onCloseClick;\n\n  const deleteHandler = () => {\n    dispatch(saveFirstRangeDate(new Date()));\n    localStorage.setItem('firstRangeDate', String(new Date()));\n\n    dispatch(saveAllData(initialData));\n    localStorage.setItem('calendar', JSON.stringify(initialData));\n\n    localStorage.setItem('columnsQuantity', '90');\n    dispatch(setColumnsQuantity(90));\n    dispatch(fetchSaga(initialData, 1, 90));\n\n    onCloseModalFunc();\n  };\n\n  const onCloseModal = () => {\n    onCloseModalFunc();\n  };\n\n  return (\n    <div className={styles.modalContent}>\n      <h2>Are you sure to delete all employees?</h2>\n\n      <div className={styles.buttons_wrapper}>\n        <Button\n          buttonText=\"Delete\"\n          buttonType=\"button\"\n          onButtonClick={deleteHandler}\n        />\n\n        <Button\n          buttonText=\"Cancel\"\n          buttonType=\"button\"\n          onButtonClick={onCloseModal}\n          stylesButton={styles.deleteButton}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ModalDelContent;\n","import React, { memo, Suspense, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport ModalContent from '../../components/ModalContent';\nimport ModalDelContent from '../../components/ModalDelContent';\nimport columnGenerator from '../../components/Calendar/assets/columns';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { InitialStateType } from '../../store/types';\nimport {\n  fetchSaga,\n  saveMaxValue,\n  setColumnsQuantity,\n  setModalFlag,\n} from '../../store/actions';\n\nimport styles from './Root.module.css';\n\nconst LazyCalendar = React.lazy(() => import('../../components/Calendar'));\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const store = useSelector<AppStateType, InitialStateType>(\n    (store) => store.reducer,\n  );\n\n  const [delModal, setDelModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    dispatch(fetchSaga(store.data, store.maxValue, store.columnsQuantity));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const onOpenModal = useCallback(() => {\n    dispatch(setModalFlag(true));\n  }, [dispatch]);\n\n  const onCloseModal = useCallback(() => {\n    dispatch(setModalFlag(false));\n  }, [dispatch]);\n\n  const onToggleDelModal = useCallback(() => {\n    setDelModal(!delModal);\n  }, [delModal]);\n\n  const onChangeMaxEmployees = useCallback(\n    (value: number) => {\n      if (value < 0) {\n        return;\n      }\n\n      localStorage.setItem('maxValue', String(value));\n      dispatch(saveMaxValue(value));\n      dispatch(fetchSaga(store.data, value, store.columnsQuantity));\n    },\n    [dispatch, store.columnsQuantity, store.data],\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    return columnGenerator(store.firstRangeDate, store.maxValue, 90);\n  }, [store.firstRangeDate, store.maxValue]);\n\n  const addPeriodHandler = useCallback(() => {\n    const newColumnsQuantity = store.columnsQuantity + 90;\n    localStorage.setItem('columnsQuantity', String(newColumnsQuantity));\n    dispatch(setColumnsQuantity(newColumnsQuantity));\n    dispatch(fetchSaga(store.data, store.maxValue, newColumnsQuantity));\n  }, [dispatch, store.columnsQuantity, store.data, store.maxValue]);\n\n  // app height\n  const [appHeight, setAppHeight] = useState<number>(0);\n  useEffect(() => setAppHeight(window.outerHeight), []);\n\n  // resize\n  window.addEventListener(\n    'resize',\n    () => setAppHeight(window.outerHeight),\n    true,\n  );\n  // app height\n\n  return (\n    <div className={styles.root_wrapper} style={{ minHeight: appHeight }}>\n      {store.modalFlag && (\n        <Modal onCloseButtonClick={onCloseModal} modalContent={ModalContent} />\n      )}\n\n      {delModal && (\n        <Modal\n          onCloseButtonClick={onToggleDelModal}\n          modalContent={ModalDelContent}\n        />\n      )}\n\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      <section className={clsx(styles.section_wrapper, styles.buttons_wrapper)}>\n        <Button\n          buttonText=\"Add employee\"\n          buttonType=\"button\"\n          onButtonClick={onOpenModal}\n        />\n\n        {store.data.length > 2 && (\n          <Button\n            buttonText={\n              store.data.length === 3\n                ? 'Delete employee'\n                : 'Delete all employees'\n            }\n            buttonType=\"button\"\n            onButtonClick={onToggleDelModal}\n            stylesButton={clsx(\n              styles.deleteButton,\n              store.data.length <= 2 && styles.disabledButton,\n            )}\n            disabled={store.data.length <= 2}\n          />\n        )}\n      </section>\n\n      {store.data.length > 2 && (\n        <>\n          <section\n            className={clsx(styles.section_wrapper, styles.calendar_wrapper)}\n          >\n            <Suspense fallback={<>Loading...</>}>\n              <LazyCalendar data={store.data} columns={store.columns} />\n            </Suspense>\n\n            <div className={styles.addPeriodButtonWrapper}>\n              <Button\n                buttonText=\"Add period\"\n                buttonType=\"button\"\n                stylesButton={styles.addPeriodButton}\n                onButtonClick={addPeriodHandler}\n              />\n            </div>\n          </section>\n\n          <section\n            className={clsx(styles.section_wrapper, styles.sectionTotal)}\n          >\n            <span>Total employees:</span>\n            <span>{store.data.length - 2}</span>\n          </section>\n\n          <section\n            className={clsx(styles.section_wrapper, styles.sectionMaxEmployees)}\n          >\n            <span>Set max employees in office</span>\n            <input\n              type=\"number\"\n              min={1}\n              value={store.maxValue}\n              onChange={(event) =>\n                onChangeMaxEmployees(Number(event?.target.value))\n              }\n            />\n          </section>\n\n          <section\n            className={clsx(\n              styles.section_wrapper,\n              styles.section_wrapper_notice,\n            )}\n          >\n            <h3>Notice</h3>\n\n            <div className={styles.example_wrapper}>\n              <div className={styles.example_item}>\n                <div className={styles.examle_empty} />\n                <span>office</span>\n              </div>\n\n              <div className={styles.example_item}>\n                <div className={styles.examle_empty}>\n                  <div className={styles.examle_full} />\n                </div>\n                <span>remote</span>\n              </div>\n            </div>\n\n            <p>\n              You can change statuses of one employee in a few days at once by\n              click holding &apos;Ctrl&apos; button for Windows and Linux or\n              &apos;Command&apos; for MacOs\n            </p>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Root);\n","import React from 'react';\n\nimport Root from '../views/Root';\n\nimport './App.module.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\nimport App from './App/App';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}