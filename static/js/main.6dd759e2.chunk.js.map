{"version":3,"sources":["store/constants.ts","store/actions.ts","views/Root/Root.module.css","components/Calendar/assets/columns.module.css","components/Notice/styles.module.css","utils/dateFormatter.ts","ui/Button/Button.tsx","components/Loader/styles.module.css","constants/table.ts","ui/Button/Button.module.css","store/Reducer/Reducer.ts","store/RootReducer.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/columns.tsx","store/Reducer/sagas/FetchSaga.ts","store/RootSaga.ts","components/Notice/Notice.tsx","components/MaxEmployee/MaxEmployee.tsx","components/Loader/Loader.tsx","views/Root/Root.tsx","App/App.tsx","index.tsx"],"names":["FETCH_SAGA","SAVE_ALL_DATA","SAVE_ALL_COLUMNS","SAVE_FIRST_RANGE_DATE","SAVE_MAX_VALUE","SET_MODAL_FLAG","SET_LOADER_FLAG","ADD_NEW_EMPLOYEE","ADD_COLUMNS_QUANTITY","fetchSaga","data","maxValue","columnsQuantity","type","CONST","saveAllData","saveAllColumns","columns","saveFirstRangeDate","firstRangeDate","setModalFlag","modalFlag","addNewEmployee","newEmployee","saveMaxValue","setColumnsQuantity","setLoaderFlag","loaderFlag","module","exports","dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","Button","buttonText","buttonType","onButtonClick","stylesButton","disabled","onClick","className","clsx","styles","button","memo","initialData","name","defaultCell","row","cell","initialState","RootReducer","combineReducers","reducer","state","action","dateGenerator","date","datesLength","currentDate","datesRange","i","push","Date","getTime","getDay","monthsNames","Number","columnGenerator","maxValueIn","monthDays","Header","headerFirstCol","accessor","length","currDayMonth","nextDayMonth","weekend","Cell","index","rows","filter","el","Object","keys","join","includes","column","id","sortArr","value","red","headerTopCell","sagaWorker","FetchSagaWatcher","localStorage","getItem","firstRangeDateFromLocalStorage","JSON","parse","calendarDataFromLocalStorage","columnsQuantityFromLocalStorage","put","setItem","initialColumns","stringify","console","log","takeEvery","rootSaga","all","fork","Notice","example_wrapper","example_item","examle_empty","examle_full","MaxEmployee","dispatch","useDispatch","useSelector","store","onChangeMaxEmployees","useCallback","htmlFor","min","onChange","event","target","Loader","loaderWrapper","ldsDefault","LazyCalendar","React","lazy","LazyModalContent","LazyModalDelContent","LazyModal","Root","useEffect","useState","delModal","setDelModal","onOpenModal","onCloseModal","onToggleDelModal","addPeriodHandler","newColumnsQuantity","appHeight","setAppHeight","window","innerHeight","addEventListener","outerHeight","root_wrapper","style","innerWidth","minHeight","fallback","onCloseButtonClick","modalContent","section_wrapper","buttons_wrapper","deleteButton","disabledButton","calendar_wrapper","addPeriodButtonWrapper","addPeriodButton","sectionTotal","sectionMaxEmployees","section_wrapper_notice","App","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById"],"mappings":"qHAAA,kTAAO,IAAMA,EAAa,aAEbC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAiB,iBAEjBC,EAAiB,iBACjBC,EAAkB,kBAElBC,EAAmB,mBACnBC,EAAuB,wB,8BCXpC,6TAIaC,EAAY,SACvBC,EACAC,EACAC,GAEA,MAAO,CACLC,KAAMC,IACNJ,OACAC,WACAC,oBAISG,EAAc,SAACL,GAC1B,MAAO,CACLG,KAAMC,IACNJ,SAISM,EAAiB,SAACC,GAC7B,MAAO,CACLJ,KAAMC,IACNG,YAISC,EAAqB,SAACC,GACjC,MAAO,CACLN,KAAMC,IACNK,mBAISC,EAAe,SAACC,GAC3B,MAAO,CACLR,KAAMC,IACNO,cAISC,EAAiB,SAACC,GAC7B,MAAO,CACLV,KAAMC,IACNS,gBAISC,EAAe,SAACb,GAC3B,MAAO,CACLE,KAAMC,IACNH,aAISc,EAAqB,SAACb,GACjC,MAAO,CACLC,KAAMC,IACNF,oBAISc,EAAgB,SAACC,GAC5B,MAAO,CACLd,KAAMC,IACNa,gB,gBCpEJC,EAAOC,QAAU,CAAC,aAAe,2BAA2B,gBAAkB,8BAA8B,iBAAmB,+BAA+B,gBAAkB,8BAA8B,aAAe,2BAA2B,aAAe,2BAA2B,eAAiB,6BAA6B,oBAAsB,kCAAkC,uBAAyB,qCAAqC,gBAAkB,8BAA8B,uBAAyB,qCAAqC,QAAU,wB,mBCA9jBD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,YAAc,6BAA6B,IAAM,uB,oBCAnOD,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,aAAe,6BAA6B,aAAe,6BAA6B,YAAc,8B,8BCD1K,kCAAO,IAAMC,EAAgB,SAACC,GAC5B,IAAMC,EACJD,EAAYE,UAAY,GAAxB,WACQF,EAAYE,WAChBF,EAAYE,UAEZC,EACJH,EAAYI,WAAa,EAAzB,WACQJ,EAAYI,WAAa,GAC7BJ,EAAYI,WAAa,EAEzBC,EAAOC,OAAON,EAAYO,eAAeC,MAAM,EAAG,GAExD,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAA0BE,K,4GCLtBI,EAA4B,SAAC,GAM5B,IALLC,EAKI,EALJA,WACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACAC,EACI,EADJA,SAEA,OACE,wBACEhC,KAAM6B,EACN,aAAYD,EACZK,QAASH,EACTI,UAAWC,YAAKC,IAAOC,OAAQN,GAC/BC,SAAUA,EALZ,SAOGJ,KAKQU,iBAAKX,I,oBC3BpBZ,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,WAAa,6B,6BCC7E,oEAAO,IAAMuB,EAAuB,CAClC,CACEC,KAAM,gBAER,CACEA,KAAM,iBAIGC,EAAc,CACzBC,IAAK,GACLC,KAAM,K,iBCZR5B,EAAOC,QAAU,CAAC,OAAS,yB,yKCMrB4B,EAAiC,CACrC/C,K,MAAM0C,EACNnC,QAAS,GACTE,eAAgB,KAChBE,WAAW,EACXV,SAAU,EACVC,gBAAiB,GACjBe,YAAY,GCXD+B,EAAcC,YAAgB,CACzCC,QDaqB,WAGH,IAFlBC,EAEiB,uDAFTJ,EACRK,EACiB,uCACjB,OAAQA,EAAOjD,MACb,KAAKC,IACH,OAAO,2BAAK+C,GAAZ,IAAmBnD,KAAMoD,EAAOpD,OAElC,KAAKI,IACH,OAAO,2BAAK+C,GAAZ,IAAmB5C,QAAS6C,EAAO7C,UAErC,KAAKH,IACH,OAAO,2BAAK+C,GAAZ,IAAmB1C,eAAgB2C,EAAO3C,iBAE5C,KAAKL,IACH,OAAO,2BAAK+C,GAAZ,IAAmBxC,UAAWyC,EAAOzC,YAEvC,KAAKP,IACH,OAAO,2BAAK+C,GAAZ,IAAmBnD,KAAK,CAAEoD,EAAOvC,aAAV,mBAA0BsC,EAAMnD,SAEzD,KAAKI,IACH,OAAO,2BAAK+C,GAAZ,IAAmBlD,SAAUmD,EAAOnD,WAEtC,KAAKG,IACH,OAAO,2BAAK+C,GAAZ,IAAmBjD,gBAAiBkD,EAAOlD,kBAE7C,KAAKE,IACH,OAAO,2BAAK+C,GAAZ,IAAmBlC,WAAYmC,EAAOnC,aAExC,QACE,OAAOkC,M,yCE/BEE,EAdY,SAACC,EAAYC,GAItC,IAHA,IAAMC,EAAcF,EACdG,EAAoB,GAEjBC,EAAI,EAAGA,EAAIH,EAAaG,IAC/BD,EAAWE,KAAK,CACdL,KAAMlC,YAAc,IAAIwC,KAAKJ,EAAYK,UAAY,MAAWH,IAChEpC,IAAK,IAAIsC,KAAKJ,EAAYK,UAAY,MAAWH,GAAGI,WAIxD,OAAOL,GCOMM,EApBK,SAACvC,GAiBnB,MAhBmB,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGYwC,OAAOxC,GAAS,I,wBCgHjByC,EAvHS,SAACX,EAAYrD,EAAkBsD,GACrD,IAAKD,EACH,MAAO,GAeT,IAZA,IAAMG,EAAaJ,EAAc,IAAIO,KAAKN,GAAOC,GAC3CC,EAAcpC,YAAc,IAAIwC,MAChCM,EAAajE,GAAY,EAE3BkE,EAAiB,GACf5D,EAAe,CACnB,CACE6D,OAAQ,qBAAK/B,UAAWE,IAAO8B,eAAvB,sBACRC,SAAU,SAILZ,EAAI,EAAGA,EAAID,EAAWc,OAAQb,IAAK,CAC1C,IAAIc,EAAef,EAAWC,GAAGJ,KAAKzB,MAAM,EAAG,GAC3C4C,EACFhB,EAAWc,OAAS,IAAMb,GAAKD,EAAWC,EAAI,GAAGJ,KAAKzB,MAAM,EAAG,GAC7DH,EAAO+B,EAAWC,GAAGJ,KAAKzB,MAAM,EAAG,GAEnC2C,IAAiBC,EACnBN,EAAUR,KAAK,CACbS,OACE,qBACE/B,UAAWC,YACa,IAAtBmB,EAAWC,GAAGpC,KAAmC,IAAtBmC,EAAWC,GAAGpC,IACrCiB,IAAOmC,QACP,GACJnC,IAAOO,KACPW,EAAWC,GAAGJ,OAASE,GAAejB,IAAOiB,aANjD,SASGC,EAAWC,GAAGJ,KAAKzB,MAAM,EAAG,KAGjCyC,SAAS,KAAD,OAAOb,EAAWC,GAAGJ,KAAKzB,MAAM,EAAG,IAAnC,OAAwC4B,EAC9CC,GACAJ,KAAKzB,MAAM,EAAG,IAFR,OAEa4B,EAAWC,GAAGJ,KAAKzB,MAAM,EAAG,IACjD8C,KAAM,SAAC7B,GACL,GAAIA,EAAKD,IAAI+B,QAAU9B,EAAK+B,KAAKN,OAAS,EAIxC,OAHgBzB,EAAK9C,KAAK8E,QAAO,SAACC,GAAD,OAC/BC,OAAOC,KAAKF,GAAIG,KAAK,KAAKC,SAASrC,EAAKsC,OAAOC,OAElCd,OAGjB,GAAIzB,EAAKD,IAAI+B,QAAU9B,EAAK+B,KAAKN,OAAS,EAAG,CAC3C,IAAMe,EAAUxC,EAAK9C,KAAK8E,QAAO,SAACC,GAAD,OAC/BC,OAAOC,KAAKF,GAAIG,KAAK,KAAKC,SAASrC,EAAKsC,OAAOC,OAE3CE,EAAQzC,EAAK+B,KAAKN,OAASe,EAAQf,OAAS,EAClD,OACE,qBAAKlC,UAAWC,YAAKiD,EAAQrB,GAAc3B,IAAOiD,KAAlD,SACGD,IAKP,OAAO,8BAAMzC,EAAKyC,YAItBpB,EAAUR,KAAK,CACbS,OACE,qBACE/B,UAAWC,YACa,IAAtBmB,EAAWC,GAAGpC,KAAmC,IAAtBmC,EAAWC,GAAGpC,IACrCiB,IAAOmC,QACP,GACJnC,IAAOO,MALX,SAQGW,EAAWC,GAAGJ,KAAKzB,MAAM,EAAG,KAGjCyC,SAAS,KAAD,OAAOb,EAAWC,GAAGJ,KAAKzB,MAAM,EAAG,IAAnC,OAAwC4B,EAC9CC,GACAJ,KAAKzB,MAAM,EAAG,IAFR,OAEa4B,EAAWC,GAAGJ,KAAKzB,MAAM,EAAG,IACjD8C,KAAM,SAAC7B,GACL,GAAIA,EAAKD,IAAI+B,QAAU9B,EAAK+B,KAAKN,OAAS,EAIxC,OAHgBzB,EAAK9C,KAAK8E,QAAO,SAACC,GAAD,OAC/BC,OAAOC,KAAKF,GAAIG,KAAK,KAAKC,SAASrC,EAAKsC,OAAOC,OAElCd,OAGjB,GAAIzB,EAAKD,IAAI+B,QAAU9B,EAAK+B,KAAKN,OAAS,EAAG,CAC3C,IAAMe,EAAUxC,EAAK9C,KAAK8E,QAAO,SAACC,GAAD,OAC/BC,OAAOC,KAAKF,GAAIG,KAAK,KAAKC,SAASrC,EAAKsC,OAAOC,OAE3CE,EAAQzC,EAAK+B,KAAKN,OAASe,EAAQf,OAAS,EAClD,OACE,qBAAKlC,UAAWC,YAAKiD,EAAQrB,GAAc3B,IAAOiD,KAAlD,SACGD,IAIP,OAAO,8BAAMzC,EAAKyC,WAItBhF,EAAQoD,KAAK,CACXS,OACE,qBACE/B,UAAWC,YAAKC,IAAOO,KAAMP,IAAOkD,eADtC,mBAEK1B,EAAYS,GAFjB,aAEmC9C,KAErC4C,SAAUE,EACVjE,QAAQ,GAAD,OAAM4D,KAEfA,EAAUI,OAAS,GAGvB,OAAOhE,G,kBC5GCmF,G,WA6DOC,GA7DjB,SAAUD,EAAWtC,GAArB,+EAEiD,OAFjD,kBAEuDwC,aAAaC,QAC9D,kBAHN,OAKkD,OAHxCC,EAFV,gBAKwDC,KAAKC,MACvDJ,aAAaC,QAAQ,aAAe,MAN1C,OAQ6B,OAHnBI,EALV,gBAQmCL,aAAaC,QAAQ,YARxD,OASoD,OAD1C5F,EARV,iBAS0D2F,aAAaC,QACjE,mBAVN,WASUK,EATV,QAaQjG,EAbR,iBAcM,OAdN,UAcYkG,YAAIrF,YAAakD,OAAO/D,KAdpC,gCAgBM,OAhBN,UAgBY2F,aAAaQ,QAAQ,WAAYzE,OAAOyB,EAAOnD,WAhB3D,QAmBgC,OAnBhC,UAmBsC,GAnBtC,WAmBQoG,EAnBR,QAqBQH,EArBR,iBAsBM,OAtBN,UAsBYC,YAAIpF,YAAmBiD,OAAOkC,KAtB1C,gCAwBM,OAxBN,UAwBYN,aAAaQ,QACjB,kBACAzE,OAAOyB,EAAOlD,kBA1BtB,YA8BQ4F,EA9BR,iBA+BuB,OA/BvB,UA+B6B7B,EACrB6B,EACA7F,EACAiG,GAAmC9C,EAAOlD,iBAlClD,QAoCM,OALAmG,EA/BN,iBAoCYF,YAAI3F,YAAmBsF,IApCnC,gCAsCuB,OAtCvB,UAsC6B7B,EACrB,IAAIL,KACJR,EAAOnD,SACPiG,GAAmC9C,EAAOlD,iBAzClD,QA2CM,OALAmG,EAtCN,iBA2CYT,aAAaQ,QAAQ,iBAAkBzE,OAAO,IAAIiC,OA3C9D,QA8CI,OA9CJ,UA8CUuC,YAAI7F,YAAe+F,IA9C7B,YAgDQJ,EAA6B1B,OAhDrC,iBAiDM,OAjDN,UAiDY4B,YAAI9F,YAAY4F,IAjD5B,gCAmDM,OAnDN,UAmDYL,aAAaQ,QAAQ,WAAYL,KAAKO,UAAUlD,EAAOpD,OAnDnE,0DAuDIuG,QAAQC,IAAR,MAvDJ,QAyDI,OAzDJ,oBAyDUL,YAAInF,aAAc,IAzD5B,wFA6DO,SAAU2E,IAAV,iEACL,OADK,SACCc,YAAUnH,IAAYoG,GADvB,uC,eC1EkBgB,GAAV,SAAUA,IAAV,iEACb,OADa,SACPC,YAAI,CAACC,YAAKjB,KADH,uC,2CC4BAkB,EA5BU,WACvB,OACE,qCACE,wCAEA,sBAAKxE,UAAWE,IAAOuE,gBAAvB,UACE,sBAAKzE,UAAWE,IAAOwE,aAAvB,UACE,qBAAK1E,UAAWE,IAAOyE,eACvB,6CAGF,sBAAK3E,UAAWE,IAAOwE,aAAvB,UACE,qBAAK1E,UAAWE,IAAOyE,aAAvB,SACE,qBAAK3E,UAAWE,IAAO0E,gBAEzB,gDAIJ,8KCyBSC,EAxCe,WAC5B,IAAMC,EAAWC,cAEXpH,EAAOqH,aACX,SAACC,GAAD,OAAWA,EAAMpE,QAAQlD,QAErBE,EAAkBmH,aACtB,SAACC,GAAD,OAAWA,EAAMpE,QAAQhD,mBAErBD,EAAWoH,aACf,SAACC,GAAD,OAAWA,EAAMpE,QAAQjD,YAGrBsH,EAAuBC,uBAC3B,SAACjC,GACKA,EAAQ,IAIZK,aAAaQ,QAAQ,WAAYzE,OAAO4D,IACxC4B,EAASrG,YAAayE,IACtB4B,EAASpH,YAAUC,EAAMuF,EAAOrF,OAElC,CAACiH,EAAUjH,EAAiBF,IAG9B,OACE,qCACE,uBAAOyH,QAAQ,QAAf,yCACA,uBACEpC,GAAG,QACHlF,KAAK,SACLuH,IAAK,EACLnC,MAAOtF,EACP0H,SAAU,SAACC,GAAD,OAAWL,EAAqBvD,OAAM,OAAC4D,QAAD,IAACA,OAAD,EAACA,EAAOC,OAAOtC,e,iCCjBxDuC,EArBU,WACvB,OACE,qBAAKzF,UAAWE,IAAOwF,cAAvB,SACE,sBAAK1F,UAAWE,IAAOyF,WAAvB,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,8BCCFC,EAAeC,IAAMC,MAAK,kBAAM,sDAChCC,EAAmBF,IAAMC,MAC7B,kBAAM,gCAEFE,EAAsBH,IAAMC,MAChC,kBAAM,gCAEFG,EAAYJ,IAAMC,MAAK,kBAAM,gCAE7BI,EAAiB,WACrB,IAAMpB,EAAWC,cAEXE,EAAQD,aACZ,SAACC,GAAD,OAAWA,EAAMpE,WAGnBsF,qBAAU,WACRrB,EAASpH,YAAUuH,EAAMtH,KAAMsH,EAAMrH,SAAUqH,EAAMpH,oBAEpD,CAACiH,IAEJ,MAAgCsB,oBAAkB,GAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAcpB,uBAAY,WAC9BL,EAASzG,aAAa,MACrB,CAACyG,IAEE0B,EAAerB,uBAAY,WAC/BL,EAASzG,aAAa,MACrB,CAACyG,IAEE2B,EAAmBtB,uBAAY,WACnCmB,GAAaD,KACZ,CAACA,IAEJF,qBAAU,WAER,OAAOvE,EAAgBqD,EAAM7G,eAAgB6G,EAAMrH,SAAU,MAC5D,CAACqH,EAAM7G,eAAgB6G,EAAMrH,WAEhC,IAAM8I,EAAmBvB,uBAAY,WACnC,IAAMwB,EAAqB1B,EAAMpH,gBAAkB,GACnD0F,aAAaQ,QAAQ,kBAAmBzE,OAAOqH,IAC/C7B,EAASpG,YAAmBiI,IAC5B7B,EAASpH,YAAUuH,EAAMtH,KAAMsH,EAAMrH,SAAU+I,MAC9C,CAAC7B,EAAUG,EAAMpH,gBAAiBoH,EAAMtH,KAAMsH,EAAMrH,WAIvD,EAAkCwI,mBAAiB,GAAnD,mBAAOQ,EAAP,KAAkBC,EAAlB,KAWA,OAVAV,qBAAU,kBAAMU,EAAaC,OAAOC,eAAc,IAGlDD,OAAOE,iBACL,UACA,kBAAMH,EAAaC,OAAOG,gBAC1B,GAKA,sBACEjH,UAAWE,IAAOgH,aAClBC,MAAOL,OAAOM,WAAa,IAAM,CAAEC,UAAWT,GAAc,GAF9D,UAIE,iCACE,mDAGD3B,EAAMrG,WACL,cAAC,EAAD,IAEA,qCACGqG,EAAM3G,WACL,cAAC,WAAD,CAAUgJ,SAAU,cAAC,EAAD,IAApB,SACE,cAACrB,EAAD,CACEsB,mBAAoBf,EACpBgB,aAAczB,MAKnBM,GACC,cAAC,WAAD,CAAUiB,SAAU,cAAC,EAAD,IAApB,SACE,cAACrB,EAAD,CACEsB,mBAAoBd,EACpBe,aAAcxB,MAKpB,0BACEhG,UAAWC,YAAKC,IAAOuH,gBAAiBvH,IAAOwH,iBADjD,UAGE,cAACjI,EAAA,EAAD,CACEC,WAAW,eACXC,WAAW,SACXC,cAAe2G,IAGhBtB,EAAMtH,KAAKuE,OAAS,GACnB,cAACzC,EAAA,EAAD,CACEC,WACwB,IAAtBuF,EAAMtH,KAAKuE,OACP,kBACA,uBAENvC,WAAW,SACXC,cAAe6G,EACf5G,aAAcI,YACZC,IAAOyH,aACP1C,EAAMtH,KAAKuE,QAAU,GAAKhC,IAAO0H,gBAEnC9H,SAAUmF,EAAMtH,KAAKuE,QAAU,OAKpC+C,EAAMtH,KAAKuE,OAAS,GACnB,qCACE,0BACElC,UAAWC,YACTC,IAAOuH,gBACPvH,IAAO2H,kBAHX,UAME,cAAC,WAAD,CAAUP,SAAU,cAAC,EAAD,IAApB,SACE,cAAC1B,EAAD,CAAcjI,KAAMsH,EAAMtH,KAAMO,QAAS+G,EAAM/G,YAGjD,qBAAK8B,UAAWE,IAAO4H,uBAAvB,SACE,cAACrI,EAAA,EAAD,CACEC,WAAW,aACXC,WAAW,SACXE,aAAcK,IAAO6H,gBACrBnI,cAAe8G,SAKrB,0BACE1G,UAAWC,YAAKC,IAAOuH,gBAAiBvH,IAAO8H,cADjD,UAGE,oDACA,+BAAO/C,EAAMtH,KAAKuE,OAAS,OAG7B,yBACElC,UAAWC,YACTC,IAAOuH,gBACPvH,IAAO+H,qBAHX,SAME,cAAC,EAAD,MAGF,yBACEjI,UAAWC,YACTC,IAAOuH,gBACPvH,IAAOgI,wBAHX,SAME,cAAC,EAAD,gBAUD9H,iBAAK8F,G,MClLLiC,MARf,WACE,OACE,qBAAKnI,UAAU,MAAf,SACE,cAAC,EAAD,OCGAoI,EAAOC,cAOPC,EAAmBxB,OAAOyB,sCAAwCC,IAClEvD,EAAQwD,YAAY9H,EAAa2H,EAAiBI,YAAgBN,KAExEA,EAAKO,IAAIC,GAETC,IAASC,OACP,cAAC,IAAD,CAAU7D,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF8D,SAASC,eAAe,W","file":"static/js/main.6dd759e2.chunk.js","sourcesContent":["export const FETCH_SAGA = 'FETCH_SAGA';\n\nexport const SAVE_ALL_DATA = 'SAVE_ALL_DATA';\nexport const SAVE_ALL_COLUMNS = 'SAVE_ALL_COLUMNS';\nexport const SAVE_FIRST_RANGE_DATE = 'SAVE_FIRST_RANGE_DATE';\nexport const SAVE_MAX_VALUE = 'SAVE_MAX_VALUE';\n\nexport const SET_MODAL_FLAG = 'SET_MODAL_FLAG';\nexport const SET_LOADER_FLAG = 'SET_LOADER_FLAG';\n\nexport const ADD_NEW_EMPLOYEE = 'ADD_NEW_EMPLOYEE';\nexport const ADD_COLUMNS_QUANTITY = 'ADD_COLUMNS_QUANTITY';\n","import * as CONST from './constants';\n\nimport { IData } from './types';\n\nexport const fetchSaga = (\n  data: IData[],\n  maxValue: number,\n  columnsQuantity: number,\n) => {\n  return {\n    type: CONST.FETCH_SAGA,\n    data,\n    maxValue,\n    columnsQuantity,\n  } as const;\n};\n\nexport const saveAllData = (data: IData[]) => {\n  return {\n    type: CONST.SAVE_ALL_DATA,\n    data,\n  } as const;\n};\n\nexport const saveAllColumns = (columns: any[]) => {\n  return {\n    type: CONST.SAVE_ALL_COLUMNS,\n    columns,\n  } as const;\n};\n\nexport const saveFirstRangeDate = (firstRangeDate: Date) => {\n  return {\n    type: CONST.SAVE_FIRST_RANGE_DATE,\n    firstRangeDate,\n  } as const;\n};\n\nexport const setModalFlag = (modalFlag: boolean) => {\n  return {\n    type: CONST.SET_MODAL_FLAG,\n    modalFlag,\n  } as const;\n};\n\nexport const addNewEmployee = (newEmployee: IData) => {\n  return {\n    type: CONST.ADD_NEW_EMPLOYEE,\n    newEmployee,\n  } as const;\n};\n\nexport const saveMaxValue = (maxValue: number) => {\n  return {\n    type: CONST.SAVE_MAX_VALUE,\n    maxValue,\n  } as const;\n};\n\nexport const setColumnsQuantity = (columnsQuantity: number) => {\n  return {\n    type: CONST.ADD_COLUMNS_QUANTITY,\n    columnsQuantity,\n  } as const;\n};\n\nexport const setLoaderFlag = (loaderFlag: boolean) => {\n  return {\n    type: CONST.SET_LOADER_FLAG,\n    loaderFlag,\n  } as const;\n};\n\ntype FetchSagaType = ReturnType<typeof fetchSaga>;\ntype saveAllDataType = ReturnType<typeof saveAllData>;\ntype saveAllColumnsType = ReturnType<typeof saveAllColumns>;\ntype saveFirstRangeDateType = ReturnType<typeof saveFirstRangeDate>;\ntype setModalFlagType = ReturnType<typeof setModalFlag>;\ntype addNewEmployeeType = ReturnType<typeof addNewEmployee>;\ntype saveMaxValueType = ReturnType<typeof saveMaxValue>;\ntype setColumnsQuantityType = ReturnType<typeof setColumnsQuantity>;\ntype setLoaderFlagType = ReturnType<typeof setLoaderFlag>;\n\nexport type ActionsType =\n  | FetchSagaType\n  | saveAllDataType\n  | saveAllColumnsType\n  | saveFirstRangeDateType\n  | setModalFlagType\n  | addNewEmployeeType\n  | saveMaxValueType\n  | setColumnsQuantityType\n  | setLoaderFlagType;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrapper\":\"Root_root_wrapper__eL6rt\",\"section_wrapper\":\"Root_section_wrapper__dgqip\",\"calendar_wrapper\":\"Root_calendar_wrapper__1t7Ie\",\"buttons_wrapper\":\"Root_buttons_wrapper__2--Nx\",\"deleteButton\":\"Root_deleteButton__IXlIF\",\"sectionTotal\":\"Root_sectionTotal__2sBkM\",\"disabledButton\":\"Root_disabledButton__3-F7j\",\"sectionMaxEmployees\":\"Root_sectionMaxEmployees__15T99\",\"addPeriodButtonWrapper\":\"Root_addPeriodButtonWrapper__1TEqF\",\"addPeriodButton\":\"Root_addPeriodButton__zSwil\",\"section_wrapper_notice\":\"Root_section_wrapper_notice___S4nm\",\"loading\":\"Root_loading__2K_se\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"columns_cell__32YGY\",\"weekend\":\"columns_weekend__3-10h\",\"headerFirstCol\":\"columns_headerFirstCol__2_EEi\",\"headerTopCell\":\"columns_headerTopCell__1xdye\",\"currentDate\":\"columns_currentDate__10MN6\",\"red\":\"columns_red__3001Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example_wrapper\":\"styles_example_wrapper__27iou\",\"example_item\":\"styles_example_item__13YvF\",\"examle_empty\":\"styles_examle_empty__2RCxh\",\"examle_full\":\"styles_examle_full__1AxDR\"};","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","/* eslint-disable react/button-has-type */\nimport React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({\n  buttonText,\n  buttonType,\n  onButtonClick,\n  stylesButton,\n  disabled,\n}) => {\n  return (\n    <button\n      type={buttonType}\n      aria-label={buttonText}\n      onClick={onButtonClick}\n      className={clsx(styles.button, stylesButton)}\n      disabled={disabled}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default memo(Button);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"styles_loaderWrapper__2OFeU\",\"ldsDefault\":\"styles_ldsDefault__3V2fP\"};","import { IData } from '../store/types';\n\nexport const initialData: IData[] = [\n  {\n    name: 'Total office',\n  },\n  {\n    name: 'Total remote',\n  },\n];\n\nexport const defaultCell = {\n  row: '',\n  cell: '',\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","import * as CONST from '../constants';\n\nimport { initialData } from '../../constants/table';\n\nimport { ActionsType } from '../actions';\nimport { InitialStateType } from '../types';\n\nconst initialState: InitialStateType = {\n  data: initialData,\n  columns: [],\n  firstRangeDate: null,\n  modalFlag: false,\n  maxValue: 1,\n  columnsQuantity: 90,\n  loaderFlag: true,\n};\n\nexport const Reducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case CONST.SAVE_ALL_DATA:\n      return { ...state, data: action.data };\n\n    case CONST.SAVE_ALL_COLUMNS:\n      return { ...state, columns: action.columns };\n\n    case CONST.SAVE_FIRST_RANGE_DATE:\n      return { ...state, firstRangeDate: action.firstRangeDate };\n\n    case CONST.SET_MODAL_FLAG:\n      return { ...state, modalFlag: action.modalFlag };\n\n    case CONST.ADD_NEW_EMPLOYEE:\n      return { ...state, data: [action.newEmployee, ...state.data] };\n\n    case CONST.SAVE_MAX_VALUE:\n      return { ...state, maxValue: action.maxValue };\n\n    case CONST.ADD_COLUMNS_QUANTITY:\n      return { ...state, columnsQuantity: action.columnsQuantity };\n\n    case CONST.SET_LOADER_FLAG:\n      return { ...state, loaderFlag: action.loaderFlag };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { Reducer } from './Reducer/Reducer';\n\nexport const RootReducer = combineReducers({\n  reducer: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = (date: Date, datesLength: number) => {\n  const currentDate = date;\n  const datesRange: any[] = [];\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './columns.module.css';\nimport { dateFormatter } from '../../../utils/dateFormatter';\n\nconst columnGenerator = (date: Date, maxValue: number, datesLength: number) => {\n  if (!date) {\n    return [];\n  }\n\n  const datesRange = dateGenerator(new Date(date), datesLength);\n  const currentDate = dateFormatter(new Date());\n  const maxValueIn = maxValue || 1;\n\n  let monthDays: any = [];\n  const columns: any = [\n    {\n      Header: <div className={styles.headerFirstCol}>Employee</div>,\n      accessor: 'name',\n    },\n  ];\n\n  for (let i = 0; i < datesRange.length; i++) {\n    let currDayMonth = datesRange[i].date.slice(3, 5);\n    let nextDayMonth =\n      datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n    let year = datesRange[i].date.slice(6, 8);\n\n    if (currDayMonth === nextDayMonth) {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n              datesRange[i].date === currentDate && styles.currentDate,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n\n          return <div>{cell.value}</div>;\n        },\n      });\n    } else {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n          return <div>{cell.value}</div>;\n        },\n      });\n\n      columns.push({\n        Header: (\n          <div\n            className={clsx(styles.cell, styles.headerTopCell)}\n          >{`${monthsNames(currDayMonth)} '${year}`}</div>\n        ),\n        accessor: currDayMonth,\n        columns: [...monthDays],\n      });\n      monthDays.length = 0;\n    }\n  }\n  return columns;\n};\n\nexport default columnGenerator;\n","import { put, takeEvery } from 'redux-saga/effects';\n\nimport columnGenerator from '../../../components/Calendar/assets/columns';\n\nimport {\n  saveAllColumns,\n  saveAllData,\n  saveFirstRangeDate,\n  saveMaxValue,\n  setColumnsQuantity,\n  setLoaderFlag,\n} from '../../actions';\n\nimport { FETCH_SAGA } from '../../constants';\n\nimport { FetchSagaActionType, IData } from '../../types';\n\nfunction* sagaWorker(action: FetchSagaActionType) {\n  try {\n    const firstRangeDateFromLocalStorage: Date = yield localStorage.getItem(\n      'firstRangeDate',\n    );\n    const calendarDataFromLocalStorage: IData[] = yield JSON.parse(\n      localStorage.getItem('calendar') || '[]',\n    );\n    const maxValue: number = yield localStorage.getItem('maxValue');\n    const columnsQuantityFromLocalStorage: number = yield localStorage.getItem(\n      'columnsQuantity',\n    );\n\n    if (maxValue) {\n      yield put(saveMaxValue(Number(maxValue)));\n    } else {\n      yield localStorage.setItem('maxValue', String(action.maxValue));\n    }\n\n    let initialColumns: any[] = yield [];\n\n    if (columnsQuantityFromLocalStorage) {\n      yield put(setColumnsQuantity(Number(columnsQuantityFromLocalStorage)));\n    } else {\n      yield localStorage.setItem(\n        'columnsQuantity',\n        String(action.columnsQuantity),\n      );\n    }\n\n    if (firstRangeDateFromLocalStorage) {\n      initialColumns = yield columnGenerator(\n        firstRangeDateFromLocalStorage,\n        maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield put(saveFirstRangeDate(firstRangeDateFromLocalStorage));\n    } else {\n      initialColumns = yield columnGenerator(\n        new Date(),\n        action.maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield localStorage.setItem('firstRangeDate', String(new Date()));\n    }\n\n    yield put(saveAllColumns(initialColumns));\n\n    if (calendarDataFromLocalStorage.length) {\n      yield put(saveAllData(calendarDataFromLocalStorage));\n    } else {\n      yield localStorage.setItem('calendar', JSON.stringify(action.data));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  } finally {\n    yield put(setLoaderFlag(false));\n  }\n}\n\nexport function* FetchSagaWatcher() {\n  yield takeEvery(FETCH_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { FetchSagaWatcher } from './Reducer/sagas/FetchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(FetchSagaWatcher)]);\n}\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nconst Notice: React.FC = () => {\n  return (\n    <>\n      <h3>Notice</h3>\n\n      <div className={styles.example_wrapper}>\n        <div className={styles.example_item}>\n          <div className={styles.examle_empty} />\n          <span>office</span>\n        </div>\n\n        <div className={styles.example_item}>\n          <div className={styles.examle_empty}>\n            <div className={styles.examle_full} />\n          </div>\n          <span>remote</span>\n        </div>\n      </div>\n\n      <p>\n        You can change statuses of one employee in a few days at once by click\n        holding &apos;Ctrl&apos; button for Windows and Linux or\n        &apos;Command&apos; for MacOs\n      </p>\n    </>\n  );\n};\n\nexport default Notice;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchSaga, saveMaxValue } from '../../store/actions';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { IData } from '../../store/types';\n\nconst MaxEmployee: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector<AppStateType, IData[]>(\n    (store) => store.reducer.data,\n  );\n  const columnsQuantity = useSelector<AppStateType, number>(\n    (store) => store.reducer.columnsQuantity,\n  );\n  const maxValue = useSelector<AppStateType, number>(\n    (store) => store.reducer.maxValue,\n  );\n\n  const onChangeMaxEmployees = useCallback(\n    (value: number) => {\n      if (value < 0) {\n        return;\n      }\n\n      localStorage.setItem('maxValue', String(value));\n      dispatch(saveMaxValue(value));\n      dispatch(fetchSaga(data, value, columnsQuantity));\n    },\n    [dispatch, columnsQuantity, data],\n  );\n\n  return (\n    <>\n      <label htmlFor=\"label\">Set max employees in office</label>\n      <input\n        id=\"label\"\n        type=\"number\"\n        min={1}\n        value={maxValue}\n        onChange={(event) => onChangeMaxEmployees(Number(event?.target.value))}\n      />\n    </>\n  );\n};\n\nexport default MaxEmployee;\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className={styles.loaderWrapper}>\n      <div className={styles.ldsDefault}>\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { memo, Suspense, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { InitialStateType } from '../../store/types';\nimport {\n  fetchSaga,\n  setColumnsQuantity,\n  setModalFlag,\n} from '../../store/actions';\n\nimport Button from '../../ui/Button';\nimport Notice from '../../components/Notice';\nimport MaxEmployee from '../../components/MaxEmployee';\nimport columnGenerator from '../../components/Calendar/assets/columns';\n\nimport styles from './Root.module.css';\nimport Loader from '../../components/Loader';\n\nconst LazyCalendar = React.lazy(() => import('../../components/Calendar'));\nconst LazyModalContent = React.lazy(\n  () => import('../../components/ModalContent'),\n);\nconst LazyModalDelContent = React.lazy(\n  () => import('../../components/ModalDelContent'),\n);\nconst LazyModal = React.lazy(() => import('../../ui/Modal'));\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const store = useSelector<AppStateType, InitialStateType>(\n    (store) => store.reducer,\n  );\n\n  useEffect(() => {\n    dispatch(fetchSaga(store.data, store.maxValue, store.columnsQuantity));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const [delModal, setDelModal] = useState<boolean>(false);\n\n  const onOpenModal = useCallback(() => {\n    dispatch(setModalFlag(true));\n  }, [dispatch]);\n\n  const onCloseModal = useCallback(() => {\n    dispatch(setModalFlag(false));\n  }, [dispatch]);\n\n  const onToggleDelModal = useCallback(() => {\n    setDelModal(!delModal);\n  }, [delModal]);\n\n  useEffect(() => {\n    // @ts-ignore\n    return columnGenerator(store.firstRangeDate, store.maxValue, 90);\n  }, [store.firstRangeDate, store.maxValue]);\n\n  const addPeriodHandler = useCallback(() => {\n    const newColumnsQuantity = store.columnsQuantity + 90;\n    localStorage.setItem('columnsQuantity', String(newColumnsQuantity));\n    dispatch(setColumnsQuantity(newColumnsQuantity));\n    dispatch(fetchSaga(store.data, store.maxValue, newColumnsQuantity));\n  }, [dispatch, store.columnsQuantity, store.data, store.maxValue]);\n\n  // app height\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [appHeight, setAppHeight] = useState<number>(0);\n  useEffect(() => setAppHeight(window.innerHeight), []);\n\n  // resize\n  window.addEventListener(\n    'resize',\n    () => setAppHeight(window.outerHeight),\n    true,\n  );\n  // app height\n\n  return (\n    <div\n      className={styles.root_wrapper}\n      style={window.innerWidth < 480 ? { minHeight: appHeight } : {}}\n    >\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      {store.loaderFlag ? (\n        <Loader />\n      ) : (\n        <>\n          {store.modalFlag && (\n            <Suspense fallback={<Loader />}>\n              <LazyModal\n                onCloseButtonClick={onCloseModal}\n                modalContent={LazyModalContent}\n              />\n            </Suspense>\n          )}\n\n          {delModal && (\n            <Suspense fallback={<Loader />}>\n              <LazyModal\n                onCloseButtonClick={onToggleDelModal}\n                modalContent={LazyModalDelContent}\n              />\n            </Suspense>\n          )}\n\n          <section\n            className={clsx(styles.section_wrapper, styles.buttons_wrapper)}\n          >\n            <Button\n              buttonText=\"Add employee\"\n              buttonType=\"button\"\n              onButtonClick={onOpenModal}\n            />\n\n            {store.data.length > 2 && (\n              <Button\n                buttonText={\n                  store.data.length === 3\n                    ? 'Delete employee'\n                    : 'Delete all employees'\n                }\n                buttonType=\"button\"\n                onButtonClick={onToggleDelModal}\n                stylesButton={clsx(\n                  styles.deleteButton,\n                  store.data.length <= 2 && styles.disabledButton,\n                )}\n                disabled={store.data.length <= 2}\n              />\n            )}\n          </section>\n\n          {store.data.length > 2 && (\n            <>\n              <section\n                className={clsx(\n                  styles.section_wrapper,\n                  styles.calendar_wrapper,\n                )}\n              >\n                <Suspense fallback={<Loader />}>\n                  <LazyCalendar data={store.data} columns={store.columns} />\n                </Suspense>\n\n                <div className={styles.addPeriodButtonWrapper}>\n                  <Button\n                    buttonText=\"Add period\"\n                    buttonType=\"button\"\n                    stylesButton={styles.addPeriodButton}\n                    onButtonClick={addPeriodHandler}\n                  />\n                </div>\n              </section>\n\n              <section\n                className={clsx(styles.section_wrapper, styles.sectionTotal)}\n              >\n                <span>Total employees:</span>\n                <span>{store.data.length - 2}</span>\n              </section>\n\n              <section\n                className={clsx(\n                  styles.section_wrapper,\n                  styles.sectionMaxEmployees,\n                )}\n              >\n                <MaxEmployee />\n              </section>\n\n              <section\n                className={clsx(\n                  styles.section_wrapper,\n                  styles.section_wrapper_notice,\n                )}\n              >\n                <Notice />\n              </section>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Root);\n","import React from 'react';\n\nimport Root from '../views/Root';\n\nimport './App.module.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\nimport App from './App/App';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}