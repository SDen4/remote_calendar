{"version":3,"sources":["components/Calendar/assets/columns.module.css","components/ModalContent/ModalContent.module.css","views/Root/Root.module.css","ui/Modal/Modal.module.css","ui/Button/Button.module.css","store/constants.ts","store/Reducer/Reducer.ts","store/RootReducer.ts","utils/dateFormatter.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/columns.tsx","store/actions.ts","store/Reducer/sagas/FetchSaga.ts","store/RootSaga.ts","ui/Modal/Modal.tsx","ui/Button/Button.tsx","components/Calendar/Calendar.tsx","utils/accessorDatesGenerator.ts","components/ModalContent/ModalContent.tsx","views/Root/Root.tsx","App/App.tsx","index.tsx","components/Calendar/Calendar.module.css"],"names":["module","exports","FETCH_SAGA","SAVE_ALL_DATA","SAVE_ALL_COLUMNS","SAVE_FIRST_RANGE_DATE","SET_MODAL_FLAG","ADD_NEW_EMPLOYEE","initialState","data","name","columns","firstRangeDate","modalFlag","RootReducer","combineReducers","reducer","state","action","type","newEmployee","dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","dateGenerator","date","currentDate","datesRange","i","push","Date","getTime","getDay","monthsNames","Number","columnGenerator","monthDays","Header","className","styles","headerFirstCol","accessor","length","currDayMonth","nextDayMonth","clsx","weekend","cell","Cell","row","index","rows","sortArr","filter","el","Object","keys","join","includes","column","id","value","headerTopCell","saveAllData","setModalFlag","addNewEmployee","sagaWorker","FetchSagaWatcher","localStorage","getItem","firstRangeDateFromLocalStorage","JSON","parse","calendarDataFromLocalStorage","initialColumns","put","setItem","stringify","console","log","takeEvery","rootSaga","all","fork","Modal","onCloseButtonClick","InnerComponent","modalContent","modalWrapper","modal","onClick","button","Button","buttonText","buttonType","onButtonClick","stylesButton","Calendar","dispatch","useDispatch","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","table","map","headerGroup","j","getHeaderGroupProps","key","Math","random","headers","getHeaderProps","firstCell","hiddenCell","hiddenCell2","tableHeader","render","getRowProps","cells","getCellProps","tableCell","left","tdInner","cellButton","cellId","rowId","newData","concat","onCellClick","buttonDelRow","delRow","deleteRowHandler","accessorDatesGenerator","newObj","ModalContent","useSelector","store","useState","setName","typeOfWork","setTypeOfWork","onRadioClick","onSubmitHahdler","onSubmit","form","labelWrapper","onChange","event","target","radioWrapper","defaultChecked","Root","useEffect","root_wrapper","section_wrapper","calendar_wrapper","App","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2b1b9e5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"columns_cell__32YGY\",\"weekend\":\"columns_weekend__3-10h\",\"headerFirstCol\":\"columns_headerFirstCol__2_EEi\",\"headerTopCell\":\"columns_headerTopCell__1xdye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContent\":\"ModalContent_modalContent__2Ret1\",\"form\":\"ModalContent_form__169qh\",\"labelWrapper\":\"ModalContent_labelWrapper__2EgFl\",\"radioWrapper\":\"ModalContent_radioWrapper__2iTLh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrapper\":\"Root_root_wrapper__eL6rt\",\"section_wrapper\":\"Root_section_wrapper__dgqip\",\"calendar_wrapper\":\"Root_calendar_wrapper__1t7Ie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__2YViX\",\"modal\":\"Modal_modal__26uN6\",\"button\":\"Modal_button__36BgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","export const FETCH_SAGA = 'FETCH_SAGA';\n\nexport const SAVE_ALL_DATA = 'SAVE_ALL_DATA';\nexport const SAVE_ALL_COLUMNS = 'SAVE_ALL_COLUMNS';\nexport const SAVE_FIRST_RANGE_DATE = 'SAVE_FIRST_RANGE_DATE';\n\nexport const SET_MODAL_FLAG = 'SET_MODAL_FLAG';\n\nexport const ADD_NEW_EMPLOYEE = 'ADD_NEW_EMPLOYEE';\n","import {\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n} from '../constants';\nimport { ActionsType } from '../actions';\nimport { InitialStateType } from '../types';\n\nconst initialState: InitialStateType = {\n  data: [\n    {\n      name: 'Total office',\n    },\n    {\n      name: 'Total remote',\n    },\n  ],\n  columns: [],\n  firstRangeDate: null,\n  modalFlag: false,\n};\n\nexport const Reducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case SAVE_ALL_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n\n    case SAVE_ALL_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n\n    case SAVE_FIRST_RANGE_DATE:\n      return {\n        ...state,\n        firstRangeDate: action.firstRangeDate,\n      };\n\n    case SET_MODAL_FLAG:\n      return {\n        ...state,\n        modalFlag: action.modalFlag,\n      };\n\n    case ADD_NEW_EMPLOYEE:\n      return {\n        ...state,\n        data: [action.newEmployee, ...state.data],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { Reducer } from './Reducer/Reducer';\n\nexport const RootReducer = combineReducers({\n  reducer: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = (date: Date) => {\n  const currentDate = date;\n  const datesRange: any[] = [];\n  const datesLength = 60; // days in initial range\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './columns.module.css';\n\nconst columnGenerator = (date: Date) => {\n  if (!date) {\n    return [];\n  }\n\n  const datesRange = dateGenerator(new Date(date));\n\n  let monthDays: any = [];\n  const columns: any = [\n    {\n      Header: <div className={styles.headerFirstCol}>Employee</div>,\n      accessor: 'name',\n    },\n  ];\n\n  for (let i = 0; i < datesRange.length; i++) {\n    let currDayMonth = datesRange[i].date.slice(3, 5);\n    let nextDayMonth =\n      datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n    let year = datesRange[i].date.slice(6, 8);\n\n    if (currDayMonth === nextDayMonth) {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `accessor_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return <div>{sortArr.length}</div>;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return <div>{cell.rows.length - sortArr.length - 2}</div>;\n          }\n\n          return <div>{cell.value}</div>;\n        },\n      });\n    } else {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `accessor_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return <div>{sortArr.length}</div>;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return <div>{cell.rows.length - sortArr.length - 2}</div>;\n          }\n          return <div>{cell.value}</div>;\n        },\n      });\n\n      columns.push({\n        Header: (\n          <div\n            className={clsx(styles.cell, styles.headerTopCell)}\n          >{`${monthsNames(currDayMonth)} '${year}`}</div>\n        ),\n        accessor: currDayMonth,\n        columns: [...monthDays],\n      });\n      monthDays.length = 0;\n    }\n  }\n\n  return columns;\n};\n\nexport default columnGenerator;\n","import {\n  FETCH_SAGA,\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n} from './constants';\nimport { IData } from './types';\n\nexport const fetchSaga = (data: IData[]) => {\n  return {\n    type: FETCH_SAGA,\n    data,\n  } as const;\n};\n\nexport const saveAllData = (data: IData[]) => {\n  return {\n    type: SAVE_ALL_DATA,\n    data,\n  } as const;\n};\n\nexport const saveAllColumns = (columns: any[]) => {\n  return {\n    type: SAVE_ALL_COLUMNS,\n    columns,\n  } as const;\n};\n\nexport const saveFirstRangeDate = (firstRangeDate: Date) => {\n  return {\n    type: SAVE_FIRST_RANGE_DATE,\n    firstRangeDate,\n  } as const;\n};\n\nexport const setModalFlag = (modalFlag: boolean) => {\n  return {\n    type: SET_MODAL_FLAG,\n    modalFlag,\n  } as const;\n};\n\nexport const addNewEmployee = (newEmployee: IData) => {\n  return {\n    type: ADD_NEW_EMPLOYEE,\n    newEmployee,\n  } as const;\n};\n\ntype FetchSagaType = ReturnType<typeof fetchSaga>;\ntype saveAllDataType = ReturnType<typeof saveAllData>;\ntype saveAllColumnsType = ReturnType<typeof saveAllColumns>;\ntype saveFirstRangeDateType = ReturnType<typeof saveFirstRangeDate>;\ntype setModalFlagType = ReturnType<typeof setModalFlag>;\ntype addNewEmployeeType = ReturnType<typeof addNewEmployee>;\n\nexport type ActionsType =\n  | FetchSagaType\n  | saveAllDataType\n  | saveAllColumnsType\n  | saveFirstRangeDateType\n  | setModalFlagType\n  | addNewEmployeeType;\n","import { put, takeEvery } from 'redux-saga/effects';\n\nimport columnGenerator from '../../../components/Calendar/assets/columns';\n\nimport { saveAllColumns, saveAllData, saveFirstRangeDate } from '../../actions';\n\nimport { FETCH_SAGA } from '../../constants';\n\nimport { FetchSagaActionType, IData } from '../../types';\n\nfunction* sagaWorker(action: FetchSagaActionType) {\n  try {\n    const firstRangeDateFromLocalStorage: Date = yield localStorage.getItem(\n      'firstRangeDate',\n    );\n    const calendarDataFromLocalStorage: IData[] = yield JSON.parse(\n      localStorage.getItem('calendar') || '[]',\n    );\n\n    let initialColumns: any[] = yield [];\n\n    if (firstRangeDateFromLocalStorage) {\n      initialColumns = yield columnGenerator(firstRangeDateFromLocalStorage);\n      yield put(saveFirstRangeDate(firstRangeDateFromLocalStorage));\n    } else {\n      initialColumns = yield columnGenerator(new Date());\n      yield localStorage.setItem('firstRangeDate', String(new Date()));\n    }\n\n    yield put(saveAllColumns(initialColumns));\n\n    if (calendarDataFromLocalStorage.length) {\n      yield put(saveAllData(calendarDataFromLocalStorage));\n    } else {\n      yield localStorage.setItem('calendar', JSON.stringify(action.data));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* FetchSagaWatcher() {\n  yield takeEvery(FETCH_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { FetchSagaWatcher } from './Reducer/sagas/FetchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(FetchSagaWatcher)]);\n}\n","import React from 'react';\n\nimport { IModal } from './types';\n\nimport styles from './Modal.module.css';\n\nconst Modal: React.FC<IModal> = ({ onCloseButtonClick, modalContent }) => {\n  const InnerComponent = modalContent;\n\n  const onCloseClick = () => {\n    onCloseButtonClick();\n  };\n\n  return (\n    <div className={styles.modalWrapper}>\n      <div className={styles.modal}>\n        <button type=\"button\" onClick={onCloseClick} className={styles.button}>\n          <span />\n        </button>\n\n        <InnerComponent />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({\n  buttonText,\n  buttonType,\n  onButtonClick,\n  stylesButton,\n}) => {\n  return (\n    <button\n      type={buttonType}\n      onClick={onButtonClick}\n      className={clsx(styles.button, stylesButton)}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default Button;\n","/* eslint-disable indent */\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTable } from 'react-table';\nimport clsx from 'clsx';\n\nimport { saveAllData } from '../../store/actions';\n\nimport { IData } from '../../store/types';\nimport { ICalendar } from './types';\n\nimport styles from './Calendar.module.css';\n\nconst Calendar: React.FC<ICalendar> = ({ data, columns }) => {\n  const dispatch = useDispatch();\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  const deleteRowHandler = (delRow: string) => {\n    const newData = data.filter((el: IData) => el.name !== delRow);\n\n    dispatch(saveAllData(newData));\n    localStorage.setItem('calendar', JSON.stringify(newData));\n  };\n\n  const onCellClick = (cellId: string, rowId: string) => {\n    let newData: IData[] = data.concat();\n\n    if (Object.keys(newData[Number(rowId)]).includes(cellId)) {\n      delete newData[Number(rowId)][cellId];\n    } else {\n      newData[Number(rowId)][cellId] = 1;\n    }\n\n    dispatch(saveAllData(newData));\n    localStorage.setItem('calendar', JSON.stringify(newData));\n  };\n\n  return (\n    <table {...getTableProps()} className={styles.table}>\n      <thead>\n        {headerGroups.map((headerGroup, j) => (\n          <tr\n            {...headerGroup.getHeaderGroupProps()}\n            key={`${headerGroup} ${Math.random()}`}\n          >\n            {headerGroup.headers.map((column, i) => (\n              <th\n                {...column.getHeaderProps()}\n                className={clsx(\n                  i === 0 && styles.firstCell,\n                  i === 0 && j === 0 && styles.hiddenCell,\n                  i === 0 && j === 1 && styles.hiddenCell2,\n                  styles.tableHeader,\n                )}\n                key={`${column} ${Math.random()}`}\n              >\n                {column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} key={`${row} ${Math.random()}`}>\n              {row.cells.map((cell, i) => {\n                return (\n                  <td\n                    {...cell.getCellProps()}\n                    className={clsx(\n                      i === 0 && styles.firstCell,\n                      styles.tableCell,\n                    )}\n                    key={`${cell} ${Math.random()}`}\n                  >\n                    <div\n                      className={clsx(i === 0 && styles.left, styles.tdInner)}\n                    >\n                      {i !== 0 &&\n                      row.index !== data.length - 1 &&\n                      row.index !== data.length - 2 ? (\n                        <button\n                          type=\"button\"\n                          className={styles.cellButton}\n                          onClick={() =>\n                            onCellClick(cell.column.id, cell.row.id)\n                          }\n                        >\n                          {cell.render('Cell')}\n                        </button>\n                      ) : (\n                        cell.render('Cell')\n                      )}\n                      {i === 0 &&\n                        cell.value !== 'Total office' &&\n                        cell.value !== 'Total remote' && (\n                          <button\n                            type=\"button\"\n                            className={styles.buttonDelRow}\n                            onClick={() => deleteRowHandler(cell.value)}\n                          >\n                            <span />\n                          </button>\n                        )}\n                    </div>\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Calendar;\n","import { dateFormatter } from './dateFormatter';\n\nconst accessorDatesGenerator: any = (date: Date, name: string) => {\n  const currentDate = date;\n  // const datesRange: any[] = [];\n  const datesLength = 365; // days in initial range\n\n  let newObj: any = {};\n\n  newObj.name = name;\n\n  for (let i = 0; i < datesLength; i++) {\n    const date = dateFormatter(new Date(currentDate.getTime() + 86400000 * i));\n    const newDate = `accessor_${date.slice(0, 2)}${date.slice(\n      3,\n      5,\n    )}${date.slice(6, 8)}`;\n\n    newObj[newDate] = 1;\n    // datesRange.push(newObj);\n  }\n  return newObj;\n};\n\nexport default accessorDatesGenerator;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addNewEmployee, setModalFlag } from '../../store/actions';\nimport { AppStateType } from '../../store/RootReducer';\nimport { IData } from '../../store/types';\n\nimport Button from '../../ui/Button';\n\nimport accessorDatesGenerator from '../../utils/accessorDatesGenerator';\n\nimport styles from './ModalContent.module.css';\n\nconst ModalContent: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector<AppStateType, IData[]>(\n    (store) => store.reducer.data,\n  );\n\n  const [name, setName] = useState<string>('');\n  const [typeOfWork, setTypeOfWork] = useState<string>('office');\n\n  const onRadioClick = (type: string) => {\n    setTypeOfWork(type);\n  };\n\n  const onChangeNameHandler = (event: any) => {\n    setName(event.target.value);\n  };\n\n  const onSubmitHahdler = () => {\n    if (typeOfWork === 'office') {\n      const newEmployee = { name };\n      dispatch(addNewEmployee(newEmployee));\n      localStorage.setItem('calendar', JSON.stringify([newEmployee, ...data]));\n    }\n\n    if (typeOfWork === 'remote') {\n      const newEmployee = accessorDatesGenerator(new Date(), name);\n      dispatch(addNewEmployee(newEmployee));\n      localStorage.setItem('calendar', JSON.stringify([newEmployee, ...data]));\n    }\n\n    dispatch(setModalFlag(false));\n  };\n\n  return (\n    <div className={styles.modalContent}>\n      <h2>Add a new eployee</h2>\n\n      <form onSubmit={onSubmitHahdler} className={styles.form}>\n        <div className={styles.labelWrapper}>\n          <label>Name: </label>\n          <input type=\"text\" onChange={onChangeNameHandler} />\n        </div>\n\n        <div className={styles.labelWrapper}>\n          <label>Place of work:</label>\n\n          <div className={styles.radioWrapper}>\n            <div>\n              <label>office</label>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value={typeOfWork}\n                defaultChecked\n                onClick={() => onRadioClick('office')}\n              />\n            </div>\n\n            <div>\n              <label>remote</label>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value={typeOfWork}\n                onClick={() => onRadioClick('remote')}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <Button\n        buttonText=\"Add\"\n        buttonType=\"submit\"\n        onButtonClick={onSubmitHahdler}\n      />\n    </div>\n  );\n};\n\nexport default ModalContent;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport Calendar from '../../components/Calendar';\nimport ModalContent from '../../components/ModalContent';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { InitialStateType } from '../../store/types';\nimport { fetchSaga, setModalFlag } from '../../store/actions';\n\nimport styles from './Root.module.css';\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const store = useSelector<AppStateType, InitialStateType>(\n    (store) => store.reducer,\n  );\n\n  useEffect(() => {\n    dispatch(fetchSaga(store.data));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const onOpenModal = () => {\n    dispatch(setModalFlag(true));\n  };\n\n  const onCloseModal = () => {\n    dispatch(setModalFlag(false));\n  };\n\n  return (\n    <div className={styles.root_wrapper}>\n      {store.modalFlag && (\n        <Modal onCloseButtonClick={onCloseModal} modalContent={ModalContent} />\n      )}\n\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      <section className={styles.section_wrapper}>\n        <Button\n          buttonText=\"Add employee\"\n          buttonType=\"button\"\n          onButtonClick={onOpenModal}\n        />\n      </section>\n\n      <section\n        className={clsx(styles.section_wrapper, styles.calendar_wrapper)}\n      >\n        <Calendar data={store.data} columns={store.columns} />\n      </section>\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\n\nimport Root from '../views/Root';\n\nimport './App.module.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\nimport App from './App/App';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Calendar_table__2gz7h\",\"tableHeader\":\"Calendar_tableHeader__1Tj0Q\",\"tableCell\":\"Calendar_tableCell__3k-KB\",\"cell\":\"Calendar_cell__14FkO\",\"firstCell\":\"Calendar_firstCell__3YC6V\",\"buttonDelRow\":\"Calendar_buttonDelRow__3yO2B\",\"tdInner\":\"Calendar_tdInner__1Qqal\",\"left\":\"Calendar_left__2ULUU\",\"hiddenCell\":\"Calendar_hiddenCell__3FmDQ\",\"hiddenCell2\":\"Calendar_hiddenCell2__1IDBb\",\"cellButton\":\"Calendar_cellButton__3tjSx\"};"],"sourceRoot":""}