{"version":3,"sources":["components/Calendar/assets/columns.module.css","components/ModalContent/ModalContent.module.css","ui/Modal/Modal.module.css","components/ModalDelContent/ModalDelContent.module.css","ui/Button/Button.module.css","store/constants.ts","constants/table.ts","store/Reducer/Reducer.ts","store/RootReducer.ts","utils/dateFormatter.ts","utils/dateGenerator.ts","utils/monthsNames.ts","components/Calendar/assets/columns.tsx","store/actions.ts","store/Reducer/sagas/FetchSaga.ts","store/RootSaga.ts","ui/Modal/Modal.tsx","ui/Button/Button.tsx","components/Calendar/Calendar.tsx","utils/accessorDatesGenerator.ts","components/ModalContent/ModalContent.tsx","components/ModalDelContent/ModalDelContent.tsx","views/Root/Root.tsx","App/App.tsx","index.tsx","views/Root/Root.module.css","components/Calendar/Calendar.module.css"],"names":["module","exports","FETCH_SAGA","SAVE_ALL_DATA","SAVE_ALL_COLUMNS","SAVE_FIRST_RANGE_DATE","SAVE_MAX_VALUE","SET_MODAL_FLAG","ADD_NEW_EMPLOYEE","ADD_COLUMNS_QUANTITY","initialData","name","defaultCell","row","cell","initialState","data","columns","firstRangeDate","modalFlag","maxValue","columnsQuantity","RootReducer","combineReducers","reducer","state","action","type","newEmployee","dateFormatter","dataCreated","day","getDate","month","getMonth","year","String","getFullYear","slice","dateGenerator","date","datesLength","currentDate","datesRange","i","push","Date","getTime","getDay","monthsNames","Number","columnGenerator","maxValueIn","monthDays","Header","className","styles","headerFirstCol","accessor","length","currDayMonth","nextDayMonth","clsx","weekend","Cell","index","rows","filter","el","Object","keys","join","includes","column","id","sortArr","value","red","headerTopCell","fetchSaga","saveAllData","saveFirstRangeDate","setModalFlag","addNewEmployee","saveMaxValue","setColumnsQuantity","sagaWorker","FetchSagaWatcher","localStorage","getItem","firstRangeDateFromLocalStorage","JSON","parse","calendarDataFromLocalStorage","columnsQuantityFromLocalStorage","put","setItem","initialColumns","stringify","console","log","takeEvery","rootSaga","all","fork","Modal","onCloseButtonClick","InnerComponent","modalContent","onCloseClick","modalWrapper","modal","onClick","button","Button","buttonText","buttonType","onButtonClick","stylesButton","disabled","Calendar","dispatch","useDispatch","useState","isCtrlPressed","setIsCtrlPressed","startPoint","setStartPoint","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","useEffect","window","addEventListener","event","keyCode","table","map","headerGroup","j","getHeaderGroupProps","key","Math","random","headers","getHeaderProps","firstCell","hiddenCell","hiddenCell2","tableHeader","render","getRowProps","cells","getCellProps","tableCell","left","tdInner","cellButton","selected","cellButtonFull","cellId","rowId","newData","concat","start","end","newCellId","onCellClick","buttonDelRow","delRow","deleteRowHandler","accessorDatesGenerator","newObj","ModalContent","ref","useRef","current","focus","useSelector","store","setName","typeOfWork","setTypeOfWork","validFlag","setValidFlag","onRadioClick","onSubmitHahdler","preventDefault","namesArr","addArr","split","reverse","onSubmit","form","labelWrapper","inputWrapper","onChange","target","trim","validationText","noteText","radioWrapper","defaultChecked","buttons_wrapper","deleteButton","ModalDelContent","onCloseModalFunc","Root","delModal","setDelModal","onToggleDelModal","root_wrapper","section_wrapper","disabledButton","calendar_wrapper","addPeriodButtonWrapper","addPeriodButton","newColumnsQuantity","sectionTotal","sectionMaxEmployees","min","section_wrapper_notice","example_item","examle_empty","examle_full","App","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5fe80344.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"columns_cell__32YGY\",\"weekend\":\"columns_weekend__3-10h\",\"headerFirstCol\":\"columns_headerFirstCol__2_EEi\",\"headerTopCell\":\"columns_headerTopCell__1xdye\",\"currentDate\":\"columns_currentDate__10MN6\",\"red\":\"columns_red__3001Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContent\":\"ModalContent_modalContent__2Ret1\",\"form\":\"ModalContent_form__169qh\",\"labelWrapper\":\"ModalContent_labelWrapper__2EgFl\",\"radioWrapper\":\"ModalContent_radioWrapper__2iTLh\",\"buttons_wrapper\":\"ModalContent_buttons_wrapper__1FQ_W\",\"deleteButton\":\"ModalContent_deleteButton__1z69p\",\"inputWrapper\":\"ModalContent_inputWrapper__1Wc4T\",\"validationText\":\"ModalContent_validationText__2UqVI\",\"noteText\":\"ModalContent_noteText__6A_m5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__2YViX\",\"modal\":\"Modal_modal__26uN6\",\"button\":\"Modal_button__36BgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContent\":\"ModalDelContent_modalContent__MC1xq\",\"buttons_wrapper\":\"ModalDelContent_buttons_wrapper__3jGJi\",\"deleteButton\":\"ModalDelContent_deleteButton__2gpJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","export const FETCH_SAGA = 'FETCH_SAGA';\n\nexport const SAVE_ALL_DATA = 'SAVE_ALL_DATA';\nexport const SAVE_ALL_COLUMNS = 'SAVE_ALL_COLUMNS';\nexport const SAVE_FIRST_RANGE_DATE = 'SAVE_FIRST_RANGE_DATE';\nexport const SAVE_MAX_VALUE = 'SAVE_MAX_VALUE';\n\nexport const SET_MODAL_FLAG = 'SET_MODAL_FLAG';\n\nexport const ADD_NEW_EMPLOYEE = 'ADD_NEW_EMPLOYEE';\nexport const ADD_COLUMNS_QUANTITY = 'ADD_COLUMNS_QUANTITY';\n","import { IData } from '../store/types';\n\nexport const initialData: IData[] = [\n  {\n    name: 'Total office',\n  },\n  {\n    name: 'Total remote',\n  },\n];\n\nexport const defaultCell = {\n  row: '',\n  cell: '',\n};\n","import {\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n  SAVE_MAX_VALUE,\n  ADD_COLUMNS_QUANTITY,\n} from '../constants';\n\nimport { initialData } from '../../constants/table';\n\nimport { ActionsType } from '../actions';\nimport { InitialStateType } from '../types';\n\nconst initialState: InitialStateType = {\n  data: initialData,\n  columns: [],\n  firstRangeDate: null,\n  modalFlag: false,\n  maxValue: 1,\n  columnsQuantity: 90,\n};\n\nexport const Reducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case SAVE_ALL_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n\n    case SAVE_ALL_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n\n    case SAVE_FIRST_RANGE_DATE:\n      return {\n        ...state,\n        firstRangeDate: action.firstRangeDate,\n      };\n\n    case SET_MODAL_FLAG:\n      return {\n        ...state,\n        modalFlag: action.modalFlag,\n      };\n\n    case ADD_NEW_EMPLOYEE:\n      return {\n        ...state,\n        data: [action.newEmployee, ...state.data],\n      };\n\n    case SAVE_MAX_VALUE:\n      return {\n        ...state,\n        maxValue: action.maxValue,\n      };\n\n    case ADD_COLUMNS_QUANTITY:\n      return {\n        ...state,\n        columnsQuantity: action.columnsQuantity,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { Reducer } from './Reducer/Reducer';\n\nexport const RootReducer = combineReducers({\n  reducer: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = String(dataCreated.getFullYear()).slice(2, 4);\n\n  return `${day}.${month}.${year}`;\n};\n","import { dateFormatter } from './dateFormatter';\n\nconst dateGenerator: any = (date: Date, datesLength: number) => {\n  const currentDate = date;\n  const datesRange: any[] = [];\n\n  for (let i = 0; i < datesLength; i++) {\n    datesRange.push({\n      date: dateFormatter(new Date(currentDate.getTime() + 86400000 * i)),\n      day: new Date(currentDate.getTime() + 86400000 * i).getDay(),\n    });\n  }\n\n  return datesRange;\n};\n\nexport default dateGenerator;\n","const monthsNames = (month: string | number) => {\n  const namesArray = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const index = Number(month) - 1;\n  return namesArray[index];\n};\n\nexport default monthsNames;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport dateGenerator from '../../../utils/dateGenerator';\nimport monthsNames from '../../../utils/monthsNames';\n\nimport styles from './columns.module.css';\nimport { dateFormatter } from '../../../utils/dateFormatter';\n\nconst columnGenerator = (date: Date, maxValue: number, datesLength: number) => {\n  if (!date) {\n    return [];\n  }\n\n  const datesRange = dateGenerator(new Date(date), datesLength);\n  const currentDate = dateFormatter(new Date());\n  const maxValueIn = maxValue || 1;\n\n  let monthDays: any = [];\n  const columns: any = [\n    {\n      Header: <div className={styles.headerFirstCol}>Employee</div>,\n      accessor: 'name',\n    },\n  ];\n\n  for (let i = 0; i < datesRange.length; i++) {\n    let currDayMonth = datesRange[i].date.slice(3, 5);\n    let nextDayMonth =\n      datesRange.length - 1 !== i && datesRange[i + 1].date.slice(3, 5);\n    let year = datesRange[i].date.slice(6, 8);\n\n    if (currDayMonth === nextDayMonth) {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n              datesRange[i].date === currentDate && styles.currentDate,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n\n          return <div>{cell.value}</div>;\n        },\n      });\n    } else {\n      monthDays.push({\n        Header: (\n          <div\n            className={clsx(\n              datesRange[i].day === 0 || datesRange[i].day === 6\n                ? styles.weekend\n                : '',\n              styles.cell,\n            )}\n          >\n            {datesRange[i].date.slice(0, 2)}\n          </div>\n        ),\n        accessor: `a_${datesRange[i].date.slice(0, 2)}${datesRange[\n          i\n        ].date.slice(3, 5)}${datesRange[i].date.slice(6, 8)}`,\n        Cell: (cell: any) => {\n          if (cell.row.index === cell.rows.length - 1) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            return sortArr.length;\n          }\n\n          if (cell.row.index === cell.rows.length - 2) {\n            const sortArr = cell.data.filter((el: any) =>\n              Object.keys(el).join(' ').includes(cell.column.id),\n            );\n            const value = cell.rows.length - sortArr.length - 2;\n            return (\n              <div className={clsx(value > maxValueIn && styles.red)}>\n                {value}\n              </div>\n            );\n          }\n          return <div>{cell.value}</div>;\n        },\n      });\n\n      columns.push({\n        Header: (\n          <div\n            className={clsx(styles.cell, styles.headerTopCell)}\n          >{`${monthsNames(currDayMonth)} '${year}`}</div>\n        ),\n        accessor: currDayMonth,\n        columns: [...monthDays],\n      });\n      monthDays.length = 0;\n    }\n  }\n  return columns;\n};\n\nexport default columnGenerator;\n","import {\n  FETCH_SAGA,\n  SAVE_ALL_DATA,\n  SAVE_ALL_COLUMNS,\n  SAVE_FIRST_RANGE_DATE,\n  SET_MODAL_FLAG,\n  ADD_NEW_EMPLOYEE,\n  SAVE_MAX_VALUE,\n  ADD_COLUMNS_QUANTITY,\n} from './constants';\nimport { IData } from './types';\n\nexport const fetchSaga = (\n  data: IData[],\n  maxValue: number,\n  columnsQuantity: number,\n) => {\n  return {\n    type: FETCH_SAGA,\n    data,\n    maxValue,\n    columnsQuantity,\n  } as const;\n};\n\nexport const saveAllData = (data: IData[]) => {\n  return {\n    type: SAVE_ALL_DATA,\n    data,\n  } as const;\n};\n\nexport const saveAllColumns = (columns: any[]) => {\n  return {\n    type: SAVE_ALL_COLUMNS,\n    columns,\n  } as const;\n};\n\nexport const saveFirstRangeDate = (firstRangeDate: Date) => {\n  return {\n    type: SAVE_FIRST_RANGE_DATE,\n    firstRangeDate,\n  } as const;\n};\n\nexport const setModalFlag = (modalFlag: boolean) => {\n  return {\n    type: SET_MODAL_FLAG,\n    modalFlag,\n  } as const;\n};\n\nexport const addNewEmployee = (newEmployee: IData) => {\n  return {\n    type: ADD_NEW_EMPLOYEE,\n    newEmployee,\n  } as const;\n};\n\nexport const saveMaxValue = (maxValue: number) => {\n  return {\n    type: SAVE_MAX_VALUE,\n    maxValue,\n  } as const;\n};\n\nexport const setColumnsQuantity = (columnsQuantity: number) => {\n  return {\n    type: ADD_COLUMNS_QUANTITY,\n    columnsQuantity,\n  } as const;\n};\n\ntype FetchSagaType = ReturnType<typeof fetchSaga>;\ntype saveAllDataType = ReturnType<typeof saveAllData>;\ntype saveAllColumnsType = ReturnType<typeof saveAllColumns>;\ntype saveFirstRangeDateType = ReturnType<typeof saveFirstRangeDate>;\ntype setModalFlagType = ReturnType<typeof setModalFlag>;\ntype addNewEmployeeType = ReturnType<typeof addNewEmployee>;\ntype saveMaxValueType = ReturnType<typeof saveMaxValue>;\ntype setColumnsQuantityType = ReturnType<typeof setColumnsQuantity>;\n\nexport type ActionsType =\n  | FetchSagaType\n  | saveAllDataType\n  | saveAllColumnsType\n  | saveFirstRangeDateType\n  | setModalFlagType\n  | addNewEmployeeType\n  | saveMaxValueType\n  | setColumnsQuantityType;\n","import { put, takeEvery } from 'redux-saga/effects';\n\nimport columnGenerator from '../../../components/Calendar/assets/columns';\n\nimport {\n  saveAllColumns,\n  saveAllData,\n  saveFirstRangeDate,\n  saveMaxValue,\n  setColumnsQuantity,\n} from '../../actions';\n\nimport { FETCH_SAGA } from '../../constants';\n\nimport { FetchSagaActionType, IData } from '../../types';\n\nfunction* sagaWorker(action: FetchSagaActionType) {\n  try {\n    const firstRangeDateFromLocalStorage: Date = yield localStorage.getItem(\n      'firstRangeDate',\n    );\n    const calendarDataFromLocalStorage: IData[] = yield JSON.parse(\n      localStorage.getItem('calendar') || '[]',\n    );\n    const maxValue: number = yield localStorage.getItem('maxValue');\n    const columnsQuantityFromLocalStorage: number = yield localStorage.getItem(\n      'columnsQuantity',\n    );\n\n    if (maxValue) {\n      yield put(saveMaxValue(Number(maxValue)));\n    } else {\n      yield localStorage.setItem('maxValue', String(action.maxValue));\n    }\n\n    let initialColumns: any[] = yield [];\n\n    if (columnsQuantityFromLocalStorage) {\n      yield put(setColumnsQuantity(Number(columnsQuantityFromLocalStorage)));\n    } else {\n      yield localStorage.setItem(\n        'columnsQuantity',\n        String(action.columnsQuantity),\n      );\n    }\n\n    if (firstRangeDateFromLocalStorage) {\n      initialColumns = yield columnGenerator(\n        firstRangeDateFromLocalStorage,\n        maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield put(saveFirstRangeDate(firstRangeDateFromLocalStorage));\n    } else {\n      initialColumns = yield columnGenerator(\n        new Date(),\n        action.maxValue,\n        columnsQuantityFromLocalStorage || action.columnsQuantity,\n      );\n      yield localStorage.setItem('firstRangeDate', String(new Date()));\n    }\n\n    yield put(saveAllColumns(initialColumns));\n\n    if (calendarDataFromLocalStorage.length) {\n      yield put(saveAllData(calendarDataFromLocalStorage));\n    } else {\n      yield localStorage.setItem('calendar', JSON.stringify(action.data));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* FetchSagaWatcher() {\n  yield takeEvery(FETCH_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { FetchSagaWatcher } from './Reducer/sagas/FetchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(FetchSagaWatcher)]);\n}\n","import React from 'react';\n\nimport { IModal } from './types';\n\nimport styles from './Modal.module.css';\n\nconst Modal: React.FC<IModal> = ({ onCloseButtonClick, modalContent }) => {\n  const InnerComponent = modalContent;\n\n  const onCloseClick = () => {\n    onCloseButtonClick();\n  };\n\n  return (\n    <div className={styles.modalWrapper}>\n      <div className={styles.modal}>\n        <button type=\"button\" onClick={onCloseClick} className={styles.button}>\n          <span />\n        </button>\n\n        <InnerComponent onCloseClick={onCloseClick} />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({\n  buttonText,\n  buttonType,\n  onButtonClick,\n  stylesButton,\n  disabled,\n}) => {\n  return (\n    <button\n      type={buttonType}\n      onClick={onButtonClick}\n      className={clsx(styles.button, stylesButton)}\n      disabled={disabled}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default Button;\n","/* eslint-disable indent */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTable } from 'react-table';\nimport clsx from 'clsx';\n\nimport { saveAllData } from '../../store/actions';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nimport { defaultCell } from '../../constants/table';\n\nimport { IData } from '../../store/types';\nimport { ICalendar, IStartPoint } from './types';\n\nimport styles from './Calendar.module.css';\n\nconst Calendar: React.FC<ICalendar> = ({ data, columns }) => {\n  const dispatch = useDispatch();\n\n  const currentDate = dateFormatter(new Date());\n\n  const [isCtrlPressed, setIsCtrlPressed] = useState<boolean>(false);\n  const [startPoint, setStartPoint] = useState<IStartPoint>(defaultCell);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  const deleteRowHandler = (delRow: string) => {\n    const newData = data.filter((el: IData) => el.name !== delRow);\n\n    dispatch(saveAllData(newData));\n    localStorage.setItem('calendar', JSON.stringify(newData));\n  };\n\n  // catch and fix the pushing of Ctrl\n  useEffect(() => {\n    window.addEventListener('keydown', (event: any) => {\n      if (event.keyCode === 17 || event.keyCode === 91) {\n        setIsCtrlPressed(true);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    window.addEventListener('keyup', (event: any) => {\n      if (event.keyCode === 17 || event.keyCode === 91) {\n        setStartPoint(defaultCell);\n        setIsCtrlPressed(false);\n      }\n    });\n  }, []);\n\n  const onCellClick = (cellId: string, rowId: string) => {\n    let newData: IData[] = data.concat();\n\n    // save to local state the 1st multy change click\n    if (isCtrlPressed && startPoint.row === '') {\n      setStartPoint({ row: rowId, cell: cellId });\n    }\n\n    // the 2nd click\n    if (isCtrlPressed && startPoint.row === rowId) {\n      let start = Number(\n        `${startPoint.cell.slice(6)}${startPoint.cell.slice(\n          4,\n          6,\n        )}${startPoint.cell.slice(2, 4)}`,\n      );\n      let end = Number(\n        `${cellId.slice(6)}${cellId.slice(4, 6)}${cellId.slice(2, 4)}`,\n      );\n\n      if (end < start) {\n        [start, end] = [end - 1, start - 1];\n      }\n\n      for (let i = start + 1; i <= end; i++) {\n        const newCellId = `a_${String(i).slice(4)}${String(i).slice(\n          2,\n          4,\n        )}${String(i).slice(0, 2)}`;\n\n        if (Object.keys(newData[Number(rowId)]).includes(newCellId)) {\n          delete newData[Number(rowId)][newCellId];\n        } else {\n          newData[Number(rowId)][newCellId] = 1;\n        }\n      }\n      setStartPoint(defaultCell);\n      setIsCtrlPressed(false);\n    } else {\n      // the single click\n      // eslint-disable-next-line no-lonely-if\n      if (Object.keys(newData[Number(rowId)]).includes(cellId)) {\n        delete newData[Number(rowId)][cellId];\n      } else {\n        newData[Number(rowId)][cellId] = 1;\n      }\n    }\n    dispatch(saveAllData(newData));\n    localStorage.setItem('calendar', JSON.stringify(newData));\n  };\n\n  return (\n    <table {...getTableProps()} className={styles.table}>\n      <thead>\n        {headerGroups.map((headerGroup, j) => (\n          <tr\n            {...headerGroup.getHeaderGroupProps()}\n            key={`${headerGroup} ${Math.random()}`}\n          >\n            {headerGroup.headers.map((column, i) => (\n              <th\n                {...column.getHeaderProps()}\n                className={clsx(\n                  i === 0 && styles.firstCell,\n                  i === 0 && j === 0 && styles.hiddenCell,\n                  i === 0 && j === 1 && styles.hiddenCell2,\n                  styles.tableHeader,\n                )}\n                key={`${column} ${Math.random()}`}\n              >\n                {column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} key={`${row} ${Math.random()}`}>\n              {row.cells.map((cell, i) => {\n                return (\n                  <td\n                    {...cell.getCellProps()}\n                    className={clsx(\n                      i === 0 && styles.firstCell,\n                      styles.tableCell,\n                      String(cell.column.id.slice(2)) ===\n                        String(\n                          `${currentDate.slice(0, 2)}${currentDate.slice(\n                            3,\n                            5,\n                          )}${currentDate.slice(6, 8)}`,\n                        ) && styles.currentDate,\n                    )}\n                    key={`${cell} ${Math.random()}`}\n                  >\n                    <div\n                      className={clsx(i === 0 && styles.left, styles.tdInner)}\n                    >\n                      {i !== 0 &&\n                      row.index !== data.length - 1 &&\n                      row.index !== data.length - 2 ? (\n                        <button\n                          type=\"button\"\n                          className={clsx(\n                            styles.cellButton,\n                            isCtrlPressed && styles.selected,\n                            cell.value === 1 && styles.cellButtonFull,\n                          )}\n                          onClick={() =>\n                            onCellClick(cell.column.id, cell.row.id)\n                          }\n                        >\n                          {cell.render('Cell')}\n                        </button>\n                      ) : (\n                        cell.render('Cell')\n                      )}\n                      {i === 0 &&\n                        cell.value !== 'Total office' &&\n                        cell.value !== 'Total remote' && (\n                          <button\n                            type=\"button\"\n                            className={styles.buttonDelRow}\n                            onClick={() => deleteRowHandler(cell.value)}\n                          >\n                            <span />\n                          </button>\n                        )}\n                    </div>\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Calendar;\n","import { dateFormatter } from './dateFormatter';\n\nconst accessorDatesGenerator: any = (date: Date, name: string) => {\n  const currentDate = date;\n  const datesLength = 90; // days in initial range\n\n  let newObj: any = {};\n\n  newObj.name = name;\n\n  for (let i = 0; i < datesLength; i++) {\n    const date = dateFormatter(new Date(currentDate.getTime() + 86400000 * i));\n    const newDate = `a_${date.slice(0, 2)}${date.slice(3, 5)}${date.slice(\n      6,\n      8,\n    )}`;\n\n    newObj[newDate] = 1;\n  }\n  return newObj;\n};\n\nexport default accessorDatesGenerator;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addNewEmployee, setModalFlag } from '../../store/actions';\nimport { AppStateType } from '../../store/RootReducer';\nimport { IData } from '../../store/types';\n\nimport Button from '../../ui/Button';\n\nimport accessorDatesGenerator from '../../utils/accessorDatesGenerator';\n\nimport styles from './ModalContent.module.css';\n\nconst ModalContent: React.FC = () => {\n  const dispatch = useDispatch();\n  const ref: any = useRef(null);\n\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const data = useSelector<AppStateType, IData[]>(\n    (store) => store.reducer.data,\n  );\n\n  const [name, setName] = useState<string>('');\n  const [typeOfWork, setTypeOfWork] = useState<string>('office');\n  const [validFlag, setValidFlag] = useState<boolean>(false);\n\n  const onRadioClick = (type: string) => {\n    setTypeOfWork(type);\n  };\n\n  const onChangeNameHandler = (event: any) => {\n    setValidFlag(false);\n    setName(event.target.value.trim());\n  };\n\n  const onSubmitHahdler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (!name) {\n      setValidFlag(true);\n      return;\n    }\n\n    let namesArr: string[] = [];\n    const re = /\\s*,\\s*/;\n    const addArr = [];\n    namesArr = name.split(re);\n\n    for (let i = 0; i < namesArr.length; i++) {\n      if (typeOfWork === 'office') {\n        const newEmployee = { name: namesArr[i] };\n        dispatch(addNewEmployee(newEmployee));\n        addArr.push(newEmployee);\n      }\n\n      if (typeOfWork === 'remote') {\n        const newEmployee = accessorDatesGenerator(new Date(), namesArr[i]);\n        dispatch(addNewEmployee(newEmployee));\n        addArr.push(newEmployee);\n      }\n    }\n\n    localStorage.setItem(\n      'calendar',\n      JSON.stringify(addArr.reverse().concat(data)),\n    );\n    addArr.length = 0;\n\n    dispatch(setModalFlag(false));\n  };\n\n  const onCloseModal = () => {\n    setName('');\n    setTypeOfWork('office');\n    dispatch(setModalFlag(false));\n  };\n\n  return (\n    <div className={styles.modalContent}>\n      <h2>Add a new employee</h2>\n\n      <form onSubmit={onSubmitHahdler} className={styles.form}>\n        <div className={styles.labelWrapper}>\n          <label>Name: </label>\n          <div className={styles.inputWrapper}>\n            <input type=\"text\" onChange={onChangeNameHandler} ref={ref} />\n            {validFlag && (\n              <span className={styles.validationText}>\n                The field can not be empty\n              </span>\n            )}\n            {!name.includes(',') && !validFlag && (\n              <span className={styles.noteText}>\n                You can enter more than 1 employee separated by commas\n              </span>\n            )}\n          </div>\n        </div>\n\n        <div className={styles.labelWrapper}>\n          <label>Place of work:</label>\n\n          <div className={styles.radioWrapper}>\n            <div>\n              <label>office</label>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value={typeOfWork}\n                defaultChecked\n                onClick={() => onRadioClick('office')}\n              />\n            </div>\n\n            <div>\n              <label>remote</label>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value={typeOfWork}\n                onClick={() => onRadioClick('remote')}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <div className={styles.buttons_wrapper}>\n        <Button\n          buttonText=\"Add\"\n          buttonType=\"submit\"\n          onButtonClick={onSubmitHahdler}\n        />\n\n        <Button\n          buttonText=\"Cancel\"\n          buttonType=\"button\"\n          onButtonClick={onCloseModal}\n          stylesButton={styles.deleteButton}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ModalContent;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  fetchSaga,\n  saveAllData,\n  saveFirstRangeDate,\n  setColumnsQuantity,\n} from '../../store/actions';\n\nimport Button from '../../ui/Button';\n\nimport { initialData } from '../../constants/table';\n\nimport { IModalDelContent } from './types';\n\nimport styles from './ModalDelContent.module.css';\n\nconst ModalDelContent: React.FC<IModalDelContent> = ({ onCloseClick }) => {\n  const dispatch = useDispatch();\n  const onCloseModalFunc = onCloseClick;\n\n  const deleteHandler = () => {\n    dispatch(saveFirstRangeDate(new Date()));\n    localStorage.setItem('firstRangeDate', String(new Date()));\n\n    dispatch(saveAllData(initialData));\n    localStorage.setItem('calendar', JSON.stringify(initialData));\n\n    localStorage.setItem('columnsQuantity', '90');\n    dispatch(setColumnsQuantity(90));\n    dispatch(fetchSaga(initialData, 1, 90));\n\n    onCloseModalFunc();\n  };\n\n  const onCloseModal = () => {\n    onCloseModalFunc();\n  };\n\n  return (\n    <div className={styles.modalContent}>\n      <h2>Are sure to delete all employees?</h2>\n\n      <div className={styles.buttons_wrapper}>\n        <Button\n          buttonText=\"Delete\"\n          buttonType=\"button\"\n          onButtonClick={deleteHandler}\n        />\n\n        <Button\n          buttonText=\"Cancel\"\n          buttonType=\"button\"\n          onButtonClick={onCloseModal}\n          stylesButton={styles.deleteButton}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ModalDelContent;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport Calendar from '../../components/Calendar';\nimport ModalContent from '../../components/ModalContent';\nimport ModalDelContent from '../../components/ModalDelContent';\nimport columnGenerator from '../../components/Calendar/assets/columns';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { InitialStateType } from '../../store/types';\nimport {\n  fetchSaga,\n  saveMaxValue,\n  setColumnsQuantity,\n  setModalFlag,\n} from '../../store/actions';\n\nimport styles from './Root.module.css';\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const store = useSelector<AppStateType, InitialStateType>(\n    (store) => store.reducer,\n  );\n\n  const [delModal, setDelModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    dispatch(fetchSaga(store.data, store.maxValue, store.columnsQuantity));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const onOpenModal = () => {\n    dispatch(setModalFlag(true));\n  };\n\n  const onCloseModal = () => {\n    dispatch(setModalFlag(false));\n  };\n\n  const onToggleDelModal = () => {\n    setDelModal(!delModal);\n  };\n\n  const onChangeMaxEmployees = (value: number) => {\n    if (value < 0) {\n      return;\n    }\n\n    localStorage.setItem('maxValue', String(value));\n    dispatch(saveMaxValue(value));\n    dispatch(fetchSaga(store.data, value, store.columnsQuantity));\n  };\n\n  useEffect(() => {\n    // @ts-ignore\n    return columnGenerator(store.firstRangeDate, store.maxValue, 90);\n  }, [store.firstRangeDate, store.maxValue]);\n\n  const addPeriodHandler = () => {\n    const newColumnsQuantity = store.columnsQuantity + 90;\n    localStorage.setItem('columnsQuantity', String(newColumnsQuantity));\n    dispatch(setColumnsQuantity(newColumnsQuantity));\n    dispatch(fetchSaga(store.data, store.maxValue, newColumnsQuantity));\n  };\n\n  return (\n    <div className={styles.root_wrapper}>\n      {store.modalFlag && (\n        <Modal onCloseButtonClick={onCloseModal} modalContent={ModalContent} />\n      )}\n\n      {delModal && (\n        <Modal\n          onCloseButtonClick={onToggleDelModal}\n          modalContent={ModalDelContent}\n        />\n      )}\n\n      <header>\n        <h1>Remote Calendar</h1>\n      </header>\n\n      <section className={clsx(styles.section_wrapper, styles.buttons_wrapper)}>\n        <Button\n          buttonText=\"Add employee\"\n          buttonType=\"button\"\n          onButtonClick={onOpenModal}\n        />\n\n        {store.data.length > 2 && (\n          <Button\n            buttonText={\n              store.data.length === 3\n                ? 'Delete employee'\n                : 'Delete all employees'\n            }\n            buttonType=\"button\"\n            onButtonClick={onToggleDelModal}\n            stylesButton={clsx(\n              styles.deleteButton,\n              store.data.length <= 2 && styles.disabledButton,\n            )}\n            disabled={store.data.length <= 2}\n          />\n        )}\n      </section>\n\n      {store.data.length > 2 && (\n        <>\n          <section\n            className={clsx(styles.section_wrapper, styles.calendar_wrapper)}\n          >\n            <Calendar data={store.data} columns={store.columns} />\n\n            <div className={styles.addPeriodButtonWrapper}>\n              <Button\n                buttonText=\"Add period\"\n                buttonType=\"button\"\n                stylesButton={styles.addPeriodButton}\n                onButtonClick={addPeriodHandler}\n              />\n            </div>\n          </section>\n\n          <section\n            className={clsx(styles.section_wrapper, styles.sectionTotal)}\n          >\n            <span>Total employees:</span>\n            <span>{store.data.length - 2}</span>\n          </section>\n\n          <section\n            className={clsx(styles.section_wrapper, styles.sectionMaxEmployees)}\n          >\n            <span>Set max employees in office</span>\n            <input\n              type=\"number\"\n              min={1}\n              value={store.maxValue}\n              onChange={(event) =>\n                onChangeMaxEmployees(Number(event?.target.value))\n              }\n            />\n          </section>\n\n          <section\n            className={clsx(\n              styles.section_wrapper,\n              styles.section_wrapper_notice,\n            )}\n          >\n            <h3>Notice</h3>\n\n            <div className={styles.example_item}>\n              <div className={styles.examle_empty} />\n              <span>office</span>\n            </div>\n\n            <div className={styles.example_item}>\n              <div className={styles.examle_empty}>\n                <div className={styles.examle_full} />\n              </div>\n              <span>remote</span>\n            </div>\n\n            <p>\n              You can change statuses of one employee in a few days at once by\n              click holding &apos;Ctrl&apos; button for Windows and Linux or\n              &apos;Command&apos; for MacOs\n            </p>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\n\nimport Root from '../views/Root';\n\nimport './App.module.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\nimport App from './App/App';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrapper\":\"Root_root_wrapper__eL6rt\",\"section_wrapper\":\"Root_section_wrapper__dgqip\",\"calendar_wrapper\":\"Root_calendar_wrapper__1t7Ie\",\"buttons_wrapper\":\"Root_buttons_wrapper__2--Nx\",\"deleteButton\":\"Root_deleteButton__IXlIF\",\"sectionTotal\":\"Root_sectionTotal__2sBkM\",\"disabledButton\":\"Root_disabledButton__3-F7j\",\"sectionMaxEmployees\":\"Root_sectionMaxEmployees__15T99\",\"addPeriodButtonWrapper\":\"Root_addPeriodButtonWrapper__1TEqF\",\"addPeriodButton\":\"Root_addPeriodButton__zSwil\",\"example_item\":\"Root_example_item__ssgKK\",\"examle_empty\":\"Root_examle_empty__1GOpV\",\"examle_full\":\"Root_examle_full__UAu05\",\"section_wrapper_notice\":\"Root_section_wrapper_notice___S4nm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Calendar_table__2gz7h\",\"tableHeader\":\"Calendar_tableHeader__1Tj0Q\",\"tableCell\":\"Calendar_tableCell__3k-KB\",\"cell\":\"Calendar_cell__14FkO\",\"firstCell\":\"Calendar_firstCell__3YC6V\",\"buttonDelRow\":\"Calendar_buttonDelRow__3yO2B\",\"tdInner\":\"Calendar_tdInner__1Qqal\",\"left\":\"Calendar_left__2ULUU\",\"hiddenCell\":\"Calendar_hiddenCell__3FmDQ\",\"hiddenCell2\":\"Calendar_hiddenCell2__1IDBb\",\"cellButton\":\"Calendar_cellButton__3tjSx\",\"selected\":\"Calendar_selected__2fs0o\",\"cellButtonFull\":\"Calendar_cellButtonFull__3JaX3\",\"currentDate\":\"Calendar_currentDate__1-LhY\"};"],"sourceRoot":""}